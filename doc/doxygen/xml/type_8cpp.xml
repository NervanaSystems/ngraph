<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="type_8cpp" kind="file" language="C++">
    <compoundname>type.cpp</compoundname>
    <includes local="no">memory</includes>
    <includes refid="except_8hpp" local="yes">ngraph/except.hpp</includes>
    <includes refid="log_8hpp" local="yes">ngraph/log.hpp</includes>
    <includes refid="type_8hpp" local="yes">ngraph/types/type.hpp</includes>
    <includes refid="util_8hpp" local="yes">ngraph/util.hpp</includes>
    <incdepgraph>
      <node id="16251">
        <label>list</label>
      </node>
      <node id="16250">
        <label>functional</label>
      </node>
      <node id="16235">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
        <childnode refid="16237" relation="include">
        </childnode>
        <childnode refid="16243" relation="include">
        </childnode>
      </node>
      <node id="16232">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="16233" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="16231" relation="include">
        </childnode>
      </node>
      <node id="16231">
        <label>stdexcept</label>
      </node>
      <node id="16245">
        <label>string</label>
      </node>
      <node id="16244">
        <label>map</label>
      </node>
      <node id="16253">
        <label>unordered_set</label>
      </node>
      <node id="16243">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="16244" relation="include">
        </childnode>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="16245" relation="include">
        </childnode>
        <childnode refid="16246" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
        <childnode refid="16230" relation="include">
        </childnode>
        <childnode refid="16232" relation="include">
        </childnode>
      </node>
      <node id="16240">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16241" relation="include">
        </childnode>
        <childnode refid="16242" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
      </node>
      <node id="16237">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="16238" relation="include">
        </childnode>
        <childnode refid="16239" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
      </node>
      <node id="16238">
        <label>cstdio</label>
      </node>
      <node id="16236">
        <label>vector</label>
      </node>
      <node id="16242">
        <label>utility</label>
      </node>
      <node id="16234">
        <label>sstream</label>
      </node>
      <node id="16239">
        <label>iostream</label>
      </node>
      <node id="16233">
        <label>deque</label>
      </node>
      <node id="16252">
        <label>unordered_map</label>
      </node>
      <node id="16249">
        <label>chrono</label>
      </node>
      <node id="16230">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="16231" relation="include">
        </childnode>
      </node>
      <node id="16228">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp</label>
        <link refid="type_8cpp"/>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16230" relation="include">
        </childnode>
        <childnode refid="16232" relation="include">
        </childnode>
        <childnode refid="16235" relation="include">
        </childnode>
        <childnode refid="16247" relation="include">
        </childnode>
      </node>
      <node id="16246">
        <label>type_traits</label>
      </node>
      <node id="16241">
        <label>set</label>
      </node>
      <node id="16248">
        <label>algorithm</label>
      </node>
      <node id="16247">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="16248" relation="include">
        </childnode>
        <childnode refid="16249" relation="include">
        </childnode>
        <childnode refid="16233" relation="include">
        </childnode>
        <childnode refid="16250" relation="include">
        </childnode>
        <childnode refid="16239" relation="include">
        </childnode>
        <childnode refid="16251" relation="include">
        </childnode>
        <childnode refid="16244" relation="include">
        </childnode>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="16245" relation="include">
        </childnode>
        <childnode refid="16252" relation="include">
        </childnode>
        <childnode refid="16253" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
      </node>
      <node id="16229">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/except.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/types/type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TensorViewType::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>that);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TensorViewType::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>that_tvt<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;that);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that_tvt<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that_tvt-&gt;get_element_type()<sp/>!=<sp/>m_element_type)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that_tvt-&gt;get_shape()<sp/>!=<sp/>m_shape)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TensorViewType::collect_tensor_views(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;const<sp/>TensorViewType&gt;&gt;&amp;<sp/>views)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>views.push_back(shared_from_this());</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">std::ostream&amp;<sp/>ngraph::operator&lt;&lt;(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref>&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TensorViewType(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>obj.m_element_type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>join(obj.m_shape)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;})&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp"/>
  </compounddef>
</doxygen>
