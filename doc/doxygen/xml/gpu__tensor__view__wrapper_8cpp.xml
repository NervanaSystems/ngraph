<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="gpu__tensor__view__wrapper_8cpp" kind="file" language="C++">
    <compoundname>gpu_tensor_view_wrapper.cpp</compoundname>
    <includes refid="gpu__tensor__view__wrapper_8hpp" local="yes">ngraph/runtime/gpu/gpu_tensor_view_wrapper.hpp</includes>
    <includes refid="tensor__view__layout_8hpp" local="yes">ngraph/descriptor/layout/tensor_view_layout.hpp</includes>
    <includes refid="tensor_8hpp" local="yes">ngraph/descriptor/tensor.hpp</includes>
    <incdepgraph>
      <node id="14569">
        <label>ngraph/descriptor/buffer_pos.hpp</label>
        <link refid="buffer__pos_8hpp_source"/>
        <childnode refid="14570" relation="include">
        </childnode>
        <childnode refid="14571" relation="include">
        </childnode>
      </node>
      <node id="14547">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_tensor_view_wrapper.cpp</label>
        <link refid="gpu__tensor__view__wrapper_8cpp"/>
        <childnode refid="14548" relation="include">
        </childnode>
        <childnode refid="14567" relation="include">
        </childnode>
        <childnode refid="14572" relation="include">
        </childnode>
      </node>
      <node id="14572">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="14553" relation="include">
        </childnode>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14554" relation="include">
        </childnode>
        <childnode refid="14573" relation="include">
        </childnode>
      </node>
      <node id="14573">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14554" relation="include">
        </childnode>
        <childnode refid="14551" relation="include">
        </childnode>
        <childnode refid="14558" relation="include">
        </childnode>
      </node>
      <node id="14570">
        <label>cassert</label>
      </node>
      <node id="14565">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="14566" relation="include">
        </childnode>
        <childnode refid="14560" relation="include">
        </childnode>
        <childnode refid="14564" relation="include">
        </childnode>
      </node>
      <node id="14564">
        <label>stdexcept</label>
      </node>
      <node id="14548">
        <label>ngraph/runtime/gpu/gpu_tensor_view_wrapper.hpp</label>
        <link refid="gpu__tensor__view__wrapper_8hpp_source"/>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14550" relation="include">
        </childnode>
        <childnode refid="14558" relation="include">
        </childnode>
      </node>
      <node id="14561">
        <label>string</label>
      </node>
      <node id="14559">
        <label>map</label>
      </node>
      <node id="14571">
        <label>ngraph/descriptor/buffer.hpp</label>
        <link refid="buffer_8hpp_source"/>
      </node>
      <node id="14558">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="14559" relation="include">
        </childnode>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14560" relation="include">
        </childnode>
        <childnode refid="14561" relation="include">
        </childnode>
        <childnode refid="14562" relation="include">
        </childnode>
        <childnode refid="14555" relation="include">
        </childnode>
        <childnode refid="14563" relation="include">
        </childnode>
        <childnode refid="14565" relation="include">
        </childnode>
      </node>
      <node id="14555">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14556" relation="include">
        </childnode>
        <childnode refid="14557" relation="include">
        </childnode>
        <childnode refid="14554" relation="include">
        </childnode>
      </node>
      <node id="14551">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="14552" relation="include">
        </childnode>
        <childnode refid="14553" relation="include">
        </childnode>
        <childnode refid="14554" relation="include">
        </childnode>
        <childnode refid="14555" relation="include">
        </childnode>
      </node>
      <node id="14552">
        <label>cstdio</label>
      </node>
      <node id="14568">
        <label>tuple</label>
      </node>
      <node id="14554">
        <label>vector</label>
      </node>
      <node id="14557">
        <label>utility</label>
      </node>
      <node id="14560">
        <label>sstream</label>
      </node>
      <node id="14567">
        <label>ngraph/descriptor/layout/tensor_view_layout.hpp</label>
        <link refid="tensor__view__layout_8hpp_source"/>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14568" relation="include">
        </childnode>
        <childnode refid="14554" relation="include">
        </childnode>
        <childnode refid="14569" relation="include">
        </childnode>
        <childnode refid="14550" relation="include">
        </childnode>
      </node>
      <node id="14553">
        <label>iostream</label>
      </node>
      <node id="14566">
        <label>deque</label>
      </node>
      <node id="14563">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="14564" relation="include">
        </childnode>
      </node>
      <node id="14562">
        <label>type_traits</label>
      </node>
      <node id="14556">
        <label>set</label>
      </node>
      <node id="14550">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="14549" relation="include">
        </childnode>
        <childnode refid="14551" relation="include">
        </childnode>
      </node>
      <node id="14549">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/runtime/gpu/gpu_tensor_view_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/layout/tensor_view_layout.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/tensor.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">runtime::gpu::GPU_TensorViewWrapper::GPU_TensorViewWrapper(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shared_ptr&lt;descriptor::TensorView&gt;&amp;<sp/>tv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>alias)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_tensor_view(tv)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_alias(alias)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runtime::gpu::GPU_TensorViewWrapper::get_size()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="32"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor_view_layout()-&gt;get_size();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;size_t&gt;&amp;<sp/>runtime::gpu::GPU_TensorViewWrapper::get_shape()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor_view_layout()-&gt;get_shape();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;size_t&gt;&amp;<sp/>runtime::gpu::GPU_TensorViewWrapper::get_strides()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor_view_layout()-&gt;get_strides();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>runtime::gpu::GPU_TensorViewWrapper::get_element_type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor_view_layout()-&gt;get_element_type();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>runtime::gpu::GPU_TensorViewWrapper::get_name()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_alias.empty())</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor().get_name();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_alias;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>runtime::gpu::GPU_TensorViewWrapper::get_type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_element_type().c_type_string();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runtime::gpu::GPU_TensorViewWrapper::is_output()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tensor_view-&gt;get_tensor().is_output();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_tensor_view_wrapper.cpp"/>
  </compounddef>
</doxygen>
