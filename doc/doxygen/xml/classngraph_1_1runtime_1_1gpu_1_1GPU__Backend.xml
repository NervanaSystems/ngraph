<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend" kind="class" language="C++" prot="public">
    <compoundname>ngraph::runtime::gpu::GPU_Backend</compoundname>
    <basecompoundref refid="classngraph_1_1runtime_1_1Backend" prot="public" virt="non-virtual">ngraph::runtime::Backend</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend_1aafdbdfc6d56e741d3a3aac355b14025a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1CallFrame" kindref="compound">ngraph::runtime::CallFrame</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ngraph::runtime::CallFrame &gt; runtime::gpu::GPU_Backend::make_call_frame</definition>
        <argsstring>(const std::shared_ptr&lt; ngraph::runtime::ExternalFunction &gt; &amp;external_function) override</argsstring>
        <name>make_call_frame</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1ExternalFunction" kindref="compound">ngraph::runtime::ExternalFunction</ref> &gt; &amp;</type>
          <declname>external_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend_1a10bb66712a8e1c3eba3632b8732afce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1TensorView" kindref="compound">ngraph::runtime::TensorView</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ngraph::runtime::TensorView &gt; runtime::gpu::GPU_Backend::make_primary_tensor_view</definition>
        <argsstring>(const ngraph::element::Type &amp;element_type, const Shape &amp;shape) override</argsstring>
        <name>make_primary_tensor_view</name>
        <reimplements refid="classngraph_1_1runtime_1_1Backend_1a228f24dfac61234d66b13ba61e7a97bd">make_primary_tensor_view</reimplements>
        <param>
          <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">ngraph::element::Type</ref> &amp;</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Return a handle for a tensor on the backend device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.hpp" line="37" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3443">
        <label>ngraph::runtime::Backend</label>
        <link refid="classngraph_1_1runtime_1_1Backend"/>
      </node>
      <node id="3442">
        <label>ngraph::runtime::gpu::GPU_Backend</label>
        <link refid="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend"/>
        <childnode refid="3443" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3445">
        <label>ngraph::runtime::Backend</label>
        <link refid="classngraph_1_1runtime_1_1Backend"/>
      </node>
      <node id="3444">
        <label>ngraph::runtime::gpu::GPU_Backend</label>
        <link refid="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend"/>
        <childnode refid="3445" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.hpp" line="30" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.hpp" bodystart="29" bodyend="39"/>
    <listofallmembers>
      <member refid="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend_1aafdbdfc6d56e741d3a3aac355b14025a" prot="public" virt="non-virtual"><scope>ngraph::runtime::gpu::GPU_Backend</scope><name>make_call_frame</name></member>
      <member refid="classngraph_1_1runtime_1_1Backend_a8312b7ceb1d21857a41fda3b7f1af0dc_1a8312b7ceb1d21857a41fda3b7f1af0dc" prot="public" virt="pure-virtual" ambiguityscope="ngraph::runtime::Backend::"><scope>ngraph::runtime::gpu::GPU_Backend</scope><name>make_call_frame</name></member>
      <member refid="classngraph_1_1runtime_1_1gpu_1_1GPU__Backend_1a10bb66712a8e1c3eba3632b8732afce8" prot="public" virt="virtual"><scope>ngraph::runtime::gpu::GPU_Backend</scope><name>make_primary_tensor_view</name></member>
      <member refid="classngraph_1_1runtime_1_1Backend_1aa984f006ab650e3006c1f49b6e7452fb" prot="public" virt="non-virtual" ambiguityscope="ngraph::runtime::Backend::"><scope>ngraph::runtime::gpu::GPU_Backend</scope><name>make_primary_tensor_view</name></member>
      <member refid="classngraph_1_1runtime_1_1Backend_1abfd5432f59520cf7fe22434fe7c71730" prot="public" virt="virtual"><scope>ngraph::runtime::gpu::GPU_Backend</scope><name>~Backend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
