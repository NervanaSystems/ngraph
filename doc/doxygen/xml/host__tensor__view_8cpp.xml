<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="host__tensor__view_8cpp" kind="file" language="C++">
    <compoundname>host_tensor_view.cpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes refid="dense__tensor__view__layout_8hpp" local="yes">ngraph/descriptor/layout/dense_tensor_view_layout.hpp</includes>
    <includes refid="primary__tensor__view_8hpp" local="yes">ngraph/descriptor/primary_tensor_view.hpp</includes>
    <includes refid="host__tensor__view_8hpp" local="yes">ngraph/runtime/host_tensor_view.hpp</includes>
    <incdepgraph>
      <node id="14653">
        <label>list</label>
      </node>
      <node id="14625">
        <label>ngraph/descriptor/buffer_pos.hpp</label>
        <link refid="buffer__pos_8hpp_source"/>
        <childnode refid="14626" relation="include">
        </childnode>
        <childnode refid="14627" relation="include">
        </childnode>
      </node>
      <node id="14617">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/host_tensor_view.cpp</label>
        <link refid="host__tensor__view_8cpp"/>
        <childnode refid="14618" relation="include">
        </childnode>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14620" relation="include">
        </childnode>
        <childnode refid="14635" relation="include">
        </childnode>
        <childnode refid="14647" relation="include">
        </childnode>
      </node>
      <node id="14652">
        <label>functional</label>
      </node>
      <node id="14637">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="14631" relation="include">
        </childnode>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14638" relation="include">
        </childnode>
      </node>
      <node id="14638">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14629" relation="include">
        </childnode>
        <childnode refid="14639" relation="include">
        </childnode>
      </node>
      <node id="14645">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="14646" relation="include">
        </childnode>
        <childnode refid="14641" relation="include">
        </childnode>
        <childnode refid="14644" relation="include">
        </childnode>
      </node>
      <node id="14626">
        <label>cassert</label>
      </node>
      <node id="14644">
        <label>stdexcept</label>
      </node>
      <node id="14620">
        <label>ngraph/descriptor/layout/dense_tensor_view_layout.hpp</label>
        <link refid="dense__tensor__view__layout_8hpp_source"/>
        <childnode refid="14621" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14623" relation="include">
        </childnode>
      </node>
      <node id="14636">
        <label>string</label>
      </node>
      <node id="14640">
        <label>map</label>
      </node>
      <node id="14655">
        <label>unordered_set</label>
      </node>
      <node id="14627">
        <label>ngraph/descriptor/buffer.hpp</label>
        <link refid="buffer_8hpp_source"/>
      </node>
      <node id="14639">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="14640" relation="include">
        </childnode>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14641" relation="include">
        </childnode>
        <childnode refid="14636" relation="include">
        </childnode>
        <childnode refid="14642" relation="include">
        </childnode>
        <childnode refid="14632" relation="include">
        </childnode>
        <childnode refid="14643" relation="include">
        </childnode>
        <childnode refid="14645" relation="include">
        </childnode>
      </node>
      <node id="14632">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14633" relation="include">
        </childnode>
        <childnode refid="14634" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
      </node>
      <node id="14629">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="14630" relation="include">
        </childnode>
        <childnode refid="14631" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14632" relation="include">
        </childnode>
      </node>
      <node id="14630">
        <label>cstdio</label>
      </node>
      <node id="14624">
        <label>tuple</label>
      </node>
      <node id="14622">
        <label>vector</label>
      </node>
      <node id="14635">
        <label>ngraph/descriptor/primary_tensor_view.hpp</label>
        <link refid="primary__tensor__view_8hpp_source"/>
        <childnode refid="14636" relation="include">
        </childnode>
        <childnode refid="14637" relation="include">
        </childnode>
        <childnode refid="14628" relation="include">
        </childnode>
        <childnode refid="14645" relation="include">
        </childnode>
        <childnode refid="14629" relation="include">
        </childnode>
        <childnode refid="14638" relation="include">
        </childnode>
      </node>
      <node id="14634">
        <label>utility</label>
      </node>
      <node id="14641">
        <label>sstream</label>
      </node>
      <node id="14623">
        <label>ngraph/descriptor/layout/tensor_view_layout.hpp</label>
        <link refid="tensor__view__layout_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14624" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14625" relation="include">
        </childnode>
        <childnode refid="14628" relation="include">
        </childnode>
      </node>
      <node id="14631">
        <label>iostream</label>
      </node>
      <node id="14621">
        <label>cstddef</label>
      </node>
      <node id="14646">
        <label>deque</label>
      </node>
      <node id="14654">
        <label>unordered_map</label>
      </node>
      <node id="14647">
        <label>ngraph/runtime/host_tensor_view.hpp</label>
        <link refid="host__tensor__view_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14639" relation="include">
        </childnode>
      </node>
      <node id="14651">
        <label>chrono</label>
      </node>
      <node id="14643">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="14644" relation="include">
        </childnode>
      </node>
      <node id="14642">
        <label>type_traits</label>
      </node>
      <node id="14633">
        <label>set</label>
      </node>
      <node id="14628">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14629" relation="include">
        </childnode>
      </node>
      <node id="14650">
        <label>algorithm</label>
      </node>
      <node id="14649">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14646" relation="include">
        </childnode>
        <childnode refid="14652" relation="include">
        </childnode>
        <childnode refid="14631" relation="include">
        </childnode>
        <childnode refid="14653" relation="include">
        </childnode>
        <childnode refid="14640" relation="include">
        </childnode>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14641" relation="include">
        </childnode>
        <childnode refid="14636" relation="include">
        </childnode>
        <childnode refid="14654" relation="include">
        </childnode>
        <childnode refid="14655" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
      </node>
      <node id="14648">
        <label>ngraph/runtime/tensor_view.hpp</label>
        <link refid="runtime_2tensor__view_8hpp_source"/>
        <childnode refid="14619" relation="include">
        </childnode>
        <childnode refid="14622" relation="include">
        </childnode>
        <childnode refid="14628" relation="include">
        </childnode>
        <childnode refid="14629" relation="include">
        </childnode>
        <childnode refid="14639" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
      </node>
      <node id="14618">
        <label>cstring</label>
      </node>
      <node id="14619">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/layout/dense_tensor_view_layout.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/primary_tensor_view.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/runtime/host_tensor_view.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">runtime::HostTensorView::HostTensorView(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">ngraph::element::Type</ref>&amp;<sp/>element_type,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>runtime::TensorView(<ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;<ref refid="namespacengraph" kindref="compound">ngraph</ref>::descriptor::PrimaryTensorView&gt;(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;<ref refid="namespacengraph" kindref="compound">ngraph</ref>::<ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref>&gt;(element_type,<sp/>shape),<sp/>name,<sp/>true,<sp/>true,<sp/>false))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_allocated_buffer_pool(nullptr)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_aligned_buffer_pool(nullptr)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_descriptor-&gt;set_tensor_view_layout(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ngraph::descriptor::layout::DenseTensorViewLayout&gt;(*m_descriptor));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer_size<sp/>=<sp/>m_descriptor-&gt;get_tensor_view_layout()-&gt;get_size()<sp/>*<sp/>element_type.size();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_buffer_size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allocation_size<sp/>=<sp/>m_buffer_size<sp/>+<sp/>runtime::alignment;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_allocated_buffer_pool<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc(allocation_size));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_aligned_buffer_pool<sp/>=<sp/>m_allocated_buffer_pool;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mod<sp/>=<sp/>size_t(m_aligned_buffer_pool)<sp/>%<sp/>alignment;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_aligned_buffer_pool<sp/>+=<sp/>(alignment<sp/>-<sp/>mod);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">runtime::HostTensorView::~HostTensorView()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_allocated_buffer_pool<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(m_allocated_buffer_pool);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>runtime::HostTensorView::get_data_ptr()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_aligned_buffer_pool;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>runtime::HostTensorView::get_data_ptr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_aligned_buffer_pool;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classngraph_1_1runtime_1_1HostTensorView_ac816e7b7d2d91c443e4d629a54271a21_1ac816e7b7d2d91c443e4d629a54271a21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1runtime_1_1HostTensorView_ac816e7b7d2d91c443e4d629a54271a21_1ac816e7b7d2d91c443e4d629a54271a21" kindref="member">runtime::HostTensorView::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>source,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tensor_offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor_offset<sp/>+<sp/>n<sp/>&gt;<sp/>m_buffer_size)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>out_of_range(</highlight><highlight class="stringliteral">&quot;write<sp/>access<sp/>past<sp/>end<sp/>of<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>target<sp/>=<sp/>get_data_ptr();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;target[tensor_offset],<sp/>source,<sp/>n);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classngraph_1_1runtime_1_1HostTensorView_a1cc2ab73bf26c2d9a8859f64138efea7_1a1cc2ab73bf26c2d9a8859f64138efea7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1runtime_1_1HostTensorView_a1cc2ab73bf26c2d9a8859f64138efea7_1a1cc2ab73bf26c2d9a8859f64138efea7" kindref="member">runtime::HostTensorView::read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tensor_offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor_offset<sp/>+<sp/>n<sp/>&gt;<sp/>m_buffer_size)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>out_of_range(</highlight><highlight class="stringliteral">&quot;read<sp/>access<sp/>past<sp/>end<sp/>of<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source<sp/>=<sp/>get_data_ptr();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(target,<sp/>&amp;source[tensor_offset],<sp/>n);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runtime::HostTensorView::get_size()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_tensor_view_layout()-&gt;get_size();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>runtime::HostTensorView::get_element_type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_tensor_view_layout()-&gt;get_element_type();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/host_tensor_view.cpp"/>
  </compounddef>
</doxygen>
