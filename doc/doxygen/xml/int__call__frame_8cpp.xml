<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="int__call__frame_8cpp" kind="file" language="C++">
    <compoundname>int_call_frame.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iomanip</includes>
    <includes refid="host__tensor__view_8hpp" local="yes">ngraph/runtime/host_tensor_view.hpp</includes>
    <includes refid="int__call__frame_8hpp" local="yes">ngraph/runtime/interpreter/int_call_frame.hpp</includes>
    <incdepgraph>
      <node id="14786">
        <label>list</label>
      </node>
      <node id="14859">
        <label>ngraph/runtime/kernel/max_pool.hpp</label>
        <link refid="runtime_2kernel_2max__pool_8hpp_source"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14791">
        <label>atomic</label>
      </node>
      <node id="14860">
        <label>ngraph/runtime/kernel/maximum.hpp</label>
        <link refid="runtime_2kernel_2maximum_8hpp_source"/>
      </node>
      <node id="14861">
        <label>ngraph/runtime/kernel/min.hpp</label>
        <link refid="runtime_2kernel_2min_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14883">
        <label>ngraph/runtime/kernel/sqrt.hpp</label>
        <link refid="runtime_2kernel_2sqrt_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14785">
        <label>functional</label>
      </node>
      <node id="14762">
        <label>iomanip</label>
      </node>
      <node id="14858">
        <label>limits</label>
      </node>
      <node id="14876">
        <label>ngraph/runtime/kernel/reverse.hpp</label>
        <link refid="runtime_2kernel_2reverse_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14879">
        <label>ngraph/runtime/kernel/sign.hpp</label>
        <link refid="runtime_2kernel_2sign_8hpp_source"/>
      </node>
      <node id="14795">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14810">
        <label>ngraph/ops/convolution.hpp</label>
        <link refid="ops_2convolution_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14855">
        <label>ngraph/runtime/kernel/less_eq.hpp</label>
        <link refid="runtime_2kernel_2less__eq_8hpp_source"/>
      </node>
      <node id="14852">
        <label>ngraph/runtime/kernel/greater.hpp</label>
        <link refid="runtime_2kernel_2greater_8hpp_source"/>
      </node>
      <node id="14831">
        <label>ngraph/runtime/kernel/add.hpp</label>
        <link refid="runtime_2kernel_2add_8hpp_source"/>
      </node>
      <node id="14796">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
        <childnode refid="14774" relation="include">
        </childnode>
      </node>
      <node id="14793">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14772" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14767" relation="include">
        </childnode>
      </node>
      <node id="14797">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14772" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14872">
        <label>ngraph/runtime/kernel/reduce_window.hpp</label>
        <link refid="runtime_2kernel_2reduce__window_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14838">
        <label>ngraph/runtime/kernel/broadcast.hpp</label>
        <link refid="runtime_2kernel_2broadcast_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14832">
        <label>ngraph/runtime/kernel/asin.hpp</label>
        <link refid="runtime_2kernel_2asin_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14821">
        <label>ngraph/ops/replace_slice.hpp</label>
        <link refid="ops_2replace__slice_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14836">
        <label>ngraph/coordinate_transform.hpp</label>
        <link refid="coordinate__transform_8hpp_source"/>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="14769" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
      </node>
      <node id="14885">
        <label>ngraph/runtime/kernel/sum.hpp</label>
        <link refid="runtime_2kernel_2sum_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14829">
        <label>cmath</label>
      </node>
      <node id="14837">
        <label>cassert</label>
      </node>
      <node id="14781">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14780" relation="include">
        </childnode>
      </node>
      <node id="14780">
        <label>stdexcept</label>
      </node>
      <node id="14835">
        <label>numeric</label>
      </node>
      <node id="14874">
        <label>ngraph/runtime/kernel/replace_slice.hpp</label>
        <link refid="runtime_2kernel_2replace__slice_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14843">
        <label>ngraph/runtime/kernel/convolution.hpp</label>
        <link refid="runtime_2kernel_2convolution_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14805">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
      </node>
      <node id="14777">
        <label>string</label>
      </node>
      <node id="14834">
        <label>ngraph/runtime/kernel/avg_pool.hpp</label>
        <link refid="runtime_2kernel_2avg__pool_8hpp_source"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
      </node>
      <node id="14853">
        <label>ngraph/runtime/kernel/greater_eq.hpp</label>
        <link refid="runtime_2kernel_2greater__eq_8hpp_source"/>
      </node>
      <node id="14840">
        <label>ngraph/runtime/kernel/concat.hpp</label>
        <link refid="runtime_2kernel_2concat_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14775">
        <label>map</label>
      </node>
      <node id="14864">
        <label>ngraph/runtime/kernel/negate.hpp</label>
        <link refid="negate_8hpp_source"/>
      </node>
      <node id="14862">
        <label>ngraph/runtime/kernel/minimum.hpp</label>
        <link refid="runtime_2kernel_2minimum_8hpp_source"/>
      </node>
      <node id="14814">
        <label>ngraph/ops/max_pool.hpp</label>
        <link refid="ops_2max__pool_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14788">
        <label>unordered_set</label>
      </node>
      <node id="14866">
        <label>ngraph/runtime/kernel/not_equal.hpp</label>
        <link refid="runtime_2kernel_2not__equal_8hpp_source"/>
      </node>
      <node id="14803">
        <label>ngraph/graph_util.hpp</label>
        <link refid="graph__util_8hpp_source"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
      </node>
      <node id="14845">
        <label>ngraph/runtime/kernel/cos.hpp</label>
        <link refid="runtime_2kernel_2cos_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14817">
        <label>ngraph/ops/pad.hpp</label>
        <link refid="ops_2pad_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14815">
        <label>ngraph/ops/min.hpp</label>
        <link refid="ops_2min_8hpp_source"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14816">
        <label>ngraph/ops/one_hot.hpp</label>
        <link refid="ops_2one__hot_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14881">
        <label>ngraph/runtime/kernel/sinh.hpp</label>
        <link refid="runtime_2kernel_2sinh_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14774">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14778" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14779" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
      </node>
      <node id="14771">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14772" relation="include">
        </childnode>
        <childnode refid="14773" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
      </node>
      <node id="14868">
        <label>ngraph/runtime/kernel/pad.hpp</label>
        <link refid="runtime_2kernel_2pad_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14884">
        <label>ngraph/runtime/kernel/subtract.hpp</label>
        <link refid="runtime_2kernel_2subtract_8hpp_source"/>
      </node>
      <node id="14839">
        <label>ngraph/runtime/kernel/ceiling.hpp</label>
        <link refid="runtime_2kernel_2ceiling_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14882">
        <label>ngraph/runtime/kernel/slice.hpp</label>
        <link refid="runtime_2kernel_2slice_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14825">
        <label>ngraph/ops/slice.hpp</label>
        <link refid="ops_2slice_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14823">
        <label>ngraph/ops/reverse.hpp</label>
        <link refid="ops_2reverse_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14794">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14818">
        <label>ngraph/ops/product.hpp</label>
        <link refid="ops_2product_8hpp_source"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14826">
        <label>ngraph/ops/sum.hpp</label>
        <link refid="ops_2sum_8hpp_source"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14768">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="14769" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
      </node>
      <node id="14819">
        <label>ngraph/ops/reduce.hpp</label>
        <link refid="ops_2reduce_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14811">
        <label>ngraph/ops/dot.hpp</label>
        <link refid="ops_2dot_8hpp_source"/>
        <childnode refid="14773" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14799">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
      </node>
      <node id="14863">
        <label>ngraph/runtime/kernel/multiply.hpp</label>
        <link refid="runtime_2kernel_2multiply_8hpp_source"/>
      </node>
      <node id="14802">
        <label>ngraph/ops/parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14854">
        <label>ngraph/runtime/kernel/less.hpp</label>
        <link refid="runtime_2kernel_2less_8hpp_source"/>
      </node>
      <node id="14800">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
      </node>
      <node id="14769">
        <label>cstdio</label>
      </node>
      <node id="14824">
        <label>ngraph/ops/select_and_scatter.hpp</label>
        <link refid="ops_2select__and__scatter_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14850">
        <label>ngraph/runtime/kernel/exp.hpp</label>
        <link refid="runtime_2kernel_2exp_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14820">
        <label>ngraph/ops/reduce_window.hpp</label>
        <link refid="ops_2reduce__window_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14869">
        <label>ngraph/runtime/kernel/power.hpp</label>
        <link refid="runtime_2kernel_2power_8hpp_source"/>
      </node>
      <node id="14806">
        <label>ngraph/ops/broadcast.hpp</label>
        <link refid="ops_2broadcast_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14871">
        <label>ngraph/runtime/kernel/reduce.hpp</label>
        <link refid="runtime_2kernel_2reduce_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14844">
        <label>ngraph/runtime/kernel/copy.hpp</label>
        <link refid="copy_8hpp_source"/>
      </node>
      <node id="14851">
        <label>ngraph/runtime/kernel/floor.hpp</label>
        <link refid="runtime_2kernel_2floor_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14827">
        <label>ngraph/runtime/call_frame.hpp</label>
        <link refid="call__frame_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14765" relation="include">
        </childnode>
      </node>
      <node id="14766">
        <label>vector</label>
      </node>
      <node id="14789">
        <label>ngraph/runtime/interpreter/int_call_frame.hpp</label>
        <link refid="int__call__frame_8hpp_source"/>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14815" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14823" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14763" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14830" relation="include">
        </childnode>
        <childnode refid="14831" relation="include">
        </childnode>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14839" relation="include">
        </childnode>
        <childnode refid="14840" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
        <childnode refid="14849" relation="include">
        </childnode>
        <childnode refid="14850" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
        <childnode refid="14853" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14861" relation="include">
        </childnode>
        <childnode refid="14862" relation="include">
        </childnode>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14870" relation="include">
        </childnode>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14881" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14885" relation="include">
        </childnode>
        <childnode refid="14886" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14765" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14848">
        <label>ngraph/runtime/kernel/dot.hpp</label>
        <link refid="runtime_2kernel_2dot_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14773" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14773">
        <label>utility</label>
      </node>
      <node id="14857">
        <label>ngraph/runtime/kernel/max.hpp</label>
        <link refid="runtime_2kernel_2max_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14776">
        <label>sstream</label>
      </node>
      <node id="14880">
        <label>ngraph/runtime/kernel/sin.hpp</label>
        <link refid="runtime_2kernel_2sin_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14878">
        <label>ngraph/runtime/kernel/select_and_scatter.hpp</label>
        <link refid="runtime_2kernel_2select__and__scatter_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14808">
        <label>ngraph/ops/constant.hpp</label>
        <link refid="ops_2constant_8hpp_source"/>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14774" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14856">
        <label>ngraph/runtime/kernel/log.hpp</label>
        <link refid="runtime_2kernel_2log_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14833">
        <label>ngraph/runtime/kernel/atan.hpp</label>
        <link refid="runtime_2kernel_2atan_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14870">
        <label>ngraph/runtime/kernel/product.hpp</label>
        <link refid="runtime_2kernel_2product_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14873">
        <label>ngraph/runtime/kernel/relu.hpp</label>
        <link refid="runtime_2kernel_2relu_8hpp_source"/>
      </node>
      <node id="14761">
        <label>cstdlib</label>
      </node>
      <node id="14841">
        <label>ngraph/runtime/kernel/constant.hpp</label>
        <link refid="runtime_2kernel_2constant_8hpp_source"/>
      </node>
      <node id="14790">
        <label>ngraph/function.hpp</label>
        <link refid="function_8hpp_source"/>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14792" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14767" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14770">
        <label>iostream</label>
      </node>
      <node id="14886">
        <label>ngraph/runtime/kernel/tan.hpp</label>
        <link refid="runtime_2kernel_2tan_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14875">
        <label>ngraph/runtime/kernel/reshape.hpp</label>
        <link refid="runtime_2kernel_2reshape_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14801">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="14782">
        <label>deque</label>
      </node>
      <node id="14787">
        <label>unordered_map</label>
      </node>
      <node id="14830">
        <label>ngraph/runtime/kernel/acos.hpp</label>
        <link refid="runtime_2kernel_2acos_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14763">
        <label>ngraph/runtime/host_tensor_view.hpp</label>
        <link refid="host__tensor__view_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14765" relation="include">
        </childnode>
        <childnode refid="14774" relation="include">
        </childnode>
      </node>
      <node id="14812">
        <label>ngraph/ops/max.hpp</label>
        <link refid="ops_2max_8hpp_source"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14867">
        <label>ngraph/runtime/kernel/one_hot.hpp</label>
        <link refid="runtime_2kernel_2one__hot_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14784">
        <label>chrono</label>
      </node>
      <node id="14849">
        <label>ngraph/runtime/kernel/equal.hpp</label>
        <link refid="runtime_2kernel_2equal_8hpp_source"/>
      </node>
      <node id="14779">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="14780" relation="include">
        </childnode>
      </node>
      <node id="14813">
        <label>ngraph/ops/util/arithmetic_reduction.hpp</label>
        <link refid="arithmetic__reduction_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14877">
        <label>ngraph/runtime/kernel/select.hpp</label>
        <link refid="runtime_2kernel_2select_8hpp_source"/>
      </node>
      <node id="14778">
        <label>type_traits</label>
      </node>
      <node id="14759">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_call_frame.cpp</label>
        <link refid="int__call__frame_8cpp"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14761" relation="include">
        </childnode>
        <childnode refid="14762" relation="include">
        </childnode>
        <childnode refid="14763" relation="include">
        </childnode>
        <childnode refid="14789" relation="include">
        </childnode>
      </node>
      <node id="14772">
        <label>set</label>
      </node>
      <node id="14807">
        <label>ngraph/ops/concatenate.hpp</label>
        <link refid="concatenate_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14767">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
      </node>
      <node id="14760">
        <label>algorithm</label>
      </node>
      <node id="14804">
        <label>ngraph/ops/avg_pool.hpp</label>
        <link refid="ops_2avg__pool_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14783">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
      </node>
      <node id="14765">
        <label>ngraph/runtime/tensor_view.hpp</label>
        <link refid="runtime_2tensor__view_8hpp_source"/>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14767" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
        <childnode refid="14774" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14865">
        <label>ngraph/runtime/kernel/not.hpp</label>
        <link refid="runtime_2kernel_2not_8hpp_source"/>
      </node>
      <node id="14809">
        <label>cstring</label>
      </node>
      <node id="14828">
        <label>ngraph/runtime/kernel/abs.hpp</label>
        <link refid="runtime_2kernel_2abs_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14842">
        <label>ngraph/runtime/kernel/convert.hpp</label>
        <link refid="runtime_2kernel_2convert_8hpp_source"/>
      </node>
      <node id="14764">
        <label>memory</label>
      </node>
      <node id="14822">
        <label>ngraph/ops/reshape.hpp</label>
        <link refid="ops_2reshape_8hpp_source"/>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14792">
        <label>initializer_list</label>
      </node>
      <node id="14846">
        <label>ngraph/runtime/kernel/cosh.hpp</label>
        <link refid="runtime_2kernel_2cosh_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14847">
        <label>ngraph/runtime/kernel/divide.hpp</label>
        <link refid="runtime_2kernel_2divide_8hpp_source"/>
        <childnode refid="14778" relation="include">
        </childnode>
      </node>
      <node id="14798">
        <label>typeindex</label>
      </node>
      <node id="14887">
        <label>ngraph/runtime/kernel/tanh.hpp</label>
        <link refid="runtime_2kernel_2tanh_8hpp_source"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/runtime/host_tensor_view.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/runtime/interpreter/int_call_frame.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">runtime::interpreter::INT_CallFrame::INT_CallFrame(shared_ptr&lt;ExternalFunction&gt;<sp/>external_function,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;Function&gt;<sp/>func)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_external_function(external_function)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_function(func)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_emit_timing(<ref refid="namespacestd" kindref="compound">std</ref>::getenv(</highlight><highlight class="stringliteral">&quot;NGRAPH_INTERPRETER_EMIT_TIMING&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>nullptr)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_nan_check(<ref refid="namespacestd" kindref="compound">std</ref>::getenv(</highlight><highlight class="stringliteral">&quot;NGRAPH_INTERPRETER_NAN_CHECK&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>nullptr)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1runtime_1_1interpreter_1_1INT__CallFrame_a5259131a45b47f9670e80eb77864100b_1a5259131a45b47f9670e80eb77864100b" kindref="member">runtime::interpreter::INT_CallFrame::call</ref>(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Function&gt;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;&amp;<sp/>input_tvs,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;&amp;<sp/>output_tvs)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nan_check)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perform_nan_check(input_tvs);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>unordered_map&lt;descriptor::TensorView*,<sp/>shared_ptr&lt;runtime::HostTensorView&gt;&gt;<sp/>tensor_map;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arg_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shared_ptr&lt;op::Parameter&gt;<sp/>param<sp/>:<sp/>function-&gt;get_parameters())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>param-&gt;get_output_size();<sp/>++i)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref>*<sp/>tv<sp/>=<sp/>param-&gt;get_output_tensor_view(i).get();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_map.insert({tv,<sp/>input_tvs[arg_index++]});</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>aliased_outputs;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output_tvs.size();<sp/>i++)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;get_output_op(i);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref>*<sp/>tv<sp/>=<sp/>op-&gt;get_output_tensor_view(0).get();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>tv-&gt;get_tensor().get_name();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contains_key(tensor_map,<sp/>tv))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;description()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>handle<sp/>the<sp/>special<sp/>case<sp/>where<sp/>an<sp/>output<sp/>is<sp/>just<sp/>a<sp/>copy<sp/>of<sp/>an<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(output_tvs[i]-&gt;get_data_ptr(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_map.at(tv)-&gt;get_data_ptr(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;get_tensor().size());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>computed<sp/>value<sp/>returned<sp/>more<sp/>than<sp/>once<sp/>and<sp/>will<sp/>need<sp/>to<sp/>be<sp/>copied<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliased_outputs.push_back(i);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_map.insert({tv,<sp/>output_tvs[i]});</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shared_ptr&lt;Node&gt;<sp/>op<sp/>:<sp/>function-&gt;get_ordered_ops())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;description()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;<sp/>outputs;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1descriptor_1_1Input" kindref="compound">descriptor::Input</ref>&amp;<sp/>input<sp/>:<sp/>op-&gt;get_inputs())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref>*<sp/>tv<sp/>=<sp/>input.get_output().get_tensor_view().get();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>tv-&gt;get_tensor().get_name();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(tensor_map.at(tv));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>op-&gt;get_output_size();<sp/>++i)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref>*<sp/>tv<sp/>=<sp/>op-&gt;get_output_tensor_view(i).get();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>tv-&gt;get_tensor().get_name();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;runtime::HostTensorView&gt;<sp/>itv;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!contains_key(tensor_map,<sp/>tv))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>tensor<sp/>is<sp/>not<sp/>in<sp/>the<sp/>tensor<sp/>map<sp/>so<sp/>create<sp/>a<sp/>new<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>shape<sp/>=<sp/>op-&gt;get_output_shape(i);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>element_type<sp/>=<sp/>op-&gt;get_output_element_type(i);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tensor_name<sp/>=<sp/>op-&gt;get_output_tensor(i).get_name();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itv<sp/>=<sp/>make_shared&lt;runtime::HostTensorView&gt;(element_type,<sp/>shape,<sp/>tensor_name);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_map.insert({tv,<sp/>itv});</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itv<sp/>=<sp/>tensor_map.at(tv);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.push_back(itv);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref><sp/>base_type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref><sp/>secondary_type;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;get_inputs().empty())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type<sp/>=<sp/>op-&gt;get_element_type();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type<sp/>=<sp/>op-&gt;get_inputs().at(0).get_tensor().get_element_type();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondary_type<sp/>=<sp/>op-&gt;get_element_type();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>ops<sp/>have<sp/>unusual<sp/>intput/output<sp/>types<sp/>so<sp/>handle<sp/>those<sp/>special<sp/>cases<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;description()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Select&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type<sp/>=<sp/>op-&gt;get_inputs().at(1).get_tensor().get_element_type();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondary_type<sp/>=<sp/>op-&gt;get_inputs().at(0).get_tensor().get_element_type();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_emit_timing)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_timer_map[op.get()].start();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls(base_type,<sp/>secondary_type,<sp/>*op,<sp/>inputs,<sp/>outputs);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_emit_timing)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1stopwatch" kindref="compound">stopwatch</ref>&amp;<sp/>timer<sp/>=<sp/>m_timer_map[op.get()];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.stop();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nan_check)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perform_nan_check(outputs,<sp/>op.get());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>any<sp/>obsolete<sp/>tensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">descriptor::Tensor</ref>*<sp/>t<sp/>:<sp/>op-&gt;liveness_free_list)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>tensor_map.begin();<sp/>it<sp/>!=<sp/>tensor_map.end();<sp/>++it)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;get_tensor().get_name()<sp/>==<sp/>t-&gt;get_name())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_map.erase(it);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>aliased_outputs)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;get_output_op(i);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first_output;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(first_output<sp/>=<sp/>0;<sp/>first_output<sp/>&lt;=<sp/>i;<sp/>++first_output)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function-&gt;get_output_op(first_output)<sp/>==<sp/>op)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_output<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Internal<sp/>error:<sp/>duplicate<sp/>output<sp/>missing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref>*<sp/>tv<sp/>=<sp/>op-&gt;get_output_tensor_view(0).get();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>tv-&gt;get_tensor().get_name();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>handle<sp/>the<sp/>special<sp/>case<sp/>where<sp/>an<sp/>output<sp/>is<sp/>just<sp/>a<sp/>copy<sp/>of<sp/>an<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(output_tvs[i]-&gt;get_data_ptr(),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_tvs[first_output]-&gt;get_data_ptr(),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;get_tensor().size());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runtime::interpreter::INT_CallFrame::generate_calls(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>base_type,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>secondary_type,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref>&amp;<sp/>op,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;HostTensorView&gt;&gt;&amp;<sp/>args,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;HostTensorView&gt;&gt;&amp;<sp/>out)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::boolean)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;char&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::f32)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;float&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::f64)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;double&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::i8)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;int8_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::i16)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;int16_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::i32)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;int32_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::i64)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;int64_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::u8)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;uint8_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::u16)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;uint16_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::u32)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;uint32_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_type<sp/>==<sp/>element::u64)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_calls&lt;uint64_t&gt;(secondary_type,<sp/>op,<sp/>args,<sp/>out);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unsupported<sp/>element<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>op<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>op.get_name();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(ss.str());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runtime::interpreter::INT_CallFrame::tensor_call(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;&amp;<sp/>input_tvs,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;&amp;<sp/>output_tvs)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1_1xla_1a93e067defa3fafd238080b54a65ab12e" kindref="member">call</ref>(m_function,<sp/>input_tvs,<sp/>output_tvs);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runtime::interpreter::INT_CallFrame::tensor_call(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;&amp;<sp/>input_tvs,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;&amp;<sp/>output_tvs)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;<sp/>args;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::HostTensorView&gt;&gt;<sp/>out;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tv<sp/>:<sp/>input_tvs)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.push_back(static_pointer_cast&lt;runtime::HostTensorView&gt;(tv));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tv<sp/>:<sp/>output_tvs)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.push_back(static_pointer_cast&lt;runtime::HostTensorView&gt;(tv));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_call(args,<sp/>out);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1runtime_1_1interpreter_1_1INT__CallFrame_a5259131a45b47f9670e80eb77864100b_1a5259131a45b47f9670e80eb77864100b" kindref="member">runtime::interpreter::INT_CallFrame::call</ref>(</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;&amp;<sp/>arguments,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;&amp;<sp/>results)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shared_ptr&lt;runtime::TensorView&gt;<sp/>argument<sp/>:<sp/>arguments)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument-&gt;collect_tensor_views(inputs,<sp/>argument);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;shared_ptr&lt;runtime::TensorView&gt;&gt;<sp/>outputs;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shared_ptr&lt;runtime::TensorView&gt;<sp/>result<sp/>:<sp/>results)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;collect_tensor_views(outputs,<sp/>result);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_call(inputs,<sp/>outputs);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">vector&lt;runtime::PerformanceCounter&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>runtime::interpreter::INT_CallFrame::get_performance_data()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="295"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;runtime::PerformanceCounter&gt;<sp/>rc;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair&lt;const<sp/>Node*,<sp/>stopwatch&gt;<sp/>p<sp/>:<sp/>m_timer_map)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc.emplace_back(p.first-&gt;get_name().c_str(),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.second.get_total_microseconds(),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.second.get_call_count());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runtime::interpreter::INT_CallFrame::perform_nan_check(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;shared_ptr&lt;HostTensorView&gt;&gt;&amp;<sp/>tvs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1Node" kindref="compound">Node</ref>*<sp/>op)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arg_number<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(shared_ptr&lt;HostTensorView&gt;<sp/>tv<sp/>:<sp/>tvs)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>type<sp/>=<sp/>tv-&gt;get_tensor().get_element_type();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>element::f32)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv-&gt;get_data_ptr());</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tv-&gt;get_element_count();<sp/>i++)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(data[i]))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;nan<sp/>found<sp/>in<sp/>op<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>op-&gt;get_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>output&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;nan<sp/>found<sp/>in<sp/>function&apos;s<sp/>input<sp/>tensor<sp/>number<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_string(arg_number));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>element::f64)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv-&gt;get_data_ptr());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tv-&gt;get_element_count();<sp/>i++)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(data[i]))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;nan<sp/>found<sp/>in<sp/>op<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>op-&gt;get_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>output&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;nan<sp/>found<sp/>in<sp/>function&apos;s<sp/>input<sp/>tensor<sp/>number<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_string(arg_number));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_number++;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runtime::interpreter::INT_CallFrame::set_nan_check(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nan_check<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_call_frame.cpp"/>
  </compounddef>
</doxygen>
