<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1op_1_1Convolution" kind="class" language="C++" prot="public">
    <compoundname>ngraph::op::Convolution</compoundname>
    <basecompoundref refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs" prot="public" virt="non-virtual">ngraph::op::util::RequiresTensorViewArgs</basecompoundref>
    <includes refid="ops_2convolution_8hpp" local="no">convolution.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1op_1_1Convolution_1a79a93b854b7c479ac739be2d9d132a50" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref></type>
        <definition>Strides ngraph::op::Convolution::m_window_movement_strides</definition>
        <argsstring></argsstring>
        <name>m_window_movement_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="142" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Convolution_1a3f434866f0612cb0f8b6fbafaf7f71db" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref></type>
        <definition>Strides ngraph::op::Convolution::m_window_dilation_strides</definition>
        <argsstring></argsstring>
        <name>m_window_dilation_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="143" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Convolution_1a9b9bdc1a347dfb41357c2a62e934acc7" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref></type>
        <definition>CoordinateDiff ngraph::op::Convolution::m_padding_below</definition>
        <argsstring></argsstring>
        <name>m_padding_below</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="144" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Convolution_1ac6d32fc3de3aade4fdcf47ee02f318ad" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref></type>
        <definition>CoordinateDiff ngraph::op::Convolution::m_padding_above</definition>
        <argsstring></argsstring>
        <name>m_padding_above</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="145" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Convolution_1acc1599f87de06a8f6a231fa379502f3c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref></type>
        <definition>Strides ngraph::op::Convolution::m_data_dilation_strides</definition>
        <argsstring></argsstring>
        <name>m_data_dilation_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="146" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a2a3329e920a1488df71e2979f21a9189_1a2a3329e920a1488df71e2979f21a9189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Convolution::Convolution</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch, const std::shared_ptr&lt; Node &gt; &amp;filters, const Strides &amp;window_movement_strides, const Strides &amp;window_dilation_strides, const CoordinateDiff &amp;padding_below, const CoordinateDiff &amp;padding_above, const Strides &amp;data_dilation_strides)</argsstring>
        <name>Convolution</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>filters</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_dilation_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>data_dilation_strides</declname>
        </param>
        <briefdescription>
<para>Constructs a batched convolution operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the input data batch tensor.<linebreak/>
 <computeroutput>[N, C_IN, D1, ... Df]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filters</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the filters tensor.<linebreak/>
 <computeroutput>[C_OUT, C_IN, F1, ... Ff]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_movement_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window movement strides.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_dilation_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window dilation strides.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_below</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-below sizes.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_above</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-above sizes.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_dilation_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The data dilation strides.<linebreak/>
 <computeroutput>[f]</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
Output <computeroutput>[N, C_OUT, R1, ... Rf]</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="49" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="236" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_acbfec6c4a7cc0c64f64095050b24ad2f_1acbfec6c4a7cc0c64f64095050b24ad2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Convolution::Convolution</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch, const std::shared_ptr&lt; Node &gt; &amp;filters, const Strides &amp;window_movement_strides, const Strides &amp;window_dilation_strides, const CoordinateDiff &amp;padding_below, const CoordinateDiff &amp;padding_above)</argsstring>
        <name>Convolution</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>filters</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_dilation_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <briefdescription>
<para>Constructs a batched convolution operation with no data dilation (i.e., all data dilation strides are 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the input data batch tensor.<linebreak/>
 <computeroutput>[N, C_IN, D1, ... Df]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filters</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the filters tensor.<linebreak/>
 <computeroutput>[C_OUT, C_IN, F1, ... Ff]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_movement_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window movement strides.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_dilation_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window dilation strides.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_below</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-below sizes.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_above</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-above sizes.<linebreak/>
 <computeroutput>[f]</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
Output <computeroutput>[N, C_OUT, R1, ... Rf]</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="74" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="293" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a7a1eba89fe97589dafad151de36a68ae_1a7a1eba89fe97589dafad151de36a68ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Convolution::Convolution</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch, const std::shared_ptr&lt; Node &gt; &amp;filters, const Strides &amp;window_movement_strides, const Strides &amp;window_dilation_strides)</argsstring>
        <name>Convolution</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>filters</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_dilation_strides</declname>
        </param>
        <briefdescription>
<para>Constructs a batched convolution operation with no padding or data dilation (i.e., padding above and below are 0 everywhere, and all data dilation strides are 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the input data batch tensor.<linebreak/>
 <computeroutput>[N, C_IN, D1, ... Df]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filters</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the filters tensor.<linebreak/>
 <computeroutput>[C_OUT, C_IN, F1, ... Ff]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_movement_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window movement strides.<linebreak/>
 <computeroutput>[f]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_dilation_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window dilation strides.<linebreak/>
 <computeroutput>[f]</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
Output <computeroutput>[N, C_OUT, R1, ... Rf]</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="94" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="322" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a47ab459092b4bd472cfe09e41a1dfddf_1a47ab459092b4bd472cfe09e41a1dfddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Convolution::Convolution</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch, const std::shared_ptr&lt; Node &gt; &amp;filters, const Strides &amp;window_movement_strides)</argsstring>
        <name>Convolution</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>filters</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <briefdescription>
<para>Constructs a batched convolution operation with no window dilation, padding, or data dilation (i.e., padding above and below are 0 everywhere, and all window/data dilation strides are 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the input data batch tensor.<linebreak/>
 <computeroutput>[N, C_IN, D1, ... Df]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filters</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the filters tensor.<linebreak/>
 <computeroutput>[C_OUT, C_IN, F1, ... Ff]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window_movement_strides</parametername>
</parameternamelist>
<parameterdescription>
<para>The window movement strides.<linebreak/>
 <computeroutput>[f]</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
Output <computeroutput>[N, C_OUT, R1, ... Rf]</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="110" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="335" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_ae398be2a09c48163922d0162fc070d08_1ae398be2a09c48163922d0162fc070d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Convolution::Convolution</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch, const std::shared_ptr&lt; Node &gt; &amp;filters)</argsstring>
        <name>Convolution</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>filters</declname>
        </param>
        <briefdescription>
<para>Constructs a batched convolution operation with no window dilation or movement stride (i.e., padding above and below are 0 everywhere, and all window/data dilation strides and window movement strides are 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the input data batch tensor.<linebreak/>
 <computeroutput>[N, C_IN, D1, ... Df]</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filters</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the filters tensor.<linebreak/>
 <computeroutput>[C_OUT, C_IN, F1, ... Ff]</computeroutput></para></parameterdescription>
</parameteritem>
</parameterlist>
Output <computeroutput>[N, C_OUT, R1, ... Rf]</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="123" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="347" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_1a49dfeaf50c5a6ab1884e1e9129f323f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Node &gt; op::Convolution::copy_with_new_args</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Node &gt;&gt; &amp;new_args) const override</argsstring>
        <name>copy_with_new_args</name>
        <reimplements refid="classngraph_1_1Node_1a0c3c1afcdb7effe100c653b86a2eb56e">copy_with_new_args</reimplements>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;&gt; &amp;</type>
          <declname>new_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="126" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="359" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_1a1f9e1534e9d557cc62889a0014eec31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void op::Convolution::generate_adjoints</definition>
        <argsstring>(autodiff::Adjoints &amp;adjoints, const std::shared_ptr&lt; Node &gt; &amp;delta) override</argsstring>
        <name>generate_adjoints</name>
        <reimplements refid="classngraph_1_1Node_1a423c05a93bb628e8c311b631fb6a582c">generate_adjoints</reimplements>
        <param>
          <type><ref refid="classngraph_1_1autodiff_1_1Adjoints" kindref="compound">autodiff::Adjoints</ref> &amp;</type>
          <declname>adjoints</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="128" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="374" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a2852be7be2103e848aaee8157d142725_1a2852be7be2103e848aaee8157d142725" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
        <definition>const Strides&amp; ngraph::op::Convolution::get_window_movement_strides</definition>
        <argsstring>() const</argsstring>
        <name>get_window_movement_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The window movement strides. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="132" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a514ce776769ed90b546b328dc9d7bdd2_1a514ce776769ed90b546b328dc9d7bdd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
        <definition>const Strides&amp; ngraph::op::Convolution::get_window_dilation_strides</definition>
        <argsstring>() const</argsstring>
        <name>get_window_dilation_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The window dilation strides. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="134" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_a46857940ab93948dcf8056cb391211f6_1a46857940ab93948dcf8056cb391211f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
        <definition>const CoordinateDiff&amp; ngraph::op::Convolution::get_padding_below</definition>
        <argsstring>() const</argsstring>
        <name>get_padding_below</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The padding-below sizes (possibly negative). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="136" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_ae31c061b03d8f8bb38edfa3c456581af_1ae31c061b03d8f8bb38edfa3c456581af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
        <definition>const CoordinateDiff&amp; ngraph::op::Convolution::get_padding_above</definition>
        <argsstring>() const</argsstring>
        <name>get_padding_above</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The padding-above sizes (possibly negative). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="138" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_af86ca4307810f97b0e377a087576218d_1af86ca4307810f97b0e377a087576218d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
        <definition>const Strides&amp; ngraph::op::Convolution::get_data_dilation_strides</definition>
        <argsstring>() const</argsstring>
        <name>get_data_dilation_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The input data dilation strides. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="140" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_1a5f483b433b90162618ab0eaaeeaf0ef6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref></type>
        <definition>Strides op::Convolution::default_strides</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch)</argsstring>
        <name>default_strides</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="149" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="280" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Convolution_1a113f90d7080441e27a1b6cfdbcc51f40" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref></type>
        <definition>CoordinateDiff op::Convolution::default_padding</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;data_batch)</argsstring>
        <name>default_padding</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>data_batch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="150" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp" bodystart="309" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Batched convolution operation, with optional window dilation and stride. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="746">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="747" relation="public-inheritance">
        </childnode>
      </node>
      <node id="744">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="747">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="745">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="746" relation="public-inheritance">
        </childnode>
      </node>
      <node id="743">
        <label>ngraph::op::Convolution</label>
        <link refid="classngraph_1_1op_1_1Convolution"/>
        <childnode refid="744" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="751">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="752" relation="public-inheritance">
        </childnode>
        <childnode refid="753" relation="usage">
          <edgelabel>m_outputs</edgelabel>
        </childnode>
        <childnode refid="761" relation="usage">
          <edgelabel>liveness_live_list</edgelabel>
          <edgelabel>liveness_free_list</edgelabel>
          <edgelabel>liveness_new_list</edgelabel>
        </childnode>
        <childnode refid="769" relation="usage">
          <edgelabel>m_users</edgelabel>
        </childnode>
        <childnode refid="771" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="772" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
        <childnode refid="764" relation="usage">
          <edgelabel>m_node_type</edgelabel>
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="749">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="750" relation="public-inheritance">
        </childnode>
      </node>
      <node id="758">
        <label>K</label>
      </node>
      <node id="760">
        <label>T</label>
      </node>
      <node id="776">
        <label>std::vector&lt; std::ptrdiff_t &gt;</label>
        <childnode refid="777" relation="template-instance">
          <edgelabel>&lt; std::ptrdiff_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="769">
        <label>std::multiset&lt; ngraph::Node *&gt;</label>
        <childnode refid="751" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="770" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="777">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="760" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="775">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="758" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="760" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="772">
        <label>std::unordered_map&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</label>
        <childnode refid="773" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="751" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="775" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</edgelabel>
        </childnode>
      </node>
      <node id="763">
        <label>ngraph::element::Type</label>
        <link refid="classngraph_1_1element_1_1Type"/>
      </node>
      <node id="754">
        <label>ngraph::descriptor::Output</label>
        <link refid="classngraph_1_1descriptor_1_1Output"/>
        <childnode refid="755" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="751" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="762">
        <label>ngraph::descriptor::Tensor</label>
        <link refid="classngraph_1_1descriptor_1_1Tensor"/>
        <childnode refid="763" relation="usage">
          <edgelabel>m_element_type</edgelabel>
        </childnode>
        <childnode refid="764" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="766" relation="usage">
          <edgelabel>m_primary_tensor_view</edgelabel>
        </childnode>
      </node>
      <node id="766">
        <label>ngraph::descriptor::PrimaryTensorView</label>
        <link refid="classngraph_1_1descriptor_1_1PrimaryTensorView"/>
        <childnode refid="767" relation="public-inheritance">
        </childnode>
        <childnode refid="762" relation="usage">
          <edgelabel>m_tensor</edgelabel>
        </childnode>
      </node>
      <node id="767">
        <label>ngraph::descriptor::TensorView</label>
        <link refid="classngraph_1_1descriptor_1_1TensorView"/>
        <childnode refid="764" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="753">
        <label>std::deque&lt; ngraph::descriptor::Output &gt;</label>
        <childnode refid="754" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="759" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="765">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="752">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="755">
        <label>std::set&lt; ngraph::descriptor::Input *&gt;</label>
        <childnode refid="756" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="757" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="750">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="751" relation="public-inheritance">
        </childnode>
      </node>
      <node id="757">
        <label>std::set&lt; K &gt;</label>
        <childnode refid="758" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="756">
        <label>ngraph::descriptor::Input</label>
        <link refid="classngraph_1_1descriptor_1_1Input"/>
        <childnode refid="754" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
        <childnode refid="751" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="770">
        <label>std::multiset&lt; K &gt;</label>
        <childnode refid="758" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="771">
        <label>std::deque&lt; ngraph::descriptor::Input &gt;</label>
        <childnode refid="756" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="759" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input &gt;</edgelabel>
        </childnode>
      </node>
      <node id="768">
        <label>std::unordered_set&lt; K &gt;</label>
        <childnode refid="758" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="748">
        <label>ngraph::op::Convolution</label>
        <link refid="classngraph_1_1op_1_1Convolution"/>
        <childnode refid="749" relation="public-inheritance">
        </childnode>
        <childnode refid="776" relation="usage">
          <edgelabel>m_padding_above</edgelabel>
          <edgelabel>m_padding_below</edgelabel>
        </childnode>
        <childnode refid="778" relation="usage">
          <edgelabel>m_data_dilation_strides</edgelabel>
          <edgelabel>m_window_dilation_strides</edgelabel>
          <edgelabel>m_window_movement_strides</edgelabel>
        </childnode>
      </node>
      <node id="778">
        <label>std::vector&lt; size_t &gt;</label>
        <childnode refid="777" relation="template-instance">
          <edgelabel>&lt; size_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="774">
        <label>std::unordered_map&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</label>
        <childnode refid="751" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="775" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="761">
        <label>std::unordered_set&lt; ngraph::descriptor::Tensor *&gt;</label>
        <childnode refid="762" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="768" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Tensor *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="773">
        <label>ngraph::autodiff::Adjoints</label>
        <link refid="classngraph_1_1autodiff_1_1Adjoints"/>
        <childnode refid="774" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
      </node>
      <node id="759">
        <label>std::deque&lt; T &gt;</label>
        <childnode refid="760" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="764">
        <label>std::string</label>
        <childnode refid="765" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.hpp" bodystart="27" bodyend="151"/>
    <listofallmembers>
      <member refid="classngraph_1_1Node_1a1bac19895a096bb5772f6a6c120b3813" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>add_output</name></member>
      <member refid="classngraph_1_1Node_1a5f3de445063d95cb31842e3a44e487c8" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>backprop_node</name></member>
      <member refid="classngraph_1_1Node_1a99c230728fde81ca9e64ed393d0728c4" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>clear_arguments</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a2a3329e920a1488df71e2979f21a9189_1a2a3329e920a1488df71e2979f21a9189" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Convolution</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_acbfec6c4a7cc0c64f64095050b24ad2f_1acbfec6c4a7cc0c64f64095050b24ad2f" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Convolution</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a7a1eba89fe97589dafad151de36a68ae_1a7a1eba89fe97589dafad151de36a68ae" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Convolution</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a47ab459092b4bd472cfe09e41a1dfddf_1a47ab459092b4bd472cfe09e41a1dfddf" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Convolution</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_ae398be2a09c48163922d0162fc070d08_1ae398be2a09c48163922d0162fc070d08" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Convolution</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a49dfeaf50c5a6ab1884e1e9129f323f8" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>copy_with_new_args</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a113f90d7080441e27a1b6cfdbcc51f40" prot="private" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>default_padding</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a5f483b433b90162618ab0eaaeeaf0ef6" prot="private" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>default_strides</name></member>
      <member refid="classngraph_1_1Node_1a92598fdffd86cf6fd3adf0081e041d2f" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>description</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a1f9e1534e9d557cc62889a0014eec31c" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>generate_adjoints</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_af86ca4307810f97b0e377a087576218d_1af86ca4307810f97b0e377a087576218d" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_data_dilation_strides</name></member>
      <member refid="classngraph_1_1Node_1a08ce613a6a22b1083c05321f0dced2a6" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_element_type</name></member>
      <member refid="classngraph_1_1Node_1abb77c47e270bdf0622587ee86919b492" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>get_functions</name></member>
      <member refid="classngraph_1_1Node_1a98841a99a32bdcf64a371ff2aed2abc1" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_input_element_type</name></member>
      <member refid="classngraph_1_1Node_1aa7aaefcd4db958482315af48cb221a6c" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_input_op</name></member>
      <member refid="classngraph_1_1Node_1ac9b5aed803ef1f50a02a87dc81034ffe" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>get_input_ops</name></member>
      <member refid="classngraph_1_1Node_1a9ff5f656d6b183cc00af753ec6b6144a" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_input_shape</name></member>
      <member refid="classngraph_1_1Node_1a69c6620b65b11187bf367a2d0e440699" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_input_size</name></member>
      <member refid="classngraph_1_1Node_1a3e88cf704f45f337a48d79a16a54e2c7" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a3d47e40f640c1469db01a33611a993e0" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a7a189270f6c1d02aa62c11b82d837bfb" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_instance_id</name></member>
      <member refid="classngraph_1_1Node_1ab0228a9136af1c06e6c32503871aa037" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_name</name></member>
      <member refid="classngraph_1_1Node_1a49900b3c7bc6ee44c466a622ccf52f71" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_node_id</name></member>
      <member refid="classngraph_1_1op_1_1Op_1a4f467309aee6d72bb286c09cd09c4bbf" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a91ccdcd6a30ca5a265c74f0f2734210b" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_element_type</name></member>
      <member refid="classngraph_1_1Node_1a68967e741c4045d22b712c5f644f5fa7" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_inputs</name></member>
      <member refid="classngraph_1_1Node_1a29bad373294c6939549d3302c6c5b45c" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_shape</name></member>
      <member refid="classngraph_1_1Node_1a9257d1be4e21fd9b4e834ee763c9ab03" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_size</name></member>
      <member refid="classngraph_1_1Node_1a0cb34ea18330939c53fbf7fe15603c32" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a1d7465ea8dda0f2f22c13929656d4291" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a45ae2b4b094d1d91d1c867dc30143d7a" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1a75b38938bbc73474c8ea083b36da876c" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1ac9aae122c66b9d82c240fd35c1e45250" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1Node_1aed735e2ef3cda31846ec7f0a85ebd5d8" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_ae31c061b03d8f8bb38edfa3c456581af_1ae31c061b03d8f8bb38edfa3c456581af" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_padding_above</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a46857940ab93948dcf8056cb391211f6_1a46857940ab93948dcf8056cb391211f6" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_padding_below</name></member>
      <member refid="classngraph_1_1Node_1a7a690a13f82f2420e221be4ef0987f56" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a514ce776769ed90b546b328dc9d7bdd2_1a514ce776769ed90b546b328dc9d7bdd2" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_window_dilation_strides</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_a2852be7be2103e848aaee8157d142725_1a2852be7be2103e848aaee8157d142725" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>get_window_movement_strides</name></member>
      <member refid="classngraph_1_1Node_1a17548877a029631148b2fa00c2f11fcb" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>has_same_type</name></member>
      <member refid="classngraph_1_1Node_1ad0a48043e7858c06a2c91b25c2e88030" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>is_commutative</name></member>
      <member refid="classngraph_1_1Node_1aa560b6ff7736831265cf1ce1346e6376" prot="public" virt="virtual"><scope>ngraph::op::Convolution</scope><name>is_constant</name></member>
      <member refid="classngraph_1_1Node_1ad3ae6e9bcbf2462a074847fdf47ab986" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>is_output</name></member>
      <member refid="classngraph_1_1Node_1ab700ac2bc2dec9138e3e1575b49075c6" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>is_parameter</name></member>
      <member refid="classngraph_1_1Node_ad69bb7920f3c6898754e0e938461fa8c_1ad69bb7920f3c6898754e0e938461fa8c" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>is_same_op_type</name></member>
      <member refid="classngraph_1_1Node_1a4f36c2c5ae51d1073d5bc23ab44cd72f" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>liveness_free_list</name></member>
      <member refid="classngraph_1_1Node_1aa58e8eb953c65c957dbdc56d7aa1dca5" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>liveness_live_list</name></member>
      <member refid="classngraph_1_1Node_1a572f0f0ef5cb7d309a86b1ffddda7da1" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>liveness_new_list</name></member>
      <member refid="classngraph_1_1Node_1a881dacc03050bbe8dc679455c99bfaa8" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_adjoint_map</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1acc1599f87de06a8f6a231fa379502f3c" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_data_dilation_strides</name></member>
      <member refid="classngraph_1_1Node_1a4f55bb2b70a88ddcc407a2930da034e7" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_inputs</name></member>
      <member refid="classngraph_1_1Node_1ae927d96858146fd4aad4f7a9d6c03e8e" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a034da5cfe5401a01045f2fd8a9374ca7" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_is_output</name></member>
      <member refid="classngraph_1_1Node_1af72ec96a91723b94174886a947835f93" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_name</name></member>
      <member refid="classngraph_1_1Node_1afc2e9023e2895f9d7465062ce7bbd49e" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_next_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a9d06e17d8a569f809d6d322edb405b24" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_node_type</name></member>
      <member refid="classngraph_1_1Node_1a177ab91b7609c16e8d57e1a7182f2bd0" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1ac6d32fc3de3aade4fdcf47ee02f318ad" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_padding_above</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a9b9bdc1a347dfb41357c2a62e934acc7" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_padding_below</name></member>
      <member refid="classngraph_1_1Node_1ad0f9c97f26a1ad8a42b7308f0e4773f5" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_users</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a3f434866f0612cb0f8b6fbafaf7f71db" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_window_dilation_strides</name></member>
      <member refid="classngraph_1_1op_1_1Convolution_1a79a93b854b7c479ac739be2d9d132a50" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>m_window_movement_strides</name></member>
      <member refid="classngraph_1_1Node_1a0259d67ef3d6d82e38dbafa62d1463e2" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Node</name></member>
      <member refid="classngraph_1_1op_1_1Op_1adfb9351528f9956627f25e07baa560fa" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>Op</name></member>
      <member refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs_a4ec9a470de62c9b1986d139f72717eb5_1a4ec9a470de62c9b1986d139f72717eb5" prot="protected" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>RequiresTensorViewArgs</name></member>
      <member refid="classngraph_1_1Node_1a7bcdb7230a14c3c76a38392bfeacea1a" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>set_is_output</name></member>
      <member refid="classngraph_1_1Node_1a21c1e9e47d5447ba37982d1bbc57e79c" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>set_name</name></member>
      <member refid="classngraph_1_1op_1_1Op_1aba75fd5c954f4480c2e4ddb4e1fc5f2a" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>set_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a0a2d35a1430bc4671184eec8e1425640" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a7500930e175b8f522d26988796727ce1" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a1ca1186be7560ca6fd3a4bc1819526a1" prot="public" virt="non-virtual"><scope>ngraph::op::Convolution</scope><name>users</name></member>
      <member refid="classngraph_1_1Node_1a2a6579e8a1f70539b8e47d100eb06ae6" prot="protected" virt="virtual"><scope>ngraph::op::Convolution</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
