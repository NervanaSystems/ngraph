<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="reshape_8cpp" kind="file" language="C++">
    <compoundname>reshape.cpp</compoundname>
    <includes refid="ops_2reshape_8hpp" local="yes">ngraph/ops/reshape.hpp</includes>
    <includes refid="function_8hpp" local="yes">ngraph/function.hpp</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="7954">
        <label>list</label>
      </node>
      <node id="7930">
        <label>atomic</label>
      </node>
      <node id="7938">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="7932" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
      </node>
      <node id="7939">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7940" relation="include">
        </childnode>
        <childnode refid="7942" relation="include">
        </childnode>
      </node>
      <node id="7949">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7924" relation="include">
        </childnode>
        <childnode refid="7937" relation="include">
        </childnode>
        <childnode refid="7950" relation="include">
        </childnode>
      </node>
      <node id="7929">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="7930" relation="include">
        </childnode>
        <childnode refid="7931" relation="include">
        </childnode>
        <childnode refid="7932" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7924" relation="include">
        </childnode>
        <childnode refid="7928" relation="include">
        </childnode>
        <childnode refid="7933" relation="include">
        </childnode>
        <childnode refid="7934" relation="include">
        </childnode>
        <childnode refid="7935" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7936" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7937" relation="include">
        </childnode>
        <childnode refid="7949" relation="include">
        </childnode>
        <childnode refid="7938" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
      </node>
      <node id="7948">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="7931" relation="include">
        </childnode>
        <childnode refid="7944" relation="include">
        </childnode>
        <childnode refid="7947" relation="include">
        </childnode>
      </node>
      <node id="7947">
        <label>stdexcept</label>
      </node>
      <node id="7921">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7927" relation="include">
        </childnode>
      </node>
      <node id="7928">
        <label>string</label>
      </node>
      <node id="7943">
        <label>map</label>
      </node>
      <node id="7935">
        <label>unordered_set</label>
      </node>
      <node id="7942">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="7943" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7944" relation="include">
        </childnode>
        <childnode refid="7928" relation="include">
        </childnode>
        <childnode refid="7945" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7946" relation="include">
        </childnode>
        <childnode refid="7948" relation="include">
        </childnode>
      </node>
      <node id="7922">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7924" relation="include">
        </childnode>
        <childnode refid="7925" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
      </node>
      <node id="7937">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7938" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
      </node>
      <node id="7940">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="7941" relation="include">
        </childnode>
        <childnode refid="7932" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
      </node>
      <node id="7936">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7934" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
      </node>
      <node id="7955">
        <label>ngraph/ops/parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="7927" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
      </node>
      <node id="7927">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="7928" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7929" relation="include">
        </childnode>
        <childnode refid="7951" relation="include">
        </childnode>
      </node>
      <node id="7941">
        <label>cstdio</label>
      </node>
      <node id="7926">
        <label>vector</label>
      </node>
      <node id="7925">
        <label>utility</label>
      </node>
      <node id="7944">
        <label>sstream</label>
      </node>
      <node id="7919">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reshape.cpp</label>
        <link refid="reshape_8cpp"/>
        <childnode refid="7920" relation="include">
        </childnode>
        <childnode refid="7952" relation="include">
        </childnode>
        <childnode refid="7956" relation="include">
        </childnode>
      </node>
      <node id="7952">
        <label>ngraph/function.hpp</label>
        <link refid="function_8hpp_source"/>
        <childnode refid="7930" relation="include">
        </childnode>
        <childnode refid="7953" relation="include">
        </childnode>
        <childnode refid="7954" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7928" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7949" relation="include">
        </childnode>
        <childnode refid="7950" relation="include">
        </childnode>
        <childnode refid="7948" relation="include">
        </childnode>
        <childnode refid="7929" relation="include">
        </childnode>
        <childnode refid="7927" relation="include">
        </childnode>
        <childnode refid="7955" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
      </node>
      <node id="7932">
        <label>iostream</label>
      </node>
      <node id="7951">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="7931">
        <label>deque</label>
      </node>
      <node id="7934">
        <label>unordered_map</label>
      </node>
      <node id="7946">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="7947" relation="include">
        </childnode>
      </node>
      <node id="7945">
        <label>type_traits</label>
      </node>
      <node id="7924">
        <label>set</label>
      </node>
      <node id="7950">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7940" relation="include">
        </childnode>
      </node>
      <node id="7956">
        <label>algorithm</label>
      </node>
      <node id="7923">
        <label>memory</label>
      </node>
      <node id="7920">
        <label>ngraph/ops/reshape.hpp</label>
        <link refid="ops_2reshape_8hpp_source"/>
        <childnode refid="7921" relation="include">
        </childnode>
      </node>
      <node id="7953">
        <label>initializer_list</label>
      </node>
      <node id="7933">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/reshape.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/function.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classngraph_1_1op_1_1Reshape_a165f7246d62a9d31d753622d021bcb8e_1a165f7246d62a9d31d753622d021bcb8e" refkind="member"><highlight class="normal">op::Reshape::Reshape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>arg,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref>&amp;<sp/>input_order,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>output_shape)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>RequiresTensorViewArgs(</highlight><highlight class="stringliteral">&quot;Reshape&quot;</highlight><highlight class="normal">,<sp/>{arg})</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_input_order(input_order)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_output_shape(output_shape)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input<sp/>=<sp/>get_inputs().at(0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_shape<sp/>=<sp/>input.get_shape();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_rank<sp/>=<sp/>input_shape.size();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_input_order.size()<sp/>!=<sp/>input_rank)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>axis<sp/>order<sp/>for<sp/>reshape<sp/>is<sp/>not<sp/>a<sp/>permutation<sp/>of<sp/>argument&apos;s<sp/>axes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input_rank;<sp/>i++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find(std::begin(m_input_order),<sp/>std::end(m_input_order),<sp/>i);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::end(m_input_order)<sp/>==<sp/>it)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>axis<sp/>order<sp/>for<sp/>reshape<sp/>is<sp/>not<sp/>a<sp/>permutation<sp/>of<sp/>argument&apos;s<sp/>axes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_shape_product<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>input_shape)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_shape_product<sp/>*=<sp/>i;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_shape_product<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>m_output_shape)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_shape_product<sp/>*=<sp/>i;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_shape_product<sp/>!=<sp/>output_shape_product)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Product<sp/>of<sp/>output<sp/>shape<sp/>dimensions<sp/>does<sp/>not<sp/>match<sp/>product<sp/>of<sp/>argument<sp/>shape<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dimensions<sp/>for<sp/>reshape&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>set_value_type_checked(input.get_element_type(),<sp/>m_output_shape);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>op::Reshape::generate_adjoints(<ref refid="classngraph_1_1autodiff_1_1Adjoints" kindref="compound">autodiff::Adjoints</ref>&amp;<sp/>adjoints,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>delta)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x_shape<sp/>=<sp/>get_inputs().at(0).get_shape();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x_rank<sp/>=<sp/>x_shape.size();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>permuted_x_shape(x_rank);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref><sp/>x_input_order(x_rank);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_permuted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x_rank;<sp/>++i)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>permuted_i<sp/>=<sp/>m_input_order[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>permuted_i)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_permuted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permuted_x_shape[i]<sp/>=<sp/>x_shape[permuted_i];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_input_order[permuted_i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref><sp/>input_order(m_output_shape.size());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_output_shape.size();<sp/>i++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_order[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reshape<sp/>=<sp/>make_shared&lt;op::Reshape&gt;(delta,<sp/>input_order,<sp/>permuted_x_shape);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_permuted)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reshape<sp/>=<sp/>make_shared&lt;op::Reshape&gt;(reshape,<sp/>x_input_order,<sp/>x_shape);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>adjoints.<ref refid="classngraph_1_1autodiff_1_1Adjoints_a5fd56c8712a1947ebce69c13d6b623b0_1a5fd56c8712a1947ebce69c13d6b623b0" kindref="member">add_delta</ref>(get_input_op(0),<sp/>reshape);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reshape.cpp"/>
  </compounddef>
</doxygen>
