<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1TensorViewType" kind="class" language="C++" prot="public">
    <compoundname>ngraph::TensorViewType</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; TensorViewType &gt;</basecompoundref>
    <includes refid="type_8hpp" local="no">type.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1TensorViewType_1ac8e98665d5e5bbfcf1a209510da5a2ad" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref></type>
        <definition>const element::Type ngraph::TensorViewType::m_element_type</definition>
        <argsstring></argsstring>
        <name>m_element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="54" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1TensorViewType_1aea6d53f1fff0b3be2c3234521bc52a56" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref></type>
        <definition>Shape ngraph::TensorViewType::m_shape</definition>
        <argsstring></argsstring>
        <name>m_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="55" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1aa0ffdaffca099eab950dd6cb221561ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &amp;</type>
        <definition>TensorViewType&amp; ngraph::TensorViewType::operator=</definition>
        <argsstring>(const ValueType &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const ValueType &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1TensorViewType_ac101f4d3422631b0aebb32f003245313_1ac101f4d3422631b0aebb32f003245313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngraph::TensorViewType::TensorViewType</definition>
        <argsstring>(const element::Type &amp;element_type, const Shape &amp;shape)</argsstring>
        <name>TensorViewType</name>
        <param>
          <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref> &amp;</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/param element_type The type of the tensor elements. /param shape The shape of the tensor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="39" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1a5249df62579c95508051b1d0be874c94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref> &amp;</type>
        <definition>const element::Type&amp; ngraph::TensorViewType::get_element_type</definition>
        <argsstring>() const</argsstring>
        <name>get_element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="45" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1ae16e4e7ad6c28b89b05ac5869238670a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape&amp; ngraph::TensorViewType::get_shape</definition>
        <argsstring>() const</argsstring>
        <name>get_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="46" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1a4718ed75a83dbaa48a714b6e0822dd43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TensorViewType::operator==</definition>
        <argsstring>(const TensorViewType &amp;that) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="47" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp" bodystart="32" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1a2cd7633270bc0b3bd3d848c675414e04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TensorViewType::operator!=</definition>
        <argsstring>(const TensorViewType &amp;that) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="48" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1TensorViewType_1a4b8a3bbdb08309a87aa2df9a2e081c5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TensorViewType::collect_tensor_views</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; const TensorViewType &gt;&gt; &amp;views) const</argsstring>
        <name>collect_tensor_views</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; const <ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &gt;&gt; &amp;</type>
          <declname>views</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="49" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classngraph_1_1TensorViewType_1a7b2cb74569c51441ce8ffd528a5b310f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const TensorViewType &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a tensor view; an element type and a shape. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3505">
        <label>ngraph::TensorViewType</label>
        <link refid="classngraph_1_1TensorViewType"/>
        <childnode refid="3506" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3506">
        <label>std::enable_shared_from_this&lt; TensorViewType &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3507">
        <label>ngraph::TensorViewType</label>
        <link refid="classngraph_1_1TensorViewType"/>
        <childnode refid="3508" relation="public-inheritance">
        </childnode>
        <childnode refid="3509" relation="usage">
          <edgelabel>m_element_type</edgelabel>
        </childnode>
        <childnode refid="3510" relation="usage">
          <edgelabel>m_shape</edgelabel>
        </childnode>
      </node>
      <node id="3512">
        <label>T</label>
      </node>
      <node id="3511">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="3512" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3509">
        <label>ngraph::element::Type</label>
        <link refid="classngraph_1_1element_1_1Type"/>
      </node>
      <node id="3508">
        <label>std::enable_shared_from_this&lt; TensorViewType &gt;</label>
      </node>
      <node id="3510">
        <label>std::vector&lt; size_t &gt;</label>
        <childnode refid="3511" relation="template-instance">
          <edgelabel>&lt; size_t &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" line="33" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.hpp" bodystart="32" bodyend="56"/>
    <listofallmembers>
      <member refid="classngraph_1_1TensorViewType_1a4b8a3bbdb08309a87aa2df9a2e081c5b" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>collect_tensor_views</name></member>
      <member refid="classngraph_1_1TensorViewType_1a5249df62579c95508051b1d0be874c94" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>get_element_type</name></member>
      <member refid="classngraph_1_1TensorViewType_1ae16e4e7ad6c28b89b05ac5869238670a" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1TensorViewType_1ac8e98665d5e5bbfcf1a209510da5a2ad" prot="protected" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>m_element_type</name></member>
      <member refid="classngraph_1_1TensorViewType_1aea6d53f1fff0b3be2c3234521bc52a56" prot="protected" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>m_shape</name></member>
      <member refid="classngraph_1_1TensorViewType_1a2cd7633270bc0b3bd3d848c675414e04" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>operator!=</name></member>
      <member refid="classngraph_1_1TensorViewType_1a7b2cb74569c51441ce8ffd528a5b310f" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>operator&lt;&lt;</name></member>
      <member refid="classngraph_1_1TensorViewType_1aa0ffdaffca099eab950dd6cb221561ea" prot="private" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>operator=</name></member>
      <member refid="classngraph_1_1TensorViewType_1a4718ed75a83dbaa48a714b6e0822dd43" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>operator==</name></member>
      <member refid="classngraph_1_1TensorViewType_ac101f4d3422631b0aebb32f003245313_1ac101f4d3422631b0aebb32f003245313" prot="public" virt="non-virtual"><scope>ngraph::TensorViewType</scope><name>TensorViewType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
