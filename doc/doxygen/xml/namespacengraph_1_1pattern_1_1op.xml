<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespacengraph_1_1pattern_1_1op" kind="namespace" language="C++">
    <compoundname>ngraph::pattern::op</compoundname>
    <innerclass refid="classngraph_1_1pattern_1_1op_1_1Any" prot="public">ngraph::pattern::op::Any</innerclass>
    <innerclass refid="classngraph_1_1pattern_1_1op_1_1Label" prot="public">ngraph::pattern::op::Label</innerclass>
    <innerclass refid="classngraph_1_1pattern_1_1op_1_1Pattern" prot="public">ngraph::pattern::op::Pattern</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pattern_8hpp_1ada6e490575473aefeadc7f141980430c" prot="public" static="no">
        <type>std::function&lt; bool(std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;)&gt;</type>
        <definition>using ngraph::pattern::op::Predicate = typedef std::function&lt;bool(std::shared_ptr&lt;Node&gt;)&gt;</definition>
        <argsstring></argsstring>
        <name>Predicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/op/pattern.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/op/pattern.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="38" column="1"/>
  </compounddef>
</doxygen>
