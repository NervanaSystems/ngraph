<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1pass_1_1VisualizeTree" kind="class" language="C++" prot="public">
    <compoundname>ngraph::pass::VisualizeTree</compoundname>
    <basecompoundref refid="classngraph_1_1pass_1_1ModulePass" prot="public" virt="non-virtual">ngraph::pass::ModulePass</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngraph_1_1pass_1_1VisualizeTree_1ae646910251aa9ebfd3df1a77fbf35030" prot="private" static="no" mutable="no">
        <type>std::stringstream</type>
        <definition>std::stringstream ngraph::pass::VisualizeTree::m_ss</definition>
        <argsstring></argsstring>
        <name>m_ss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="44" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pass_1_1VisualizeTree_1a50db31aae5b614eb18628ee4336a4586" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ngraph::pass::VisualizeTree::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="45" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pass_1_1VisualizeTree_1a5e245c03091a0796bc9b421ca9104696" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &gt;</type>
        <definition>std::set&lt;std::shared_ptr&lt;Node&gt; &gt; ngraph::pass::VisualizeTree::m_nodes_with_attributes</definition>
        <argsstring></argsstring>
        <name>m_nodes_with_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="46" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1pass_1_1VisualizeTree_1afb42792fd60836cb3e58ba3f3940b164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pass::VisualizeTree::VisualizeTree</definition>
        <argsstring>(const std::string &amp;file_name)</argsstring>
        <name>VisualizeTree</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="36" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1VisualizeTree_1a31b2d544ae192e89d798a7cda0abcd8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool pass::VisualizeTree::run_on_module</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; ngraph::Function &gt;&gt; &amp;) override</argsstring>
        <name>run_on_module</name>
        <reimplements refid="classngraph_1_1pass_1_1ModulePass_1ae9edbd032dd8a9007e748e472f234e15">run_on_module</reimplements>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">ngraph::Function</ref> &gt;&gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="37" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp" bodystart="29" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classngraph_1_1pass_1_1VisualizeTree_1ab3f3bd003b5abe66d29af268a4414e66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string pass::VisualizeTree::add_attributes</definition>
        <argsstring>(std::shared_ptr&lt; Node &gt; node)</argsstring>
        <name>add_attributes</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="40" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1VisualizeTree_1a456795d5df21ea3d819f6adb83169119" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string pass::VisualizeTree::get_attributes</definition>
        <argsstring>(std::shared_ptr&lt; Node &gt; node)</argsstring>
        <name>get_attributes</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="41" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp" bodystart="66" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1VisualizeTree_1af308b2bae6b821afc4c66e7f0af4907a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pass::VisualizeTree::render</definition>
        <argsstring>() const</argsstring>
        <name>render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="42" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp" bodystart="98" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3204">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3202">
        <label>ngraph::pass::VisualizeTree</label>
        <link refid="classngraph_1_1pass_1_1VisualizeTree"/>
        <childnode refid="3203" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3203">
        <label>ngraph::pass::ModulePass</label>
        <link refid="classngraph_1_1pass_1_1ModulePass"/>
        <childnode refid="3204" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3207">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3205">
        <label>ngraph::pass::VisualizeTree</label>
        <link refid="classngraph_1_1pass_1_1VisualizeTree"/>
        <childnode refid="3206" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3206">
        <label>ngraph::pass::ModulePass</label>
        <link refid="classngraph_1_1pass_1_1ModulePass"/>
        <childnode refid="3207" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" line="34" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.hpp" bodystart="33" bodyend="47"/>
    <listofallmembers>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1ab3f3bd003b5abe66d29af268a4414e66" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>add_attributes</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1a456795d5df21ea3d819f6adb83169119" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>get_attributes</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1a6a9dcb9d4bce48982a2b617aa0bda044" prot="protected" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>get_state</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1a50db31aae5b614eb18628ee4336a4586" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>m_name</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1a5e245c03091a0796bc9b421ca9104696" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>m_nodes_with_attributes</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1ae646910251aa9ebfd3df1a77fbf35030" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>m_ss</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1af308b2bae6b821afc4c66e7f0af4907a" prot="private" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>render</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1a31b2d544ae192e89d798a7cda0abcd8e" prot="public" virt="virtual"><scope>ngraph::pass::VisualizeTree</scope><name>run_on_module</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1ad8ce3a63e3dbc2ff63e6c6f51a8505b8" prot="protected" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>set_state</name></member>
      <member refid="classngraph_1_1pass_1_1VisualizeTree_1afb42792fd60836cb3e58ba3f3940b164" prot="public" virt="non-virtual"><scope>ngraph::pass::VisualizeTree</scope><name>VisualizeTree</name></member>
      <member refid="classngraph_1_1pass_1_1ModulePass_1ae3cff670a30498d887d704044b344e53" prot="public" virt="virtual"><scope>ngraph::pass::VisualizeTree</scope><name>~ModulePass</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1a1c9216df0fd4e6740ad7db6b3d632c81" prot="public" virt="virtual"><scope>ngraph::pass::VisualizeTree</scope><name>~PassBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
