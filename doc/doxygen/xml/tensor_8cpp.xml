<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="tensor_8cpp" kind="file" language="C++">
    <compoundname>tensor.cpp</compoundname>
    <includes refid="tensor_8hpp" local="yes">ngraph/descriptor/tensor.hpp</includes>
    <includes refid="primary__tensor__view_8hpp" local="yes">ngraph/descriptor/primary_tensor_view.hpp</includes>
    <includes refid="node_8hpp" local="yes">ngraph/node.hpp</includes>
    <incdepgraph>
      <node id="1954">
        <label>atomic</label>
      </node>
      <node id="1932">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1936">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
      </node>
      <node id="1960">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
      </node>
      <node id="1953">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1949">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
      </node>
      <node id="1948">
        <label>stdexcept</label>
      </node>
      <node id="1945">
        <label>string</label>
      </node>
      <node id="1943">
        <label>map</label>
      </node>
      <node id="1957">
        <label>unordered_set</label>
      </node>
      <node id="1942">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1946" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
      </node>
      <node id="1939">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
      </node>
      <node id="1959">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1937">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="1938" relation="include">
        </childnode>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1958">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1938">
        <label>cstdio</label>
      </node>
      <node id="1935">
        <label>vector</label>
      </node>
      <node id="1951">
        <label>ngraph/descriptor/primary_tensor_view.hpp</label>
        <link refid="primary__tensor__view_8hpp_source"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1941">
        <label>utility</label>
      </node>
      <node id="1944">
        <label>sstream</label>
      </node>
      <node id="1933">
        <label>iostream</label>
      </node>
      <node id="1950">
        <label>deque</label>
      </node>
      <node id="1956">
        <label>unordered_map</label>
      </node>
      <node id="1947">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="1948" relation="include">
        </childnode>
      </node>
      <node id="1931">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/tensor.cpp</label>
        <link refid="tensor_8cpp"/>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
      </node>
      <node id="1946">
        <label>type_traits</label>
      </node>
      <node id="1940">
        <label>set</label>
      </node>
      <node id="1952">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
      </node>
      <node id="1934">
        <label>memory</label>
      </node>
      <node id="1955">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tensor_8cpp_1a390c9e6be0bc07ef89175ca1bab7e782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;out, const descriptor::Tensor &amp;tensor)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">descriptor::Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/tensor.cpp" line="72" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/tensor.cpp" bodystart="72" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/tensor.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/descriptor/primary_tensor_view.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">descriptor::Tensor::Tensor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>&amp;<sp/>element_type,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimaryTensorView*<sp/>primary_tensor_view,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_output,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_input,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_constant)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_element_type(element_type)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_primary_tensor_view(primary_tensor_view)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_is_output{is_output}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_is_input{is_input}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_is_persistent{</highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_is_constant{is_constant}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_name{name}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_next_view_id{0}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>primary_tensor_view-&gt;get_tensor_view_type()-&gt;get_shape())</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>s;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>size<sp/>*<sp/>m_element_type.size();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>descriptor::Tensor::make_tensor_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1Node" kindref="compound">Node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>value_index)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;get_node_id()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(value_index);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>descriptor::Tensor::get_next_view_name()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_TV&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(m_next_view_id++);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>descriptor::Tensor::size()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>descriptor::Tensor::set_pool_offset(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pool_offset<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>descriptor::Tensor::get_pool_offset()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pool_offset;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">ostream&amp;<sp/>operator&lt;&lt;(ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">descriptor::Tensor</ref>&amp;<sp/>tensor)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tensor(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tensor.get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(tensor.is_persistent()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(tensor.is_constant()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(tensor.is_input()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(tensor.is_output()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tensor.is_persistent()<sp/>&amp;&amp;<sp/>!tensor.is_constant()<sp/>&amp;&amp;<sp/>!tensor.is_input()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!tensor.is_output())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/tensor.cpp"/>
  </compounddef>
</doxygen>
