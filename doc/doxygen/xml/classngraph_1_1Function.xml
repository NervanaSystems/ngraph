<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1Function" kind="class" language="C++" prot="public">
    <compoundname>ngraph::Function</compoundname>
    <derivedcompoundref refid="classngraph_1_1xla_1_1XLAFunction" prot="public" virt="non-virtual">ngraph::xla::XLAFunction</derivedcompoundref>
    <includes refid="function_8hpp" local="no">function.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1Function_1a601070c34e89f863a4ed425a857d3cd3" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref></type>
        <definition>Nodes ngraph::Function::m_results</definition>
        <argsstring></argsstring>
        <name>m_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="89" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1Function_1a03415aee847577ad488095c0481be198" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1Parameter" kindref="compound">ngraph::op::Parameter</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ngraph::op::Parameter&gt; &gt; ngraph::Function::m_parameters</definition>
        <argsstring></argsstring>
        <name>m_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="90" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1Function_1a7df18355dc84a6b1d43bbd7e4d77d08b" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ngraph::Function::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="91" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1Function_1a33971ec6b0fd30f829620551a4d0b592" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ngraph::Function::m_temporary_pool_size</definition>
        <argsstring></argsstring>
        <name>m_temporary_pool_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="92" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classngraph_1_1Function_1a00ce3cd1ac6567295c3f316d9d59b271" prot="private" static="yes" mutable="no">
        <type>std::atomic&lt; size_t &gt;</type>
        <definition>atomic&lt; size_t &gt; Function::m_next_instance_id</definition>
        <argsstring></argsstring>
        <name>m_next_instance_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="98" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngraph_1_1Function_1a023fa05a0c63dd9a0b749fb1441f0894" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ngraph::Function::m_instance_id</definition>
        <argsstring></argsstring>
        <name>m_instance_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="99" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1Function_1aeddb80a549de65b5ce4194536aa3a55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Function::Function</definition>
        <argsstring>(const Nodes &amp;results, const std::vector&lt; std::shared_ptr&lt; op::Parameter &gt;&gt; &amp;parameters, const std::string &amp;name=&quot;&quot;)</argsstring>
        <name>Function</name>
        <param>
          <type>const <ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1Parameter" kindref="compound">op::Parameter</ref> &gt;&gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="40" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="30" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a28959023204ebcde23d773f60a9df5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Function::Function</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;result, const std::vector&lt; std::shared_ptr&lt; op::Parameter &gt;&gt; &amp;parameters, const std::string &amp;name=&quot;&quot;)</argsstring>
        <name>Function</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1Parameter" kindref="compound">op::Parameter</ref> &gt;&gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="44" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1ade3836a9100bf35ad0d4ca0fab2a7ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ngraph::Function::~Function</definition>
        <argsstring>()</argsstring>
        <name>~Function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="48" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a041c69423241cb251fdd1e1779aaeb6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Function::get_output_size</definition>
        <argsstring>() const</argsstring>
        <name>get_output_size</name>
        <briefdescription>
<para>Return the number of outputs for this function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="51" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1abcf44df0bfb45c41605a36318b27d6e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>shared_ptr&lt; Node &gt; Function::get_output_op</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>get_output_op</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return the op that generates output i. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="54" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a85d48579c5b0022a5be07074b6928a8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref> &amp;</type>
        <definition>const element::Type &amp; Function::get_output_element_type</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>get_output_element_type</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return the element type of output i. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="57" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1aefd82188d979cff5fb69eb243d742024" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape &amp; Function::get_output_shape</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>get_output_shape</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return the shape of element i. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="60" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1ac20686ba123b3a9d38b32f3bffae6474" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1Parameter" kindref="compound">op::Parameter</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt;std::shared_ptr&lt;op::Parameter&gt; &gt;&amp; ngraph::Function::get_parameters</definition>
        <argsstring>() const</argsstring>
        <name>get_parameters</name>
        <briefdescription>
<para>Return the function parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="63" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a3210ad84a27bba0e5acc83fdc8fbc6a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &gt;</type>
        <definition>const std::vector&lt;std::shared_ptr&lt;Node&gt; &gt; ngraph::Function::get_results</definition>
        <argsstring>() const</argsstring>
        <name>get_results</name>
        <briefdescription>
<para>Return the ops that generate the results. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="69" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a9593d8f5361f8b14385978b54b9d0380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>shared_ptr&lt; Node &gt; Function::get_result</definition>
        <argsstring>() const</argsstring>
        <name>get_result</name>
        <briefdescription>
<para>Check that there is a single result and return it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="71" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a2e8ab3ccb4118fd7333c6809a0883181" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Function::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="73" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="66" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a6fa06d4f8d4537435a681d1f1829e40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Function::set_name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="74" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="80" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a9a2ab6a85377264d4c219b313e806c7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &gt;</type>
        <definition>std::list&lt; shared_ptr&lt; Node &gt; &gt; Function::get_ops</definition>
        <argsstring>() const</argsstring>
        <name>get_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="77" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="137" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a4c423146922fadbd8c15290ab8d88cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &gt;</type>
        <definition>std::list&lt; shared_ptr&lt; Node &gt; &gt; Function::get_ordered_ops</definition>
        <argsstring>()</argsstring>
        <name>get_ordered_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="78" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1aa56c6c64ddd75347a6d93f896bdad34f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ngraph::Function::get_instance_id</definition>
        <argsstring>()</argsstring>
        <name>get_instance_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="80" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a8ad03b0a5ae5b2d09fd15be0e0e0a19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Function::get_temporary_pool_size</definition>
        <argsstring>()</argsstring>
        <name>get_temporary_pool_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="81" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1acda49a6e4c3e80b35c8683808df6079c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Function::set_temporary_pool_size</definition>
        <argsstring>(size_t)</argsstring>
        <name>set_temporary_pool_size</name>
        <param>
          <type>size_t</type>
          <defname>size</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="82" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a4d530f486d5f0a320f047b66ccade843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Function::replace_output_op</definition>
        <argsstring>(std::shared_ptr&lt; Node &gt; old, std::shared_ptr&lt; Node &gt; repl)</argsstring>
        <name>replace_output_op</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>old</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>repl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="84" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="158" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a781da9ca2d30570883bd5d76c7a962cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Function::replace_node</definition>
        <argsstring>(std::shared_ptr&lt; Node &gt; old, std::shared_ptr&lt; Node &gt; repl)</argsstring>
        <name>replace_node</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>old</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>repl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="86" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp" bodystart="168" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classngraph_1_1Function_1aa5ac13108eae670712121414a47f87c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Function &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classngraph_1_1Function_1a2b6ab384d30bd786ef649ec4d67cb661" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngraph::Function::Function</definition>
        <argsstring>(const Function &amp;)=delete</argsstring>
        <name>Function</name>
        <param>
          <type>const <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1Function_1a1c6fa5073647e668d268cfb7a6fc0db9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngraph::Function::Function</definition>
        <argsstring>(const Function &amp;&amp;)=delete</argsstring>
        <name>Function</name>
        <param>
          <type>const <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="96" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A user-defined function. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="156">
        <label>ngraph::Function</label>
        <link refid="classngraph_1_1Function"/>
      </node>
      <node id="157">
        <label>ngraph::xla::XLAFunction</label>
        <link refid="classngraph_1_1xla_1_1XLAFunction"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="161">
        <label>T</label>
      </node>
      <node id="160">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="161" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="164">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="158">
        <label>ngraph::Function</label>
        <link refid="classngraph_1_1Function"/>
        <childnode refid="159" relation="usage">
          <edgelabel>m_parameters</edgelabel>
        </childnode>
        <childnode refid="162" relation="usage">
          <edgelabel>m_results</edgelabel>
        </childnode>
        <childnode refid="163" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="162">
        <label>std::vector&lt; std::shared_ptr&lt; Node &gt; &gt;</label>
        <childnode refid="160" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="159">
        <label>std::vector&lt; std::shared_ptr&lt; ngraph::op::Parameter &gt; &gt;</label>
        <childnode refid="160" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; ngraph::op::Parameter &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="163">
        <label>std::string</label>
        <childnode refid="164" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" line="38" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.hpp" bodystart="37" bodyend="100"/>
    <listofallmembers>
      <member refid="classngraph_1_1Function_1aeddb80a549de65b5ce4194536aa3a55d" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>Function</name></member>
      <member refid="classngraph_1_1Function_1a28959023204ebcde23d773f60a9df5be" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>Function</name></member>
      <member refid="classngraph_1_1Function_1a2b6ab384d30bd786ef649ec4d67cb661" prot="private" virt="non-virtual"><scope>ngraph::Function</scope><name>Function</name></member>
      <member refid="classngraph_1_1Function_1a1c6fa5073647e668d268cfb7a6fc0db9" prot="private" virt="non-virtual"><scope>ngraph::Function</scope><name>Function</name></member>
      <member refid="classngraph_1_1Function_1aa56c6c64ddd75347a6d93f896bdad34f" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_instance_id</name></member>
      <member refid="classngraph_1_1Function_1a2e8ab3ccb4118fd7333c6809a0883181" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_name</name></member>
      <member refid="classngraph_1_1Function_1a9a2ab6a85377264d4c219b313e806c7a" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_ops</name></member>
      <member refid="classngraph_1_1Function_1a4c423146922fadbd8c15290ab8d88cd9" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_ordered_ops</name></member>
      <member refid="classngraph_1_1Function_1a85d48579c5b0022a5be07074b6928a8a" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_output_element_type</name></member>
      <member refid="classngraph_1_1Function_1abcf44df0bfb45c41605a36318b27d6e8" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_output_op</name></member>
      <member refid="classngraph_1_1Function_1aefd82188d979cff5fb69eb243d742024" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_output_shape</name></member>
      <member refid="classngraph_1_1Function_1a041c69423241cb251fdd1e1779aaeb6a" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_output_size</name></member>
      <member refid="classngraph_1_1Function_1ac20686ba123b3a9d38b32f3bffae6474" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_parameters</name></member>
      <member refid="classngraph_1_1Function_1a9593d8f5361f8b14385978b54b9d0380" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_result</name></member>
      <member refid="classngraph_1_1Function_1a3210ad84a27bba0e5acc83fdc8fbc6a7" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_results</name></member>
      <member refid="classngraph_1_1Function_1a8ad03b0a5ae5b2d09fd15be0e0e0a19a" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>get_temporary_pool_size</name></member>
      <member refid="classngraph_1_1Function_1a023fa05a0c63dd9a0b749fb1441f0894" prot="private" virt="non-virtual"><scope>ngraph::Function</scope><name>m_instance_id</name></member>
      <member refid="classngraph_1_1Function_1a7df18355dc84a6b1d43bbd7e4d77d08b" prot="protected" virt="non-virtual"><scope>ngraph::Function</scope><name>m_name</name></member>
      <member refid="classngraph_1_1Function_1a00ce3cd1ac6567295c3f316d9d59b271" prot="private" virt="non-virtual"><scope>ngraph::Function</scope><name>m_next_instance_id</name></member>
      <member refid="classngraph_1_1Function_1a03415aee847577ad488095c0481be198" prot="protected" virt="non-virtual"><scope>ngraph::Function</scope><name>m_parameters</name></member>
      <member refid="classngraph_1_1Function_1a601070c34e89f863a4ed425a857d3cd3" prot="protected" virt="non-virtual"><scope>ngraph::Function</scope><name>m_results</name></member>
      <member refid="classngraph_1_1Function_1a33971ec6b0fd30f829620551a4d0b592" prot="protected" virt="non-virtual"><scope>ngraph::Function</scope><name>m_temporary_pool_size</name></member>
      <member refid="classngraph_1_1Function_1aa5ac13108eae670712121414a47f87c2" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>operator&lt;&lt;</name></member>
      <member refid="classngraph_1_1Function_1a781da9ca2d30570883bd5d76c7a962cb" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>replace_node</name></member>
      <member refid="classngraph_1_1Function_1a4d530f486d5f0a320f047b66ccade843" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>replace_output_op</name></member>
      <member refid="classngraph_1_1Function_1a6fa06d4f8d4537435a681d1f1829e40b" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>set_name</name></member>
      <member refid="classngraph_1_1Function_1acda49a6e4c3e80b35c8683808df6079c" prot="public" virt="non-virtual"><scope>ngraph::Function</scope><name>set_temporary_pool_size</name></member>
      <member refid="classngraph_1_1Function_1ade3836a9100bf35ad0d4ca0fab2a7ad1" prot="public" virt="virtual"><scope>ngraph::Function</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
