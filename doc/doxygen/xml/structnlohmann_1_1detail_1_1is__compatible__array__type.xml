<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structnlohmann_1_1detail_1_1is__compatible__array__type" kind="struct" language="C++" prot="public">
    <compoundname>nlohmann::detail::is_compatible_array_type</compoundname>
    <templateparamlist>
      <param>
        <type>class BasicJsonType</type>
      </param>
      <param>
        <type>class CompatibleArrayType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structnlohmann_1_1detail_1_1is__compatible__array__type_1a01bc2274c22746bbb2cefd2acee8b572" prot="public" static="yes" mutable="no">
        <type>auto constexpr</type>
        <definition>auto constexpr nlohmann::detail::is_compatible_array_type&lt; BasicJsonType, CompatibleArrayType &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>=
        <ref refid="structnlohmann_1_1detail_1_1conjunction" kindref="compound">conjunction</ref>&lt;<ref refid="structnlohmann_1_1detail_1_1negation" kindref="compound">negation</ref>&lt;std::is_same&lt;void, CompatibleArrayType&gt;&gt;,
        <ref refid="structnlohmann_1_1detail_1_1negation" kindref="compound">negation</ref>&lt;<ref refid="structnlohmann_1_1detail_1_1is__compatible__object__type" kindref="compound">is_compatible_object_type</ref>&lt;
        BasicJsonType, CompatibleArrayType&gt;&gt;,
        <ref refid="structnlohmann_1_1detail_1_1negation" kindref="compound">negation</ref>&lt;std::is_constructible&lt;typename BasicJsonType::string_t,
        CompatibleArrayType&gt;&gt;,
        <ref refid="structnlohmann_1_1detail_1_1negation" kindref="compound">negation</ref>&lt;<ref refid="structnlohmann_1_1detail_1_1is__basic__json__nested__type" kindref="compound">is_basic_json_nested_type</ref>&lt;BasicJsonType, CompatibleArrayType&gt;&gt;,
        has_value_type&lt;CompatibleArrayType&gt;,
        has_iterator&lt;CompatibleArrayType&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="872" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="872" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="871" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="870" bodyend="881"/>
    <listofallmembers>
      <member refid="structnlohmann_1_1detail_1_1is__compatible__array__type_1a01bc2274c22746bbb2cefd2acee8b572" prot="public" virt="non-virtual"><scope>nlohmann::detail::is_compatible_array_type</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
