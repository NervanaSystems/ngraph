<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespacengraph_1_1runtime_1_1kernel" kind="namespace" language="C++">
    <compoundname>ngraph::runtime::kernel</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="runtime_2kernel_2abs_8hpp_1a8f85d4bd4f3da61a3bd6b03c870541fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::abs</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>abs</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/abs.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/abs.hpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2acos_8hpp_1a7afabb6a575b0b09e19c9026876b7d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::acos</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>acos</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/acos.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/acos.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2add_8hpp_1a027468c0320db2cffb9feaed9ed2ec24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::add</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>add</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/add.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/add.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2asin_8hpp_1a59cfd168ee1ec9aca4f041a1a3951639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::asin</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>asin</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/asin.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/asin.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2atan_8hpp_1ac1a6e1e3d730d80b5a2e2fd4ba6353bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::atan</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>atan</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/atan.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/atan.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2avg__pool_8hpp_1a7ca97f8690a508be5ed8fc3cf0531c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::avg_pool_backprop</definition>
        <argsstring>(T *delta, T *out, const Shape &amp;delta_shape, const Shape &amp;out_shape, const Shape &amp;window_shape, const Strides &amp;window_movement_strides, const Shape &amp;padding_below, const Shape &amp;padding_above, bool include_padding_in_avg_computation)</argsstring>
        <name>avg_pool_backprop</name>
        <param>
          <type>T *</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>delta_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_padding_in_avg_computation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/avg_pool.hpp" line="35" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/avg_pool.hpp" bodystart="35" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2avg__pool_8hpp_1a3366e3f3a210409f99ce9995b721c2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::avg_pool</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;arg_shape, const Shape &amp;out_shape, const Shape &amp;window_shape, const Strides &amp;window_movement_strides, const Shape &amp;padding_below, const Shape &amp;padding_above, bool include_padding_in_avg_computation)</argsstring>
        <name>avg_pool</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_padding_in_avg_computation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/avg_pool.hpp" line="124" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/avg_pool.hpp" bodystart="124" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2broadcast_8hpp_1aa89bc3e8a1153f4cb880039291c1aaf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::broadcast</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;broadcast_axes)</argsstring>
        <name>broadcast</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>broadcast_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/broadcast.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/broadcast.hpp" bodystart="31" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2ceiling_8hpp_1a0ebfdcd0261ab939c1e5f3ab85de1b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::ceiling</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>ceiling</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/ceiling.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/ceiling.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2concat_8hpp_1ace58ef3693d9e2fdf5991048ad4b7faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::concat</definition>
        <argsstring>(const std::vector&lt; T *&gt; &amp;args, T *out, const std::vector&lt; Shape &gt; &amp;in_shapes, const Shape &amp;out_shape, size_t concatenation_axis)</argsstring>
        <name>concat</name>
        <param>
          <type>const std::vector&lt; T *&gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &gt; &amp;</type>
          <declname>in_shapes</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>concatenation_axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/concat.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/concat.hpp" bodystart="31" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2constant_8hpp_1a76964f20e507f82a6a8dbf3539cd573a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::constant</definition>
        <argsstring>(const T *arg0, T *out, size_t count)</argsstring>
        <name>constant</name>
        <param>
          <type>const T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/constant.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/constant.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2convert_8hpp_1a189221ce344b7a5d84ea1073a552b864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TI</type>
          </param>
          <param>
            <type>typename TO</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::convert</definition>
        <argsstring>(TI *arg, TO *out, size_t count)</argsstring>
        <name>convert</name>
        <param>
          <type>TI *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>TO *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convert.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convert.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2convolution_8hpp_1a713621dfb7a88a691f3bbc533e6784ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::convolution</definition>
        <argsstring>(T *arg0, T *arg1, T *out, const Shape &amp;arg0_shape, const Shape &amp;arg1_shape, const Shape &amp;out_shape, const Strides &amp;window_movement_strides, const Strides &amp;window_dilation_strides, const CoordinateDiff &amp;padding_below, const CoordinateDiff &amp;padding_above, const Strides &amp;data_dilation_strides, size_t batch_axis_data, size_t input_channel_axis_data, size_t input_channel_axis_filters, size_t output_channel_axis_filters, size_t batch_axis_result, size_t output_channel_axis_result, bool rotate_filter)</argsstring>
        <name>convolution</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg0_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg1_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_dilation_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_ada8b29c0d389e69303dd3eeb0c2a53a0_1ada8b29c0d389e69303dd3eeb0c2a53a0" kindref="member">CoordinateDiff</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>data_dilation_strides</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>batch_axis_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>input_channel_axis_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>input_channel_axis_filters</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_channel_axis_filters</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>batch_axis_result</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_channel_axis_result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rotate_filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convolution.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convolution.hpp" bodystart="32" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="copy_8hpp_1a2b4462a710a7e4c6863b1e424f0a4218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::copy</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>copy</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/copy.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/copy.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2cos_8hpp_1afb535b30c1827be18e48cd22797c91f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::cos</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>cos</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/cos.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/cos.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2cosh_8hpp_1afe4ad0f8052b96950d9600bfe722bdd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::cosh</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>cosh</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/cosh.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/cosh.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2divide_8hpp_1a10cf0691a6fbc7f2a332ce0449c983d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value &gt;::type</type>
        <definition>std::enable_if&lt;std::is_integral&lt;T&gt;::value&gt;::type ngraph::runtime::kernel::divide</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>divide</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/divide.hpp" line="33" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/divide.hpp" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2divide_8hpp_1aef4df6ec3c1f0a4609a7e7cb373aea37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_floating_point&lt; T &gt;::value &gt;::type</type>
        <definition>std::enable_if&lt;std::is_floating_point&lt;T&gt;::value&gt;::type ngraph::runtime::kernel::divide</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>divide</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/divide.hpp" line="48" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/divide.hpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2dot_8hpp_1a39096afcadaf65116826038922c6ed39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::dot</definition>
        <argsstring>(T *arg0, T *arg1, T *out, const Shape &amp;arg0_shape, const Shape &amp;arg1_shape, const Shape &amp;out_shape, size_t reduction_axes_count)</argsstring>
        <name>dot</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg0_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg1_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>reduction_axes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/dot.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/dot.hpp" bodystart="32" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2equal_8hpp_1a0c7ffa4b2ed51c640aa192b3e6a05608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::equal</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>equal</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/equal.hpp" line="29" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/equal.hpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2exp_8hpp_1a21c4b13911f9d554be3e765e306e479f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::exp</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>exp</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/exp.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/exp.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2floor_8hpp_1a2f0efde1fcb891c9deecf0001bb5a5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::floor</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>floor</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/floor.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/floor.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2greater_8hpp_1a0200b76a05907fa286ec8fafb58037ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::greater</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>greater</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/greater.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/greater.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2greater__eq_8hpp_1aaeb04f8c96cb9d9b4ea2d2b20cc8d8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::greater_eq</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>greater_eq</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/greater_eq.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/greater_eq.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2less_8hpp_1aebdf4ace7c533fdea25976be7e38ad09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::less</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>less</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/less.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/less.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2less__eq_8hpp_1a1d1d29b57db8f99b01ef770d8c66f492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::less_eq</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>less_eq</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/less_eq.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/less_eq.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2log_8hpp_1a2a164d03f26f8f1daf3132b394dc3826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::log</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>log</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/log.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/log.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2max_8hpp_1a1ef703aeb0290bb9e6ffc374e549aea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::max</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;reduction_axes)</argsstring>
        <name>max</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max.hpp" bodystart="32" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2max__pool_8hpp_1ac1357e1cbdb46d0de0c9c40fc8e43e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::max_pool_backprop</definition>
        <argsstring>(T *arg_forward, T *delta, T *out, const Shape &amp;delta_shape, const Shape &amp;out_shape, const Shape &amp;window_shape, const Strides &amp;window_movement_strides, const Shape &amp;padding_below, const Shape &amp;padding_above)</argsstring>
        <name>max_pool_backprop</name>
        <param>
          <type>T *</type>
          <declname>arg_forward</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>delta_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max_pool.hpp" line="33" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max_pool.hpp" bodystart="33" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2max__pool_8hpp_1adf70d54741d950fecf6c867221b4381f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::max_pool</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;arg_shape, const Shape &amp;out_shape, const Shape &amp;window_shape, const Strides &amp;window_movement_strides, const Shape &amp;padding_below, const Shape &amp;padding_above)</argsstring>
        <name>max_pool</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max_pool.hpp" line="127" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/max_pool.hpp" bodystart="127" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2maximum_8hpp_1aa9320e2be76027de419fad8068649f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::maximum</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>maximum</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/maximum.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/maximum.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2min_8hpp_1a0286a877f6f49637fdaebba7ff5ceb1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::min</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;reduction_axes)</argsstring>
        <name>min</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/min.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/min.hpp" bodystart="32" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2minimum_8hpp_1a897304d9aeb2c8edf7b561357876ef1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::minimum</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>minimum</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/minimum.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/minimum.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2multiply_8hpp_1a4ff86929292c7046ae1ef0eccfe8af85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::multiply</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>multiply</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/multiply.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/multiply.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="negate_8hpp_1ae73685f6ca22d5aaf4f39bb9093b4cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::negate</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>negate</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/negate.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/negate.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2not_8hpp_1a2e0e9c7eda73442137b4444595cd68ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ngraph::runtime::kernel::logical_not</definition>
        <argsstring>(char *arg, char *out, size_t count)</argsstring>
        <name>logical_not</name>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/not.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/not.hpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2not__equal_8hpp_1a4dcef3dc1c98c1b296d9ba5619e4eddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::not_equal</definition>
        <argsstring>(T *arg0, T *arg1, char *out, size_t count)</argsstring>
        <name>not_equal</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/not_equal.hpp" line="29" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/not_equal.hpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2one__hot_8hpp_1a8686c15527fd9fab2ba160c5a5e7122c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::one_hot</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, size_t one_hot_axis)</argsstring>
        <name>one_hot</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>one_hot_axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/one_hot.hpp" line="33" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/one_hot.hpp" bodystart="33" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2pad_8hpp_1a11c570b5c76904ce1e5d3302f8170ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::pad</definition>
        <argsstring>(T *arg0, T *arg1, T *out, const Shape &amp;arg0_shape, const Shape &amp;out_shape, const Shape &amp;padding_below, const Shape &amp;padding_above, const Shape &amp;padding_interior)</argsstring>
        <name>pad</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg0_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_interior</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/pad.hpp" line="32" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/pad.hpp" bodystart="32" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2power_8hpp_1aa56b2e843c95c1d5d070e1afd1b376e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::power</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>power</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/power.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/power.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2product_8hpp_1a3d8d775b85fc9dfe27faa642318d13e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::product</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;reduction_axes)</argsstring>
        <name>product</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/product.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/product.hpp" bodystart="31" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2reduce_8hpp_1aaf1bf417b741e210b65f6bd0962fd9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::reduce</definition>
        <argsstring>(T *arg0, T *arg1, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;reduction_axes, std::function&lt; T(T, T)&gt; reduction_function)</argsstring>
        <name>reduce</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <param>
          <type>std::function&lt; T(T, T)&gt;</type>
          <declname>reduction_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reduce.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reduce.hpp" bodystart="31" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2reduce__window_8hpp_1ab5c91a65ac5f20b1fe8771ff32e1b169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::reduce_window</definition>
        <argsstring>(T *arg_reductee, T *arg_init, T *out, const Shape &amp;arg_reductee_shape, const Shape &amp;out_shape, std::function&lt; T(T, T)&gt; reduction_function, const Shape &amp;window_shape, const Strides &amp;window_movement_strides)</argsstring>
        <name>reduce_window</name>
        <param>
          <type>T *</type>
          <declname>arg_reductee</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg_init</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_reductee_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>std::function&lt; T(T, T)&gt;</type>
          <declname>reduction_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reduce_window.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reduce_window.hpp" bodystart="31" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2relu_8hpp_1a8b1bdecd2951ffb0e40d6976c870dd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::relu</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>relu</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/relu.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/relu.hpp" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2relu_8hpp_1a49ecb0b20cad23dbaa5210f5f5ad1b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::relu_backprop</definition>
        <argsstring>(T *arg, T *delta_arg, T *out, size_t count)</argsstring>
        <name>relu_backprop</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>delta_arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/relu.hpp" line="35" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/relu.hpp" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2replace__slice_8hpp_1a4dfd7fc926e731ac3a0cd49019b06e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::replace_slice</definition>
        <argsstring>(T *arg0, T *arg1, T *out, const Shape &amp;arg1_shape, const Coordinate &amp;lower_bounds, const Coordinate &amp;upper_bounds, const Strides &amp;strides, const Shape &amp;out_shape)</argsstring>
        <name>replace_slice</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg1_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref> &amp;</type>
          <declname>lower_bounds</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref> &amp;</type>
          <declname>upper_bounds</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/replace_slice.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/replace_slice.hpp" bodystart="31" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2reshape_8hpp_1aa1237a3af62ee2e94d51a1213a5ddb44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::reshape</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const AxisVector &amp;in_axis_order, const Shape &amp;out_shape)</argsstring>
        <name>reshape</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref> &amp;</type>
          <declname>in_axis_order</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reshape.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reshape.hpp" bodystart="31" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2reverse_8hpp_1a4f58e73e46ad41d309e8395e8f3ff267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::reverse</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;arg_shape, const Shape &amp;out_shape, const AxisSet &amp;reversed_axes)</argsstring>
        <name>reverse</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reversed_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reverse.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/reverse.hpp" bodystart="31" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2select_8hpp_1a43fd370c48fbbbfc83df24b2ce924404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::select</definition>
        <argsstring>(char *arg0, T *arg1, T *arg2, T *out, size_t count)</argsstring>
        <name>select</name>
        <param>
          <type>char *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/select.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/select.hpp" bodystart="26" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2select__and__scatter_8hpp_1a58192b85757e2b4c462db970ef15204b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::select_and_scatter</definition>
        <argsstring>(T *arg_selectee, T *arg_source, T *arg_init, T *out, const Shape &amp;arg_selectee_shape, const Shape &amp;arg_source_shape, const Shape &amp;out_shape, std::function&lt; char(T, T)&gt; selection_function, std::function&lt; T(T, T)&gt; scatter_function, const Shape &amp;window_shape, const Strides &amp;window_movement_strides)</argsstring>
        <name>select_and_scatter</name>
        <param>
          <type>T *</type>
          <declname>arg_selectee</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg_source</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg_init</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_selectee_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_source_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>std::function&lt; char(T, T)&gt;</type>
          <declname>selection_function</declname>
        </param>
        <param>
          <type>std::function&lt; T(T, T)&gt;</type>
          <declname>scatter_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>window_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>window_movement_strides</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/select_and_scatter.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/select_and_scatter.hpp" bodystart="31" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2sign_8hpp_1a3ac5d0c48574a099365ac7e7e700d31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::sign</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>sign</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sign.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sign.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2sin_8hpp_1a2c07876570909dbe32c57963d1ed3cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::sin</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>sin</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sin.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sin.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2sinh_8hpp_1aee70a26e121dafba5ff4e24e25c8e16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::sinh</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>sinh</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sinh.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sinh.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2slice_8hpp_1a8c05d6c43d8e1065300cf3f10ed7d83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::slice</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;arg_shape, const Coordinate &amp;lower_bounds, const Coordinate &amp;upper_bounds, const Strides &amp;strides, const Shape &amp;out_shape)</argsstring>
        <name>slice</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>arg_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref> &amp;</type>
          <declname>lower_bounds</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref> &amp;</type>
          <declname>upper_bounds</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/slice.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/slice.hpp" bodystart="31" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2sqrt_8hpp_1aeb8a2cb2a51280ee27c1e00ba0337128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::sqrt</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>sqrt</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sqrt.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sqrt.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2subtract_8hpp_1a685108d9df35f3c6fb6f5d557bdbea18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::subtract</definition>
        <argsstring>(T *arg0, T *arg1, T *out, size_t count)</argsstring>
        <name>subtract</name>
        <param>
          <type>T *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/subtract.hpp" line="26" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/subtract.hpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2sum_8hpp_1aa3d584065de52e6ae958bf169f3109fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::sum</definition>
        <argsstring>(T *arg, T *out, const Shape &amp;in_shape, const Shape &amp;out_shape, const AxisSet &amp;reduction_axes)</argsstring>
        <name>sum</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>in_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>out_shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sum.hpp" line="31" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/sum.hpp" bodystart="31" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2tan_8hpp_1a739b58360142a048feed00101bed811f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::tan</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>tan</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/tan.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/tan.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="runtime_2kernel_2tanh_8hpp_1adc12874bcbb742cf039871762ef10700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ngraph::runtime::kernel::tanh</definition>
        <argsstring>(T *arg, T *out, size_t count)</argsstring>
        <name>tanh</name>
        <param>
          <type>T *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/tanh.hpp" line="28" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/tanh.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/abs.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
