<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnlohmann_1_1detail_1_1other__error" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::other_error</compoundname>
    <basecompoundref refid="classnlohmann_1_1detail_1_1exception" prot="public" virt="non-virtual">nlohmann::detail::exception</basecompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1other__error_1a87e8ab894e8c85c0d97a0919782d3683" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref></type>
        <definition>static other_error nlohmann::detail::other_error::create</definition>
        <argsstring>(int id_, const std::string &amp;what_arg)</argsstring>
        <name>create</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenlohmann_1_1detail_a90aa5ef615aa8305e9ea20d8a947980f_1a90aa5ef615aa8305e9ea20d8a947980fab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref> &amp;</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="485" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="485" bodyend="489"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1other__error_1adf9227d6ca5161508f6a598a0dc6e7cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::other_error::other_error</definition>
        <argsstring>(int id_, const char *what_arg)</argsstring>
        <name>other_error</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="492" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="492" bodyend="492"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>exception indicating other library errors </para>    </briefdescription>
    <detaileddescription>
<para>This exception is thrown in case of errors that cannot be classified with the other exception types.</para><para>Exceptions have ids 5xx.</para><para><table rows="3" cols="3"><row>
<entry thead="yes"><para>name / id  </para></entry><entry thead="yes"><para>example message  </para></entry><entry thead="yes"><para>description ----------<mdash/>   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.other_error.501  </para></entry><entry thead="no"><para>unsuccessful: {&quot;op&quot;:&quot;test&quot;,&quot;path&quot;:&quot;/baz&quot;, &quot;value&quot;:&quot;bar&quot;}  </para></entry><entry thead="no"><para>A JSON Patch operation &apos;test&apos; failed. The unsuccessful operation is also printed.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.other_error.502  </para></entry><entry thead="no"><para>invalid object size for conversion  </para></entry><entry thead="no"><para>Some conversions to user-defined types impose constraints on the object size (e.g. std::pair)   </para></entry></row>
</table>
</para><para><simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1exception" kindref="compound">exception</ref> for the base class of the library exceptions </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1parse__error" kindref="compound">parse_error</ref> for exceptions indicating a parse error </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1invalid__iterator" kindref="compound">invalid_iterator</ref> for exceptions indicating errors with iterators </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1type__error" kindref="compound">type_error</ref> for exceptions indicating executing a member function with a wrong type </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref> for exceptions indicating access out of the defined range</para></simplesect>
{The following code shows how an <computeroutput><ref refid="classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref></computeroutput> exception can be caught.,<ref refid="classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref>}</para><para><simplesect kind="since"><para>version 3.0.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3730">
        <label>std::exception</label>
      </node>
      <node id="3729">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3730" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3728">
        <label>nlohmann::detail::other_error</label>
        <link refid="classnlohmann_1_1detail_1_1other__error"/>
        <childnode refid="3729" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3733">
        <label>std::exception</label>
      </node>
      <node id="3732">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3731">
        <label>nlohmann::detail::other_error</label>
        <link refid="classnlohmann_1_1detail_1_1other__error"/>
        <childnode refid="3732" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="483" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="482" bodyend="493"/>
    <listofallmembers>
      <member refid="classnlohmann_1_1detail_1_1other__error_1a87e8ab894e8c85c0d97a0919782d3683" prot="public" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>create</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>exception</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>id</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>name</name></member>
      <member refid="classnlohmann_1_1detail_1_1other__error_1adf9227d6ca5161508f6a598a0dc6e7cd" prot="private" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>other_error</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" virt="non-virtual"><scope>nlohmann::detail::other_error</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
