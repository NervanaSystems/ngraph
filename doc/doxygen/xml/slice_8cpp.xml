<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="slice_8cpp" kind="file" language="C++">
    <compoundname>slice.cpp</compoundname>
    <includes refid="ops_2slice_8hpp" local="yes">ngraph/ops/slice.hpp</includes>
    <incdepgraph>
      <node id="8569">
        <label>atomic</label>
      </node>
      <node id="8577">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="8571" relation="include">
        </childnode>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
      </node>
      <node id="8578">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8588">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8563" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8568">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="8569" relation="include">
        </childnode>
        <childnode refid="8570" relation="include">
        </childnode>
        <childnode refid="8571" relation="include">
        </childnode>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8563" relation="include">
        </childnode>
        <childnode refid="8567" relation="include">
        </childnode>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8574" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
        <childnode refid="8575" relation="include">
        </childnode>
        <childnode refid="8561" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
        <childnode refid="8588" relation="include">
        </childnode>
        <childnode refid="8577" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
      </node>
      <node id="8587">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="8570" relation="include">
        </childnode>
        <childnode refid="8583" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8586">
        <label>stdexcept</label>
      </node>
      <node id="8560">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="8561" relation="include">
        </childnode>
        <childnode refid="8566" relation="include">
        </childnode>
      </node>
      <node id="8567">
        <label>string</label>
      </node>
      <node id="8582">
        <label>map</label>
      </node>
      <node id="8574">
        <label>unordered_set</label>
      </node>
      <node id="8581">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="8582" relation="include">
        </childnode>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8583" relation="include">
        </childnode>
        <childnode refid="8567" relation="include">
        </childnode>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8561" relation="include">
        </childnode>
        <childnode refid="8585" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
      </node>
      <node id="8561">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8563" relation="include">
        </childnode>
        <childnode refid="8564" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
      </node>
      <node id="8559">
        <label>ngraph/ops/slice.hpp</label>
        <link refid="ops_2slice_8hpp_source"/>
        <childnode refid="8560" relation="include">
        </childnode>
      </node>
      <node id="8576">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8577" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
      </node>
      <node id="8579">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8571" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
        <childnode refid="8561" relation="include">
        </childnode>
      </node>
      <node id="8575">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8561" relation="include">
        </childnode>
      </node>
      <node id="8566">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="8567" relation="include">
        </childnode>
        <childnode refid="8561" relation="include">
        </childnode>
        <childnode refid="8568" relation="include">
        </childnode>
        <childnode refid="8590" relation="include">
        </childnode>
      </node>
      <node id="8580">
        <label>cstdio</label>
      </node>
      <node id="8565">
        <label>vector</label>
      </node>
      <node id="8564">
        <label>utility</label>
      </node>
      <node id="8583">
        <label>sstream</label>
      </node>
      <node id="8558">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/slice.cpp</label>
        <link refid="slice_8cpp"/>
        <childnode refid="8559" relation="include">
        </childnode>
      </node>
      <node id="8571">
        <label>iostream</label>
      </node>
      <node id="8590">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="8570">
        <label>deque</label>
      </node>
      <node id="8573">
        <label>unordered_map</label>
      </node>
      <node id="8585">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8584">
        <label>type_traits</label>
      </node>
      <node id="8563">
        <label>set</label>
      </node>
      <node id="8589">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="8562" relation="include">
        </childnode>
        <childnode refid="8579" relation="include">
        </childnode>
      </node>
      <node id="8562">
        <label>memory</label>
      </node>
      <node id="8572">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/slice.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classngraph_1_1op_1_1Slice_ac83e29b19daf3d0e904ce3885939bd18_1ac83e29b19daf3d0e904ce3885939bd18" refkind="member"><highlight class="normal">op::Slice::Slice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>arg,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref>&amp;<sp/>lower_bounds,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref>&amp;<sp/>upper_bounds,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref>&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>RequiresTensorViewArgs(</highlight><highlight class="stringliteral">&quot;Slice&quot;</highlight><highlight class="normal">,<sp/>{arg})</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lower_bounds(lower_bounds)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_upper_bounds(upper_bounds)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_strides(strides)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>check_args();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classngraph_1_1op_1_1Slice_a63ec494b557911291485b8d790d807e7_1a63ec494b557911291485b8d790d807e7" refkind="member"><highlight class="normal"><ref refid="classngraph_1_1op_1_1Slice_ac83e29b19daf3d0e904ce3885939bd18_1ac83e29b19daf3d0e904ce3885939bd18" kindref="member">op::Slice::Slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>arg,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref>&amp;<sp/>lower_bounds,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1aafc407652e7de6256895067f6097a666" kindref="member">Coordinate</ref>&amp;<sp/>upper_bounds)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>RequiresTensorViewArgs(</highlight><highlight class="stringliteral">&quot;Slice&quot;</highlight><highlight class="normal">,<sp/>{arg})</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lower_bounds(lower_bounds)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_upper_bounds(upper_bounds)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_strides(<ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">Strides</ref>(lower_bounds.size(),<sp/>1))</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>check_args();</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>op::Slice::check_args()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input<sp/>=<sp/>get_inputs().at(0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_shape<sp/>=<sp/>input.get_shape();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lower_bounds.size()<sp/>!=<sp/>input_shape.size())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>lower<sp/>bounds<sp/>provided<sp/>for<sp/>slice<sp/>does<sp/>not<sp/>match<sp/>number<sp/>of<sp/>input<sp/>axes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_upper_bounds.size()<sp/>!=<sp/>input_shape.size())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>upper<sp/>bounds<sp/>provided<sp/>for<sp/>slice<sp/>does<sp/>not<sp/>match<sp/>number<sp/>of<sp/>input<sp/>axes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_strides.size()<sp/>!=<sp/>input_shape.size())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>strides<sp/>provided<sp/>for<sp/>slice<sp/>does<sp/>not<sp/>match<sp/>number<sp/>of<sp/>input<sp/>axes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>result_shape;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input_shape.size();<sp/>i++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_upper_bounds[i]<sp/>&gt;<sp/>input_shape[i])</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Upper<sp/>bound<sp/>for<sp/>slice<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lower_bounds[i]<sp/>&gt;<sp/>m_upper_bounds[i])</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Lower<sp/>bound<sp/>for<sp/>slice<sp/>is<sp/>greater<sp/>than<sp/>upper<sp/>bound&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>m_strides[i])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Strides<sp/>distance<sp/>for<sp/>slice<sp/>is<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result_axis_size<sp/>=<sp/>m_upper_bounds[i]<sp/>-<sp/>m_lower_bounds[i];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_axis_size<sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_axis_size<sp/>/<sp/>m_strides[i]<sp/>+<sp/>((result_axis_size<sp/>%<sp/>m_strides[i]<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_shape.push_back(result_axis_size);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>set_value_type_checked(input.get_element_type(),<sp/>result_shape);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>op::Slice::generate_adjoints(<ref refid="classngraph_1_1autodiff_1_1Adjoints" kindref="compound">autodiff::Adjoints</ref>&amp;<sp/>adjoints,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>delta)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>get_inputs().at(0).get_output().get_node();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>adjoints.<ref refid="classngraph_1_1autodiff_1_1Adjoints_a1f6b7a99033465fe61dc8f9cac2f1565_1a1f6b7a99033465fe61dc8f9cac2f1565" kindref="member">add_delta_to_slice</ref>(x,<sp/>delta,<sp/>m_lower_bounds,<sp/>m_upper_bounds,<sp/>m_strides);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/slice.cpp"/>
  </compounddef>
</doxygen>
