<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1runtime_1_1TensorView" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ngraph::runtime::TensorView</compoundname>
    <derivedcompoundref refid="classngraph_1_1runtime_1_1cpu_1_1CPUTensorView" prot="public" virt="non-virtual">ngraph::runtime::cpu::CPUTensorView</derivedcompoundref>
    <derivedcompoundref refid="classngraph_1_1runtime_1_1gpu_1_1GPU__TensorView" prot="public" virt="non-virtual">ngraph::runtime::gpu::GPU_TensorView</derivedcompoundref>
    <derivedcompoundref refid="classngraph_1_1runtime_1_1HostTensorView" prot="public" virt="non-virtual">ngraph::runtime::HostTensorView</derivedcompoundref>
    <derivedcompoundref refid="classngraph_1_1xla_1_1XLATuple" prot="public" virt="non-virtual">ngraph::xla::XLATuple</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1runtime_1_1TensorView_1a1ec14ed96427f29fca41b949d7d1acb7" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">ngraph::descriptor::TensorView</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ngraph::descriptor::TensorView&gt; ngraph::runtime::TensorView::m_descriptor</definition>
        <argsstring></argsstring>
        <name>m_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="77" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1a623ff05cd064d5ef8bfdcc4599f68bd2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngraph::runtime::TensorView::TensorView</definition>
        <argsstring>(const std::shared_ptr&lt; ngraph::descriptor::TensorView &gt; &amp;descriptor)</argsstring>
        <name>TensorView</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">ngraph::descriptor::TensorView</ref> &gt; &amp;</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="39" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1a72534a810ad5e9279b61e23a25c090e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ngraph::runtime::TensorView::~TensorView</definition>
        <argsstring>()</argsstring>
        <name>~TensorView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="45" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1adcd7e76e74ac59fd95cb40a7ca50b6ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngraph_1_1runtime_1_1TensorView" kindref="compound">TensorView</ref> &amp;</type>
        <definition>TensorView&amp; ngraph::runtime::TensorView::operator=</definition>
        <argsstring>(const TensorView &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classngraph_1_1runtime_1_1TensorView" kindref="compound">TensorView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1a2c44621509e6498e8c01cfba06fd8cb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">ngraph::descriptor::TensorView</ref> &gt;</type>
        <definition>shared_ptr&lt; const descriptor::TensorView &gt; runtime::TensorView::get_tensor_view_descriptor</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor_view_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="49" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1a239a26765cc26292ecf0c482b14f4d43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">descriptor::TensorView</ref> &gt;</type>
        <definition>shared_ptr&lt; descriptor::TensorView &gt; runtime::TensorView::get_descriptor</definition>
        <argsstring>() const</argsstring>
        <name>get_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="51" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1ad1764bb300707248204d46f15134e656" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void runtime::TensorView::collect_tensor_views</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; TensorView &gt;&gt; &amp;views, const std::shared_ptr&lt; TensorView &gt; &amp;value) const</argsstring>
        <name>collect_tensor_views</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1TensorView" kindref="compound">TensorView</ref> &gt;&gt; &amp;</type>
          <declname>views</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1TensorView" kindref="compound">TensorView</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="53" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1afc8b93cfa917971c5e8fbaf96e45543e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">ngraph::Shape</ref> &amp;</type>
        <definition>const Shape &amp; runtime::TensorView::get_shape</definition>
        <argsstring>() const</argsstring>
        <name>get_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="56" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1ad11c559f7385928263c6f697ffd2c748" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4f18980b4c7d5cfb11ccf07edf928344" kindref="member">ngraph::Strides</ref> &amp;</type>
        <definition>const Strides &amp; runtime::TensorView::get_strides</definition>
        <argsstring>() const</argsstring>
        <name>get_strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="57" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1af44b3c14def552ca7981f6c5647831cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t runtime::TensorView::get_element_count</definition>
        <argsstring>() const</argsstring>
        <name>get_element_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="58" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1ae18e1c6d9e760f7943244e252659fcda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">ngraph::descriptor::Tensor</ref> &amp;</type>
        <definition>const descriptor::Tensor &amp; runtime::TensorView::get_tensor</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="59" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_1aeae13532d6171e5bd03c41bc21316f7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1descriptor_1_1layout_1_1TensorViewLayout" kindref="compound">ngraph::descriptor::layout::TensorViewLayout</ref> &gt;</type>
        <definition>shared_ptr&lt; descriptor::layout::TensorViewLayout &gt; runtime::TensorView::get_tensor_view_layout</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor_view_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="62" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_aac6f07af8edea9ba3669426f75db6dd0_1aac6f07af8edea9ba3669426f75db6dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ngraph::runtime::TensorView::write</definition>
        <argsstring>(const void *p, size_t tensor_offset, size_t n)=0</argsstring>
        <name>write</name>
        <reimplementedby refid="classngraph_1_1runtime_1_1gpu_1_1GPU__TensorView_af76345cb95a39d0659c1e1c06be146f5_1af76345cb95a39d0659c1e1c06be146f5">write</reimplementedby>
        <reimplementedby refid="classngraph_1_1runtime_1_1cpu_1_1CPUTensorView_ad05e8bbb4f9dc4e7111c8591bd2a7273_1ad05e8bbb4f9dc4e7111c8591bd2a7273">write</reimplementedby>
        <reimplementedby refid="classngraph_1_1runtime_1_1HostTensorView_ac816e7b7d2d91c443e4d629a54271a21_1ac816e7b7d2d91c443e4d629a54271a21">write</reimplementedby>
        <reimplementedby refid="classngraph_1_1xla_1_1XLATuple_acc37a02da46106b95ae13eb72f05a5fb_1acc37a02da46106b95ae13eb72f05a5fb">write</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tensor_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write bytes directly into the tensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to source of data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tensor_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset into tensor storage to begin writing. Must be element-aligned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write, must be integral number of elements. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1TensorView_ab915ec67d4423d3150edcba127206829_1ab915ec67d4423d3150edcba127206829" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ngraph::runtime::TensorView::read</definition>
        <argsstring>(void *p, size_t tensor_offset, size_t n) const =0</argsstring>
        <name>read</name>
        <reimplementedby refid="classngraph_1_1runtime_1_1gpu_1_1GPU__TensorView_a545b110f7c8cadf8ee6a9fd8cee9614a_1a545b110f7c8cadf8ee6a9fd8cee9614a">read</reimplementedby>
        <reimplementedby refid="classngraph_1_1runtime_1_1cpu_1_1CPUTensorView_a622288996fed12aa8ed2853ee1c7e817_1a622288996fed12aa8ed2853ee1c7e817">read</reimplementedby>
        <reimplementedby refid="classngraph_1_1runtime_1_1HostTensorView_a1cc2ab73bf26c2d9a8859f64138efea7_1a1cc2ab73bf26c2d9a8859f64138efea7">read</reimplementedby>
        <reimplementedby refid="classngraph_1_1xla_1_1XLATuple_a7bb01eff0cfb4033dc8417d334213b17_1a7bb01eff0cfb4033dc8417d334213b17">read</reimplementedby>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tensor_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Read bytes directly from the tensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to destination for data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tensor_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset into tensor storage to begin reading. Must be element-aligned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read, must be integral number of elements. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3501">
        <label>ngraph::xla::XLATuple</label>
        <link refid="classngraph_1_1xla_1_1XLATuple"/>
        <childnode refid="3497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3500">
        <label>ngraph::runtime::HostTensorView</label>
        <link refid="classngraph_1_1runtime_1_1HostTensorView"/>
        <childnode refid="3497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3498">
        <label>ngraph::runtime::cpu::CPUTensorView</label>
        <link refid="classngraph_1_1runtime_1_1cpu_1_1CPUTensorView"/>
        <childnode refid="3497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3497">
        <label>ngraph::runtime::TensorView</label>
        <link refid="classngraph_1_1runtime_1_1TensorView"/>
      </node>
      <node id="3499">
        <label>ngraph::runtime::gpu::GPU_TensorView</label>
        <link refid="classngraph_1_1runtime_1_1gpu_1_1GPU__TensorView"/>
        <childnode refid="3497" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" line="37" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp" bodystart="36" bodyend="78"/>
    <listofallmembers>
      <member refid="classngraph_1_1runtime_1_1TensorView_1ad1764bb300707248204d46f15134e656" prot="public" virt="virtual"><scope>ngraph::runtime::TensorView</scope><name>collect_tensor_views</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1a239a26765cc26292ecf0c482b14f4d43" prot="public" virt="virtual"><scope>ngraph::runtime::TensorView</scope><name>get_descriptor</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1af44b3c14def552ca7981f6c5647831cd" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_element_count</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1afc8b93cfa917971c5e8fbaf96e45543e" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1ad11c559f7385928263c6f697ffd2c748" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_strides</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1ae18e1c6d9e760f7943244e252659fcda" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_tensor</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1a2c44621509e6498e8c01cfba06fd8cb1" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_tensor_view_descriptor</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1aeae13532d6171e5bd03c41bc21316f7a" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>get_tensor_view_layout</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1a1ec14ed96427f29fca41b949d7d1acb7" prot="protected" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>m_descriptor</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1adcd7e76e74ac59fd95cb40a7ca50b6ff" prot="public" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>operator=</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_ab915ec67d4423d3150edcba127206829_1ab915ec67d4423d3150edcba127206829" prot="public" virt="pure-virtual"><scope>ngraph::runtime::TensorView</scope><name>read</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1a623ff05cd064d5ef8bfdcc4599f68bd2" prot="protected" virt="non-virtual"><scope>ngraph::runtime::TensorView</scope><name>TensorView</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_aac6f07af8edea9ba3669426f75db6dd0_1aac6f07af8edea9ba3669426f75db6dd0" prot="public" virt="pure-virtual"><scope>ngraph::runtime::TensorView</scope><name>write</name></member>
      <member refid="classngraph_1_1runtime_1_1TensorView_1a72534a810ad5e9279b61e23a25c090e0" prot="public" virt="virtual"><scope>ngraph::runtime::TensorView</scope><name>~TensorView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
