<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4" kind="struct" language="C++" prot="public">
    <compoundname>nlohmann::detail::external_constructor&lt; value_t::object &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a3a369c5d49596dd4411e368425f9ac7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void nlohmann::detail::external_constructor&lt; value_t::object &gt;::construct</definition>
        <argsstring>(BasicJsonType &amp;j, const typename BasicJsonType::object_t &amp;obj)</argsstring>
        <name>construct</name>
        <param>
          <type>BasicJsonType &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const typename BasicJsonType::object_t &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="776" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="776" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a1e044961affbd6417386d6e9f1d545e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void nlohmann::detail::external_constructor&lt; value_t::object &gt;::construct</definition>
        <argsstring>(BasicJsonType &amp;j, typename BasicJsonType::object_t &amp;&amp;obj)</argsstring>
        <name>construct</name>
        <param>
          <type>BasicJsonType &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>typename BasicJsonType::object_t &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="784" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="784" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a91f89abe0ec4dec59099b691682ff927" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonType</type>
          </param>
          <param>
            <type>typename CompatibleObjectType</type>
          </param>
          <param>
            <type>enable_if_t&lt; not std::is_same&lt; CompatibleObjectType, typename BasicJsonType::object_t &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void nlohmann::detail::external_constructor&lt; value_t::object &gt;::construct</definition>
        <argsstring>(BasicJsonType &amp;j, const CompatibleObjectType &amp;obj)</argsstring>
        <name>construct</name>
        <param>
          <type>BasicJsonType &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const CompatibleObjectType &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="794" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="794" bodyend="802"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="774" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="773" bodyend="803"/>
    <listofallmembers>
      <member refid="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a3a369c5d49596dd4411e368425f9ac7a" prot="public" virt="non-virtual"><scope>nlohmann::detail::external_constructor&lt; value_t::object &gt;</scope><name>construct</name></member>
      <member refid="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a1e044961affbd6417386d6e9f1d545e9" prot="public" virt="non-virtual"><scope>nlohmann::detail::external_constructor&lt; value_t::object &gt;</scope><name>construct</name></member>
      <member refid="structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4_1a91f89abe0ec4dec59099b691682ff927" prot="public" virt="non-virtual"><scope>nlohmann::detail::external_constructor&lt; value_t::object &gt;</scope><name>construct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
