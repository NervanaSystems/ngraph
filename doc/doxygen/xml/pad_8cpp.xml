<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="pad_8cpp" kind="file" language="C++">
    <compoundname>pad.cpp</compoundname>
    <includes refid="ops_2pad_8hpp" local="yes">ngraph/ops/pad.hpp</includes>
    <includes refid="util_8hpp" local="yes">ngraph/util.hpp</includes>
    <incdepgraph>
      <node id="7094">
        <label>list</label>
      </node>
      <node id="7068">
        <label>atomic</label>
      </node>
      <node id="7093">
        <label>functional</label>
      </node>
      <node id="7076">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
      </node>
      <node id="7077">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
      </node>
      <node id="7087">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7067">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="7068" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
        <childnode refid="7073" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7087" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
      </node>
      <node id="7086">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7085" relation="include">
        </childnode>
      </node>
      <node id="7085">
        <label>stdexcept</label>
      </node>
      <node id="7059">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7065" relation="include">
        </childnode>
      </node>
      <node id="7066">
        <label>string</label>
      </node>
      <node id="7081">
        <label>map</label>
      </node>
      <node id="7073">
        <label>unordered_set</label>
      </node>
      <node id="7058">
        <label>ngraph/ops/pad.hpp</label>
        <link refid="ops_2pad_8hpp_source"/>
        <childnode refid="7059" relation="include">
        </childnode>
      </node>
      <node id="7080">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7083" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7084" relation="include">
        </childnode>
        <childnode refid="7086" relation="include">
        </childnode>
      </node>
      <node id="7060">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7063" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
      </node>
      <node id="7075">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
      </node>
      <node id="7078">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="7079" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
      </node>
      <node id="7074">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
      </node>
      <node id="7065">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7067" relation="include">
        </childnode>
        <childnode refid="7089" relation="include">
        </childnode>
      </node>
      <node id="7079">
        <label>cstdio</label>
      </node>
      <node id="7064">
        <label>vector</label>
      </node>
      <node id="7063">
        <label>utility</label>
      </node>
      <node id="7082">
        <label>sstream</label>
      </node>
      <node id="7057">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp</label>
        <link refid="pad_8cpp"/>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7090" relation="include">
        </childnode>
      </node>
      <node id="7070">
        <label>iostream</label>
      </node>
      <node id="7089">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="7069">
        <label>deque</label>
      </node>
      <node id="7072">
        <label>unordered_map</label>
      </node>
      <node id="7092">
        <label>chrono</label>
      </node>
      <node id="7084">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="7085" relation="include">
        </childnode>
      </node>
      <node id="7083">
        <label>type_traits</label>
      </node>
      <node id="7062">
        <label>set</label>
      </node>
      <node id="7088">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
      </node>
      <node id="7091">
        <label>algorithm</label>
      </node>
      <node id="7090">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7092" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7093" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7094" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
        <childnode refid="7073" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
      </node>
      <node id="7061">
        <label>memory</label>
      </node>
      <node id="7071">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/pad.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classngraph_1_1op_1_1Pad_a737895ad51d33c3021edbc5dc8f9d9b0_1a737895ad51d33c3021edbc5dc8f9d9b0" refkind="member"><highlight class="normal">op::Pad::Pad(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>arg,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>arg_pad_value,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>padding_below,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>padding_above,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>&amp;<sp/>padding_interior)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>RequiresTensorViewArgs(</highlight><highlight class="stringliteral">&quot;Pad&quot;</highlight><highlight class="normal">,<sp/>{arg,<sp/>arg_pad_value})</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_padding_below(padding_below)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_padding_above(padding_above)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_padding_interior(padding_interior)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_input_element_type(0)<sp/>!=<sp/>get_input_element_type(1))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Pad<sp/>argument<sp/>tensor<sp/>and<sp/>padding<sp/>value<sp/>element<sp/>types<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_input_shape(1)<sp/>!=<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{})</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Padding<sp/>value<sp/>for<sp/>pad<sp/>is<sp/>not<sp/>a<sp/>scalar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arg_shape<sp/>=<sp/>get_input_shape(0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_shape.size()<sp/>!=<sp/>padding_below.size())</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Pad<sp/>rank<sp/>for<sp/>below-padding<sp/>does<sp/>not<sp/>match<sp/>rank<sp/>of<sp/>argument<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_shape.size()<sp/>!=<sp/>padding_above.size())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Pad<sp/>rank<sp/>for<sp/>above-padding<sp/>does<sp/>not<sp/>match<sp/>rank<sp/>of<sp/>argument<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_shape.size()<sp/>!=<sp/>padding_interior.size())</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Pad<sp/>rank<sp/>for<sp/>interior<sp/>padding<sp/>does<sp/>not<sp/>match<sp/>rank<sp/>of<sp/>argument<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>result_shape;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>arg_shape.size();<sp/>i++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_shape.push_back(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding_below[i]<sp/>+</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract_or_zero(arg_shape[i]<sp/>*<sp/>(padding_interior[i]<sp/>+<sp/>1),<sp/>padding_interior[i])<sp/>+</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding_above[i]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>set_value_type_checked(get_input_element_type(0),<sp/>result_shape);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">std::shared_ptr&lt;Node&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>op::Pad::copy_with_new_args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;&amp;<sp/>new_args)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_args.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>number<sp/>of<sp/>new<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;Pad&gt;(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_args.at(0),<sp/>new_args.at(1),<sp/>m_padding_below,<sp/>m_padding_above,<sp/>m_padding_interior);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>&quot;y&quot;<sp/>half<sp/>of<sp/>this<sp/>is<sp/>going<sp/>to<sp/>be<sp/>a<sp/>bit<sp/>tricky...<sp/>best<sp/>way<sp/>to<sp/>handle<sp/>it,<sp/>I<sp/>think,</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>is<sp/>to<sp/>ReplaceSlice<sp/>the<sp/>non-padded<sp/>values<sp/>in<sp/>the<sp/>incoming<sp/>delta<sp/>tensor<sp/>with<sp/>a<sp/>zero</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>broadcasted<sp/>to<sp/>x&apos;s<sp/>shape;<sp/>then<sp/>sum<sp/>that<sp/>and<sp/>backprop<sp/>the<sp/>result<sp/>to<sp/>y.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>For<sp/>example,<sp/>let&apos;s<sp/>say<sp/>we<sp/>are<sp/>padding<sp/>a<sp/>2x2<sp/>with<sp/>1<sp/>above,<sp/>below,<sp/>and<sp/>interior,<sp/>and</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>the<sp/>deltas<sp/>coming<sp/>back<sp/>are:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>d00<sp/>d01<sp/>d02<sp/>d03<sp/>d04</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>d10<sp/>d11<sp/>d12<sp/>d13<sp/>d14</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>d20<sp/>d21<sp/>d22<sp/>d23<sp/>d24</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>d30<sp/>d31<sp/>d32<sp/>d33<sp/>d34</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>d40<sp/>d41<sp/>d42<sp/>d43<sp/>d44</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>We<sp/>know<sp/>that<sp/>everything<sp/>but<sp/>d11,<sp/>d13,<sp/>d31,<sp/>and<sp/>d33<sp/>on<sp/>the<sp/>forward<sp/>prop<sp/>is<sp/>just<sp/>&quot;y&quot;.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>So<sp/>we<sp/>mask<sp/>that<sp/>off<sp/>(using<sp/>the<sp/>forward-prop<sp/>padding<sp/>values<sp/>to<sp/>determine<sp/>start,<sp/>end,</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>and<sp/>slice<sp/>stride):</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>d00<sp/>d01<sp/>d02<sp/>d03<sp/>d04</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>d10<sp/><sp/><sp/>0<sp/>d12<sp/><sp/><sp/>0<sp/>d14</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>d20<sp/>d21<sp/>d22<sp/>d23<sp/>d24</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>d30<sp/><sp/><sp/>0<sp/>d32<sp/><sp/><sp/>0<sp/>d34</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>d40<sp/>d41<sp/>d42<sp/>d43<sp/>d44</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>Then<sp/>sum<sp/>that<sp/>up:</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>d00<sp/>+<sp/>d01<sp/>+<sp/>d02<sp/>+<sp/>d03<sp/>+<sp/>d04<sp/>+</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>d10<sp/>+<sp/><sp/><sp/>0<sp/>+<sp/>d12<sp/>+<sp/><sp/><sp/>0<sp/>+<sp/>d14<sp/>+</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>d20<sp/>+<sp/>d21<sp/>+<sp/>d22<sp/>+<sp/>d23<sp/>+<sp/>d24<sp/>+</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>d30<sp/>+<sp/><sp/><sp/>0<sp/>+<sp/>d32<sp/>+<sp/><sp/><sp/>0<sp/>+<sp/>d34<sp/>+</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>d40<sp/>+<sp/>d41<sp/>+<sp/>d42<sp/>+<sp/>d43<sp/>+<sp/>d44</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>For<sp/>the<sp/>&quot;x&quot;<sp/>backprop<sp/>it&apos;s<sp/>sort<sp/>of<sp/>the<sp/>opposite;<sp/>just<sp/>slice<sp/>out:</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>d11<sp/>d13</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>d31<sp/>d33</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>and<sp/>push<sp/>that<sp/>back.</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>op::Pad::generate_adjoints(<ref refid="classngraph_1_1autodiff_1_1Adjoints" kindref="compound">autodiff::Adjoints</ref>&amp;<sp/>adjoints,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>delta)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Autodiff<sp/>is<sp/>not<sp/>yet<sp/>implemented<sp/>for<sp/>Pad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp"/>
  </compounddef>
</doxygen>
