<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="cpu__fusion_8cpp" kind="file" language="C++">
    <compoundname>cpu_fusion.cpp</compoundname>
    <includes refid="cpu__fusion_8hpp" local="yes">cpu_fusion.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <includes local="no">numeric</includes>
    <includes local="no">unordered_set</includes>
    <includes refid="graph__util_8hpp" local="yes">ngraph/graph_util.hpp</includes>
    <includes refid="log_8hpp" local="yes">ngraph/log.hpp</includes>
    <includes refid="ops_2add_8hpp" local="yes">ngraph/ops/add.hpp</includes>
    <includes refid="batch__norm_8hpp" local="yes">ngraph/ops/batch_norm.hpp</includes>
    <includes refid="ops_2broadcast_8hpp" local="yes">ngraph/ops/broadcast.hpp</includes>
    <includes refid="ops_2constant_8hpp" local="yes">ngraph/ops/constant.hpp</includes>
    <includes refid="ops_2divide_8hpp" local="yes">ngraph/ops/divide.hpp</includes>
    <includes refid="ops_2dot_8hpp" local="yes">ngraph/ops/dot.hpp</includes>
    <includes refid="ops_2multiply_8hpp" local="yes">ngraph/ops/multiply.hpp</includes>
    <includes refid="parameter_8hpp" local="yes">ngraph/ops/parameter.hpp</includes>
    <includes refid="ops_2reshape_8hpp" local="yes">ngraph/ops/reshape.hpp</includes>
    <includes refid="ops_2sqrt_8hpp" local="yes">ngraph/ops/sqrt.hpp</includes>
    <includes refid="ops_2subtract_8hpp" local="yes">ngraph/ops/subtract.hpp</includes>
    <includes refid="ops_2sum_8hpp" local="yes">ngraph/ops/sum.hpp</includes>
    <includes refid="matcher_8hpp" local="yes">ngraph/pattern/matcher.hpp</includes>
    <includes refid="any_8hpp" local="yes">ngraph/pattern/op/any.hpp</includes>
    <includes refid="label_8hpp" local="yes">ngraph/pattern/op/label.hpp</includes>
    <includes refid="matmul__bias_8hpp" local="yes">ngraph/runtime/cpu/ops/matmul_bias.hpp</includes>
    <incdepgraph>
      <node id="13569">
        <label>list</label>
      </node>
      <node id="13623">
        <label>ngraph/ops/subtract.hpp</label>
        <link refid="ops_2subtract_8hpp_source"/>
        <childnode refid="13608" relation="include">
        </childnode>
      </node>
      <node id="13573">
        <label>atomic</label>
      </node>
      <node id="13616">
        <label>ngraph/ops/divide.hpp</label>
        <link refid="ops_2divide_8hpp_source"/>
        <childnode refid="13608" relation="include">
        </childnode>
      </node>
      <node id="13566">
        <label>functional</label>
      </node>
      <node id="13578">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13580" relation="include">
        </childnode>
      </node>
      <node id="13565">
        <label>ngraph/pass/graph_rewrite.hpp</label>
        <link refid="graph__rewrite_8hpp_source"/>
        <childnode refid="13566" relation="include">
        </childnode>
        <childnode refid="13567" relation="include">
        </childnode>
        <childnode refid="13568" relation="include">
        </childnode>
      </node>
      <node id="13626">
        <label>ngraph/pattern/matcher.hpp</label>
        <link refid="matcher_8hpp_source"/>
        <childnode refid="13627" relation="include">
        </childnode>
        <childnode refid="13628" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13614" relation="include">
        </childnode>
        <childnode refid="13629" relation="include">
        </childnode>
        <childnode refid="13631" relation="include">
        </childnode>
      </node>
      <node id="13580">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13581" relation="include">
        </childnode>
        <childnode refid="13585" relation="include">
        </childnode>
      </node>
      <node id="13576">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13567" relation="include">
        </childnode>
        <childnode refid="13577" relation="include">
        </childnode>
        <childnode refid="13593" relation="include">
        </childnode>
      </node>
      <node id="13594">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="13573" relation="include">
        </childnode>
        <childnode refid="13592" relation="include">
        </childnode>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13567" relation="include">
        </childnode>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13595" relation="include">
        </childnode>
        <childnode refid="13596" relation="include">
        </childnode>
        <childnode refid="13597" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13598" relation="include">
        </childnode>
        <childnode refid="13583" relation="include">
        </childnode>
        <childnode refid="13577" relation="include">
        </childnode>
        <childnode refid="13576" relation="include">
        </childnode>
        <childnode refid="13578" relation="include">
        </childnode>
        <childnode refid="13580" relation="include">
        </childnode>
      </node>
      <node id="13629">
        <label>ngraph/pattern/op/any.hpp</label>
        <link refid="any_8hpp_source"/>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13626" relation="include">
        </childnode>
        <childnode refid="13630" relation="include">
        </childnode>
      </node>
      <node id="13627">
        <label>cassert</label>
      </node>
      <node id="13591">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="13592" relation="include">
        </childnode>
        <childnode refid="13587" relation="include">
        </childnode>
        <childnode refid="13590" relation="include">
        </childnode>
      </node>
      <node id="13590">
        <label>stdexcept</label>
      </node>
      <node id="13604">
        <label>numeric</label>
      </node>
      <node id="13568">
        <label>ngraph/pass/pass.hpp</label>
        <link refid="pass_8hpp_source"/>
        <childnode refid="13569" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13572" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13602" relation="include">
        </childnode>
      </node>
      <node id="13610">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="13583" relation="include">
        </childnode>
        <childnode refid="13599" relation="include">
        </childnode>
      </node>
      <node id="13575">
        <label>string</label>
      </node>
      <node id="13607">
        <label>ngraph/ops/add.hpp</label>
        <link refid="ops_2add_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13608" relation="include">
        </childnode>
      </node>
      <node id="13586">
        <label>map</label>
      </node>
      <node id="13597">
        <label>unordered_set</label>
      </node>
      <node id="13605">
        <label>ngraph/graph_util.hpp</label>
        <link refid="graph__util_8hpp_source"/>
        <childnode refid="13603" relation="include">
        </childnode>
        <childnode refid="13606" relation="include">
        </childnode>
        <childnode refid="13592" relation="include">
        </childnode>
        <childnode refid="13566" relation="include">
        </childnode>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13569" relation="include">
        </childnode>
        <childnode refid="13586" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13587" relation="include">
        </childnode>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13596" relation="include">
        </childnode>
        <childnode refid="13597" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
      </node>
      <node id="13628">
        <label>memory.h</label>
      </node>
      <node id="13585">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="13586" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13587" relation="include">
        </childnode>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13588" relation="include">
        </childnode>
        <childnode refid="13583" relation="include">
        </childnode>
        <childnode refid="13589" relation="include">
        </childnode>
        <childnode refid="13591" relation="include">
        </childnode>
      </node>
      <node id="13583">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13567" relation="include">
        </childnode>
        <childnode refid="13584" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
      </node>
      <node id="13620">
        <label>ngraph/ops/sqrt.hpp</label>
        <link refid="ops_2sqrt_8hpp_source"/>
        <childnode refid="13621" relation="include">
        </childnode>
      </node>
      <node id="13577">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13578" relation="include">
        </childnode>
        <childnode refid="13580" relation="include">
        </childnode>
      </node>
      <node id="13624">
        <label>ngraph/ops/sum.hpp</label>
        <link refid="ops_2sum_8hpp_source"/>
        <childnode refid="13625" relation="include">
        </childnode>
      </node>
      <node id="13581">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="13582" relation="include">
        </childnode>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13583" relation="include">
        </childnode>
      </node>
      <node id="13617">
        <label>ngraph/ops/dot.hpp</label>
        <link refid="ops_2dot_8hpp_source"/>
        <childnode refid="13584" relation="include">
        </childnode>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13598">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13596" relation="include">
        </childnode>
        <childnode refid="13583" relation="include">
        </childnode>
      </node>
      <node id="13601">
        <label>ngraph/ops/parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="13599" relation="include">
        </childnode>
        <childnode refid="13580" relation="include">
        </childnode>
      </node>
      <node id="13609">
        <label>ngraph/ops/util/binary_elementwise.hpp</label>
        <link refid="binary__elementwise_8hpp_source"/>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13599">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13583" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13600" relation="include">
        </childnode>
      </node>
      <node id="13621">
        <label>ngraph/ops/util/unary_elementwise_arithmetic.hpp</label>
        <link refid="unary__elementwise__arithmetic_8hpp_source"/>
        <childnode refid="13622" relation="include">
        </childnode>
      </node>
      <node id="13582">
        <label>cstdio</label>
      </node>
      <node id="13631">
        <label>ngraph/pattern/op/label.hpp</label>
        <link refid="label_8hpp_source"/>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13626" relation="include">
        </childnode>
        <childnode refid="13630" relation="include">
        </childnode>
      </node>
      <node id="13613">
        <label>ngraph/ops/broadcast.hpp</label>
        <link refid="ops_2broadcast_8hpp_source"/>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13571">
        <label>vector</label>
      </node>
      <node id="13632">
        <label>ngraph/runtime/cpu/ops/matmul_bias.hpp</label>
        <link refid="matmul__bias_8hpp_source"/>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13610" relation="include">
        </childnode>
        <childnode refid="13612" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
      </node>
      <node id="13563">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp</label>
        <link refid="cpu__fusion_8cpp"/>
        <childnode refid="13564" relation="include">
        </childnode>
        <childnode refid="13603" relation="include">
        </childnode>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13604" relation="include">
        </childnode>
        <childnode refid="13597" relation="include">
        </childnode>
        <childnode refid="13605" relation="include">
        </childnode>
        <childnode refid="13591" relation="include">
        </childnode>
        <childnode refid="13607" relation="include">
        </childnode>
        <childnode refid="13611" relation="include">
        </childnode>
        <childnode refid="13613" relation="include">
        </childnode>
        <childnode refid="13614" relation="include">
        </childnode>
        <childnode refid="13616" relation="include">
        </childnode>
        <childnode refid="13617" relation="include">
        </childnode>
        <childnode refid="13618" relation="include">
        </childnode>
        <childnode refid="13601" relation="include">
        </childnode>
        <childnode refid="13619" relation="include">
        </childnode>
        <childnode refid="13620" relation="include">
        </childnode>
        <childnode refid="13623" relation="include">
        </childnode>
        <childnode refid="13624" relation="include">
        </childnode>
        <childnode refid="13626" relation="include">
        </childnode>
        <childnode refid="13629" relation="include">
        </childnode>
        <childnode refid="13631" relation="include">
        </childnode>
        <childnode refid="13632" relation="include">
        </childnode>
      </node>
      <node id="13584">
        <label>utility</label>
      </node>
      <node id="13608">
        <label>ngraph/ops/util/binary_elementwise_arithmetic.hpp</label>
        <link refid="binary__elementwise__arithmetic_8hpp_source"/>
        <childnode refid="13609" relation="include">
        </childnode>
      </node>
      <node id="13587">
        <label>sstream</label>
      </node>
      <node id="13614">
        <label>ngraph/ops/constant.hpp</label>
        <link refid="ops_2constant_8hpp_source"/>
        <childnode refid="13615" relation="include">
        </childnode>
        <childnode refid="13587" relation="include">
        </childnode>
        <childnode refid="13591" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13585" relation="include">
        </childnode>
        <childnode refid="13612" relation="include">
        </childnode>
      </node>
      <node id="13572">
        <label>ngraph/function.hpp</label>
        <link refid="function_8hpp_source"/>
        <childnode refid="13573" relation="include">
        </childnode>
        <childnode refid="13574" relation="include">
        </childnode>
        <childnode refid="13569" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13576" relation="include">
        </childnode>
        <childnode refid="13593" relation="include">
        </childnode>
        <childnode refid="13591" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13599" relation="include">
        </childnode>
        <childnode refid="13601" relation="include">
        </childnode>
        <childnode refid="13580" relation="include">
        </childnode>
      </node>
      <node id="13618">
        <label>ngraph/ops/multiply.hpp</label>
        <link refid="ops_2multiply_8hpp_source"/>
        <childnode refid="13608" relation="include">
        </childnode>
      </node>
      <node id="13579">
        <label>iostream</label>
      </node>
      <node id="13622">
        <label>ngraph/ops/util/unary_elementwise.hpp</label>
        <link refid="unary__elementwise_8hpp_source"/>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13600">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="13592">
        <label>deque</label>
      </node>
      <node id="13596">
        <label>unordered_map</label>
      </node>
      <node id="13606">
        <label>chrono</label>
      </node>
      <node id="13589">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="13590" relation="include">
        </childnode>
      </node>
      <node id="13625">
        <label>ngraph/ops/util/arithmetic_reduction.hpp</label>
        <link refid="arithmetic__reduction_8hpp_source"/>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13630">
        <label>ngraph/pattern/op/pattern.hpp</label>
        <link refid="pattern_8hpp_source"/>
        <childnode refid="13566" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13565" relation="include">
        </childnode>
        <childnode refid="13626" relation="include">
        </childnode>
      </node>
      <node id="13564">
        <label>cpu_fusion.hpp</label>
        <link refid="cpu__fusion_8hpp_source"/>
        <childnode refid="13565" relation="include">
        </childnode>
      </node>
      <node id="13588">
        <label>type_traits</label>
      </node>
      <node id="13567">
        <label>set</label>
      </node>
      <node id="13611">
        <label>ngraph/ops/batch_norm.hpp</label>
        <link refid="batch__norm_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13594" relation="include">
        </childnode>
        <childnode refid="13610" relation="include">
        </childnode>
        <childnode refid="13612" relation="include">
        </childnode>
      </node>
      <node id="13593">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13581" relation="include">
        </childnode>
      </node>
      <node id="13603">
        <label>algorithm</label>
      </node>
      <node id="13612">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="13603" relation="include">
        </childnode>
        <childnode refid="13606" relation="include">
        </childnode>
        <childnode refid="13592" relation="include">
        </childnode>
        <childnode refid="13566" relation="include">
        </childnode>
        <childnode refid="13579" relation="include">
        </childnode>
        <childnode refid="13569" relation="include">
        </childnode>
        <childnode refid="13586" relation="include">
        </childnode>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13587" relation="include">
        </childnode>
        <childnode refid="13575" relation="include">
        </childnode>
        <childnode refid="13596" relation="include">
        </childnode>
        <childnode refid="13597" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
      </node>
      <node id="13602">
        <label>ngraph/pass/manager_state.hpp</label>
        <link refid="manager__state_8hpp_source"/>
        <childnode refid="13570" relation="include">
        </childnode>
        <childnode refid="13571" relation="include">
        </childnode>
        <childnode refid="13572" relation="include">
        </childnode>
      </node>
      <node id="13615">
        <label>cstring</label>
      </node>
      <node id="13570">
        <label>memory</label>
      </node>
      <node id="13619">
        <label>ngraph/ops/reshape.hpp</label>
        <link refid="ops_2reshape_8hpp_source"/>
        <childnode refid="13610" relation="include">
        </childnode>
      </node>
      <node id="13574">
        <label>initializer_list</label>
      </node>
      <node id="13595">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cpu__fusion_8cpp_1a6590d165666fc6dedf22cd87dcc54189" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool init_cblas_arg</definition>
        <argsstring>(std::shared_ptr&lt; ngraph::Node &gt; reshape, std::shared_ptr&lt; ngraph::Node &gt; arg, bool &amp;transpose_w, ngraph::Shape &amp;shape_w)</argsstring>
        <name>init_cblas_arg</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref> &gt;</type>
          <declname>reshape</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref> &gt;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>transpose_w</declname>
        </param>
        <param>
          <type><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">ngraph::Shape</ref> &amp;</type>
          <declname>shape_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp" line="43" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp" bodystart="43" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="cpu__fusion_8cpp_1a9bb7671087e1223c54b8cf62ea50e249" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>static std::vector&lt;T&gt; apply_permutation</definition>
        <argsstring>(std::vector&lt; T &gt; input, ngraph::AxisVector order)</argsstring>
        <name>apply_permutation</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref></type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp" line="92" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp" bodystart="92" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cpu_fusion.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/graph_util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/add.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/add.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/batch_norm.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/broadcast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/broadcast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/constant.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/divide.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/dot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/multiply.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/parameter.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/reshape.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/sqrt.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/subtract.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/sum.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/matcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/op/any.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/op/label.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/runtime/cpu/ops/matmul_bias.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init_cblas_arg(std::shared_ptr&lt;ngraph::Node&gt;<sp/>reshape,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ngraph::Node&gt;<sp/>arg,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>transpose_w,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">ngraph::Shape</ref>&amp;<sp/>shape_w)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r_w<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="classngraph_1_1op_1_1Reshape" kindref="compound">ngraph::op::Reshape</ref>&gt;(reshape);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r_w)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//nth<sp/>to<sp/>do;<sp/>reshape<sp/>isn&apos;t<sp/>a<sp/>reshape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r_w-&gt;get_shape().size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reshape<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reshape-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>doesn&apos;t<sp/>reshape<sp/>into<sp/>matrix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ngraph::vector_to_string(r_w-&gt;get_shape());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>io<sp/>=<sp/>r_w-&gt;get_input_order();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r_w-&gt;get_shape().size()<sp/>!=<sp/>arg-&gt;get_shape().size())<sp/></highlight><highlight class="comment">//reshape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref><sp/>dio(io.size());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(begin(dio),<sp/>end(dio),<sp/>0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io<sp/>!=<sp/>dio)<sp/></highlight><highlight class="comment">//we<sp/>can&apos;t<sp/>reshape<sp/>and<sp/>transpose<sp/>at<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reshape<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reshape-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>in<sp/>default<sp/>order<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ngraph::vector_to_string(io);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;r_w<sp/>shape<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngraph::vector_to_string(r_w-&gt;get_shape());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;arg<sp/>shape<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngraph::vector_to_string(arg-&gt;get_shape());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_w<sp/>=<sp/>r_w-&gt;get_shape();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io<sp/>==<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref>{1,<sp/>0})</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transpose_w<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//otherwise<sp/>no-op<sp/>reshape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>apply_permutation(std::vector&lt;T&gt;<sp/>input,<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref><sp/>order)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input.size()<sp/>!=<sp/>order.size())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;input<sp/>and<sp/>order<sp/>sizes<sp/>don&apos;t<sp/>match!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>output(input.size());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>order.size();<sp/>i++)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>input.at(order.at(i));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ngraph::runtime::cpu::pass::CPUFusion::construct_gemm_pattern()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_w{2,<sp/>4};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_x{4,<sp/>1};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_b{1};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_dot{2,<sp/>1};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>W<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/>shape_w);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/>shape_x);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reshape_pred<sp/>=<sp/>[](std::shared_ptr&lt;Node&gt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::dynamic_pointer_cast&lt;op::Reshape&gt;(n));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>skip_w<sp/>=<sp/>std::make_shared&lt;pattern::op::Any&gt;(W,<sp/>reshape_pred);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>skip_x<sp/>=<sp/>std::make_shared&lt;pattern::op::Any&gt;(x,<sp/>reshape_pred);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pdot<sp/>=<sp/>std::make_shared&lt;op::Dot&gt;(skip_w,<sp/>skip_x);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/>shape_b);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pbroadcast<sp/>=<sp/>std::make_shared&lt;op::Broadcast&gt;(b,<sp/>shape_dot,<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>padd<sp/>=<sp/>pdot<sp/>+<sp/>pbroadcast;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ngraph::pattern::gr_callback_fn<sp/>callback<sp/>=<sp/>[W,<sp/>x,<sp/>b](pattern::Matcher&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>callback<sp/>for<sp/>construct_gemm_pattern<sp/>against<sp/>node<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m.match_root()-&gt;get_name();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pattern_map<sp/>=<sp/>m.get_pattern_map();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>nn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpattern<sp/>=<sp/>m.match_root();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpattern-&gt;get_element_type()<sp/>!=<sp/>element::f32)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mpattern<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mpattern-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>type<sp/>is<sp/>not<sp/>float!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>mpattern-&gt;get_input_op(0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot-&gt;get_shape().size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dot<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dot-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>shape<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>2!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transpose_w<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_arg0{pattern_map[W]-&gt;get_shape()};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_cblas_arg(dot-&gt;get_input_op(0),<sp/>pattern_map[W],<sp/>transpose_w,<sp/>shape_arg0))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transpose_x<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_arg1{pattern_map[x]-&gt;get_shape()};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_cblas_arg(dot-&gt;get_input_op(1),<sp/>pattern_map[x],<sp/>transpose_x,<sp/>shape_arg1))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cg<sp/>=<sp/>std::shared_ptr&lt;Node&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>op::MatmulBias(pattern_map[W],</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[x],</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpattern-&gt;get_input_op(1),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_arg0,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_arg1,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transpose_w,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transpose_x));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cg;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::make_shared&lt;ngraph::pattern::Matcher&gt;(padd,<sp/>callback);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;add_matcher(m);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ngraph::runtime::cpu::pass::CPUFusion::construct_fprop_bn()</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>varaiance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/><ref refid="classngraph_1_1op_1_1Constant_a803a76dee878974952facf39055183b1_1a803a76dee878974952facf39055183b1" kindref="member">op::Constant::create</ref>(element::f32,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{3},<sp/>{2,<sp/>2,<sp/>2});</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3});</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_sq<sp/>=<sp/>std::make_shared&lt;op::Multiply&gt;(input,<sp/>input);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum_input<sp/>=<sp/>std::make_shared&lt;op::Sum&gt;(input,<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>square_sumed_input<sp/>=<sp/>std::make_shared&lt;op::Multiply&gt;(sum_input,<sp/>sum_input);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum_squared_input<sp/>=<sp/>std::make_shared&lt;op::Sum&gt;(input_sq,<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avg_input_sum_sq<sp/>=<sp/>std::make_shared&lt;op::Divide&gt;(square_sumed_input,<sp/>N);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xmu<sp/>=<sp/>std::make_shared&lt;op::Subtract&gt;(sum_squared_input,<sp/>avg_input_sum_sq);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1_1builder_a7d0d9c205e6343ce056feb896a630c55_1a7d0d9c205e6343ce056feb896a630c55" kindref="member">variance</ref><sp/>=<sp/>std::make_shared&lt;op::Divide&gt;(xmu,<sp/>N);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_label<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(<ref refid="namespacengraph_1_1builder_a7d0d9c205e6343ce056feb896a630c55_1a7d0d9c205e6343ce056feb896a630c55" kindref="member">variance</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref>{<ref refid="namespacengraph_1_1builder_a7d0d9c205e6343ce056feb896a630c55_1a7d0d9c205e6343ce056feb896a630c55" kindref="member">variance</ref>});</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_with_broadcast<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;op::Broadcast&gt;(variance_label,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3},<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum_input1<sp/>=<sp/>std::make_shared&lt;op::Sum&gt;(input,<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_1_1builder_ae85b2d61001376771c4268d37f6a816a_1ae85b2d61001376771c4268d37f6a816a" kindref="member">mean</ref><sp/>=<sp/>std::make_shared&lt;op::Divide&gt;(sum_input1,<sp/>N);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mean_label<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(<ref refid="namespacengraph_1_1builder_ae85b2d61001376771c4268d37f6a816a_1ae85b2d61001376771c4268d37f6a816a" kindref="member">mean</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref>{<ref refid="namespacengraph_1_1builder_ae85b2d61001376771c4268d37f6a816a_1ae85b2d61001376771c4268d37f6a816a" kindref="member">mean</ref>});</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mean_with_broadcast<sp/>=<sp/>std::make_shared&lt;op::Broadcast&gt;(mean_label,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3},<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_diff_mean<sp/>=<sp/>std::make_shared&lt;op::Subtract&gt;(input,<sp/>mean_with_broadcast);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps_label<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{3});</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps_with_broadcast<sp/>=<sp/>std::make_shared&lt;op::Broadcast&gt;(eps_label,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3},<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add1<sp/>=<sp/>std::make_shared&lt;op::Add&gt;(eps_with_broadcast,<sp/>variance_with_broadcast);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sqrt_variance_eps<sp/>=<sp/>std::make_shared&lt;op::Sqrt&gt;(add1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>divide_mean_variance<sp/>=<sp/>std::make_shared&lt;op::Divide&gt;(input_diff_mean,<sp/>sqrt_variance_eps);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gamma_label<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{3});</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gamma_with_broadcast<sp/>=</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;op::Broadcast&gt;(gamma_label,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3},<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>multiply_gamma<sp/>=</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;op::Multiply&gt;(gamma_with_broadcast,<sp/>divide_mean_variance);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Beta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beta_label<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{3});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beta_with_broadcast<sp/>=<sp/>std::make_shared&lt;op::Broadcast&gt;(beta_label,<sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref>{2,<sp/>3},<sp/><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref>{0});</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>add_beta<sp/>=<sp/>std::make_shared&lt;op::Add&gt;(beta_with_broadcast,<sp/>multiply_gamma);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>completes<sp/>fprop<sp/>bn<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Define<sp/>a<sp/>call<sp/>back<sp/>that<sp/>needs<sp/>to<sp/>called<sp/>once<sp/>the<sp/>DFG<sp/>matches<sp/>the<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ngraph::pattern::gr_callback_fn<sp/>callback<sp/>=</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[variance_label,<sp/>mean_label,<sp/>input,<sp/>eps_label,<sp/>gamma_label,<sp/>beta_label](</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern::Matcher&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>a<sp/>callback<sp/>for<sp/>construct_fprop_bn<sp/>pattern<sp/>against<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m.match_root()-&gt;get_name();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>nn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>-<sp/>add<sp/>assert&apos;s<sp/>based<sp/>on<sp/>the<sp/>matched<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pattern_map<sp/>=<sp/>m.get_pattern_map();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Input:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[input]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[input]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Variance:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[variance_label]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[variance_label]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mean:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[mean_label]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[mean_label]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eps:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[eps_label]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[eps_label]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gamma:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[gamma_label]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[gamma_label]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;beta:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pattern_map[beta_label]-&gt;get_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pattern_map[beta_label]-&gt;get_shape().size();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dont<sp/>fuse<sp/>if<sp/>the<sp/>inout<sp/>doesnt<sp/>have<sp/>4dims</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_map[input]-&gt;get_shape().size()<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>to<sp/>bn<sp/>doesnt<sp/>not<sp/>have<sp/>a<sp/>rank=4,<sp/>so<sp/>not<sp/>fusing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>bn_output_shape{m.match_root()-&gt;get_shape()};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>m_bn_mean_shape{pattern_map[mean_label]-&gt;get_shape()};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>m_bn_variance_shape{pattern_map[variance_label]-&gt;get_shape()};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>epsilon<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eps_ptr<sp/>=<sp/>std::dynamic_pointer_cast&lt;op::Constant&gt;(pattern_map[eps_label]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(eps_ptr-&gt;get_data_ptr()));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bn_node<sp/>=<sp/>std::shared_ptr&lt;Node&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>op::BatchNorm(epsilon,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[gamma_label],</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[beta_label],</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[input],</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[mean_label],</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_map[variance_label]));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bn_node;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::make_shared&lt;ngraph::pattern::Matcher&gt;(add_beta,<sp/>callback);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;add_matcher(m);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp"/>
  </compounddef>
</doxygen>
