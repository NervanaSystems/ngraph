<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnlohmann_1_1detail_1_1exception" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1invalid__iterator" prot="public" virt="non-virtual">nlohmann::detail::invalid_iterator</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1other__error" prot="public" virt="non-virtual">nlohmann::detail::other_error</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1out__of__range" prot="public" virt="non-virtual">nlohmann::detail::out_of_range</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1parse__error" prot="public" virt="non-virtual">nlohmann::detail::parse_error</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1type__error" prot="public" virt="non-virtual">nlohmann::detail::type_error</derivedcompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nlohmann::detail::exception::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>the id of the exception </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="220" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnlohmann_1_1detail_1_1exception_1ad54778dc4f125488cbce8ec276dfdde2" prot="private" static="no" mutable="no">
        <type>std::runtime_error</type>
        <definition>std::runtime_error nlohmann::detail::exception::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
<para>an exception object as storage for error messages </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="232" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* nlohmann::detail::exception::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <briefdescription>
<para>returns the explanatory string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="214" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::exception::exception</definition>
        <argsstring>(int id_, const char *what_arg)</argsstring>
        <name>exception</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="223" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenlohmann_1_1detail_a90aa5ef615aa8305e9ea20d8a947980f_1a90aa5ef615aa8305e9ea20d8a947980fab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref></type>
        <definition>static std::string nlohmann::detail::exception::name</definition>
        <argsstring>(const std::string &amp;ename, int id_)</argsstring>
        <name>name</name>
        <param>
          <type>const <ref refid="namespacenlohmann_1_1detail_a90aa5ef615aa8305e9ea20d8a947980f_1a90aa5ef615aa8305e9ea20d8a947980fab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref> &amp;</type>
          <declname>ename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="225" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>general exception of the <ref refid="classnlohmann_1_1basic__json" kindref="compound">basic_json</ref> class </para>    </briefdescription>
    <detaileddescription>
<para>This class is an extension of <computeroutput>std::exception</computeroutput> objects with a member <emphasis>id</emphasis> for exception ids. It is used as the base class for all exceptions thrown by the <ref refid="classnlohmann_1_1basic__json" kindref="compound">basic_json</ref> class. This class can hence be used as &quot;wildcard&quot; to catch exceptions.</para><para>Subclasses:<itemizedlist>
<listitem><para><ref refid="classnlohmann_1_1detail_1_1parse__error" kindref="compound">parse_error</ref> for exceptions indicating a parse error</para></listitem><listitem><para><ref refid="classnlohmann_1_1detail_1_1invalid__iterator" kindref="compound">invalid_iterator</ref> for exceptions indicating errors with iterators</para></listitem><listitem><para><ref refid="classnlohmann_1_1detail_1_1type__error" kindref="compound">type_error</ref> for exceptions indicating executing a member function with a wrong type</para></listitem><listitem><para><ref refid="classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref> for exceptions indicating access out of the defined range</para></listitem><listitem><para><ref refid="classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref> for exceptions indicating other library errors</para></listitem></itemizedlist>
</para><para>{The following code shows how arbitrary library exceptions can be caught.,exception}</para><para><simplesect kind="since"><para>version 3.0.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3589">
        <label>nlohmann::detail::invalid_iterator</label>
        <link refid="classnlohmann_1_1detail_1_1invalid__iterator"/>
        <childnode refid="3587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3591">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="3587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3592">
        <label>nlohmann::detail::parse_error</label>
        <link refid="classnlohmann_1_1detail_1_1parse__error"/>
        <childnode refid="3587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3588">
        <label>std::exception</label>
      </node>
      <node id="3593">
        <label>nlohmann::detail::type_error</label>
        <link refid="classnlohmann_1_1detail_1_1type__error"/>
        <childnode refid="3587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3587">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3588" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3590">
        <label>nlohmann::detail::other_error</label>
        <link refid="classnlohmann_1_1detail_1_1other__error"/>
        <childnode refid="3587" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3595">
        <label>std::exception</label>
      </node>
      <node id="3594">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3595" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="211" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="210" bodyend="233"/>
    <listofallmembers>
      <member refid="classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>exception</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>id</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1ad54778dc4f125488cbce8ec276dfdde2" prot="private" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>m</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>name</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
