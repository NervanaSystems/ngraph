<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="util_8hpp" kind="file" language="C++">
    <compoundname>util.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">chrono</includes>
    <includes local="no">deque</includes>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includedby refid="autobroadcast_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/autobroadcast.cpp</includedby>
    <includedby refid="compiler_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/codegen/compiler.cpp</includedby>
    <includedby refid="coordinate__transform_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/coordinate_transform.cpp</includedby>
    <includedby refid="function_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp</includedby>
    <includedby refid="avg__pool_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/avg_pool.cpp</includedby>
    <includedby refid="batch__norm_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/batch_norm.hpp</includedby>
    <includedby refid="constant_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/constant.cpp</includedby>
    <includedby refid="ops_2constant_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/constant.hpp</includedby>
    <includedby refid="convolution_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp</includedby>
    <includedby refid="max__pool_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/max_pool.cpp</includedby>
    <includedby refid="pad_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp</includedby>
    <includedby refid="reduce__window_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce_window.cpp</includedby>
    <includedby refid="ops_2relu_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/relu.hpp</includedby>
    <includedby refid="select__and__scatter_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/select_and_scatter.cpp</includedby>
    <includedby refid="dump__sorted_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/dump_sorted.cpp</includedby>
    <includedby refid="liveness_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/liveness.cpp</includedby>
    <includedby refid="memory__layout_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/memory_layout.cpp</includedby>
    <includedby refid="memory__visualize_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/memory_visualize.cpp</includedby>
    <includedby refid="reshape__elimination_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp</includedby>
    <includedby refid="visualize__tree_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp</includedby>
    <includedby refid="cpu__emitter_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_emitter.cpp</includedby>
    <includedby refid="cpu__kernel__utils_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_kernel_utils.cpp</includedby>
    <includedby refid="matmul__bias_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/ops/matmul_bias.hpp</includedby>
    <includedby refid="gpu__emitter_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_emitter.cpp</includedby>
    <includedby refid="int__call__frame_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_call_frame.hpp</includedby>
    <includedby refid="runtime_2kernel_2convolution_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convolution.hpp</includedby>
    <includedby refid="runtime_2kernel_2pad_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/pad.hpp</includedby>
    <includedby refid="runtime_2manager_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/manager.cpp</includedby>
    <includedby refid="runtime_2tensor__view_8hpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp</includedby>
    <includedby refid="serializer_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/serializer.cpp</includedby>
    <includedby refid="type_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp</includedby>
    <includedby refid="util_8cpp" local="yes">/home/indie/libraries/private-ngraph-cpp/src/ngraph/util.cpp</includedby>
    <incdepgraph>
      <node id="16555">
        <label>list</label>
      </node>
      <node id="16553">
        <label>functional</label>
      </node>
      <node id="16559">
        <label>string</label>
      </node>
      <node id="16556">
        <label>map</label>
      </node>
      <node id="16561">
        <label>unordered_set</label>
      </node>
      <node id="16562">
        <label>vector</label>
      </node>
      <node id="16558">
        <label>sstream</label>
      </node>
      <node id="16554">
        <label>iostream</label>
      </node>
      <node id="16552">
        <label>deque</label>
      </node>
      <node id="16560">
        <label>unordered_map</label>
      </node>
      <node id="16551">
        <label>chrono</label>
      </node>
      <node id="16550">
        <label>algorithm</label>
      </node>
      <node id="16549">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="16550" relation="include">
        </childnode>
        <childnode refid="16551" relation="include">
        </childnode>
        <childnode refid="16552" relation="include">
        </childnode>
        <childnode refid="16553" relation="include">
        </childnode>
        <childnode refid="16554" relation="include">
        </childnode>
        <childnode refid="16555" relation="include">
        </childnode>
        <childnode refid="16556" relation="include">
        </childnode>
        <childnode refid="16557" relation="include">
        </childnode>
        <childnode refid="16558" relation="include">
        </childnode>
        <childnode refid="16559" relation="include">
        </childnode>
        <childnode refid="16560" relation="include">
        </childnode>
        <childnode refid="16561" relation="include">
        </childnode>
        <childnode refid="16562" relation="include">
        </childnode>
      </node>
      <node id="16557">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16634">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.cpp</label>
        <link refid="cpu__layout_8cpp_source"/>
      </node>
      <node id="16600">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_external_function.cpp</label>
        <link refid="int__external__function_8cpp_source"/>
      </node>
      <node id="16648">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_backend.cpp</label>
        <link refid="int__backend_8cpp_source"/>
      </node>
      <node id="16614">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_kernel_utils.cpp</label>
        <link refid="cpu__kernel__utils_8cpp_source"/>
      </node>
      <node id="16647">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/host_tensor_view.cpp</label>
        <link refid="host__tensor__view_8cpp_source"/>
      </node>
      <node id="16628">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_manager.cpp</label>
        <link refid="cpu__manager_8cpp_source"/>
      </node>
      <node id="16573">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp</label>
        <link refid="mkldnn__utils_8cpp_source"/>
      </node>
      <node id="16631">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_assignment.hpp</label>
        <link refid="cpu__assignment_8hpp_source"/>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
      </node>
      <node id="16641">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_backend.cpp</label>
        <link refid="cpu__backend_8cpp_source"/>
      </node>
      <node id="16583">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/reduce_ops.cpp</label>
        <link refid="reduce__ops_8cpp_source"/>
      </node>
      <node id="16579">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/numpy_transpose.hpp</label>
        <link refid="numpy__transpose_8hpp_source"/>
        <childnode refid="16580" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
      </node>
      <node id="16597">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_external_function.cpp</label>
        <link refid="gpu__external__function_8cpp_source"/>
      </node>
      <node id="16629">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_tracing.hpp</label>
        <link refid="cpu__tracing_8hpp_source"/>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16630" relation="include">
        </childnode>
      </node>
      <node id="16606">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/relu.hpp</label>
        <link refid="ops_2relu_8hpp_source"/>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16607" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16573" relation="include">
        </childnode>
        <childnode refid="16600" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
      </node>
      <node id="16636">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_call_frame.cpp</label>
        <link refid="gpu__call__frame_8cpp_source"/>
      </node>
      <node id="16570">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/batch_norm.cpp</label>
        <link refid="batch__norm_8cpp_source"/>
      </node>
      <node id="16589">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp</label>
        <link refid="matcher_8hpp_source"/>
        <childnode refid="16590" relation="include">
        </childnode>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16592" relation="include">
        </childnode>
        <childnode refid="16593" relation="include">
        </childnode>
        <childnode refid="16594" relation="include">
        </childnode>
        <childnode refid="16595" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
      </node>
      <node id="16568">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/avg_pool.cpp</label>
        <link refid="avg__pool_8cpp_source"/>
      </node>
      <node id="16624">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_call_frame.hpp</label>
        <link refid="cpu__call__frame_8hpp_source"/>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
      </node>
      <node id="16593">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/op/any.hpp</label>
        <link refid="any_8hpp_source"/>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16589" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
      </node>
      <node id="16575">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/serializer.cpp</label>
        <link refid="serializer_8cpp_source"/>
      </node>
      <node id="16578">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/autodiff/adjoints.cpp</label>
        <link refid="adjoints_8cpp_source"/>
      </node>
      <node id="16601">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_external_function.hpp</label>
        <link refid="int__external__function_8hpp_source"/>
        <childnode refid="16600" relation="include">
        </childnode>
        <childnode refid="16602" relation="include">
        </childnode>
      </node>
      <node id="16617">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/convolution.hpp</label>
        <link refid="runtime_2kernel_2convolution_8hpp_source"/>
        <childnode refid="16598" relation="include">
        </childnode>
      </node>
      <node id="16633">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp</label>
        <link refid="cpu__layout_8hpp_source"/>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16634" relation="include">
        </childnode>
      </node>
      <node id="16639">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_manager.cpp</label>
        <link refid="gpu__manager_8cpp_source"/>
      </node>
      <node id="16608">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/select_and_scatter.cpp</label>
        <link refid="select__and__scatter_8cpp_source"/>
      </node>
      <node id="16596">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_emitter.cpp</label>
        <link refid="gpu__emitter_8cpp_source"/>
      </node>
      <node id="16565">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/codegen/compiler.cpp</label>
        <link refid="compiler_8cpp_source"/>
      </node>
      <node id="16582">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/reduce_ops.hpp</label>
        <link refid="reduce__ops_8hpp_source"/>
        <childnode refid="16583" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
      </node>
      <node id="16605">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce_window.cpp</label>
        <link refid="reduce__window_8cpp_source"/>
      </node>
      <node id="16611">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/memory_layout.cpp</label>
        <link refid="memory__layout_8cpp_source"/>
      </node>
      <node id="16626">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_external_function.hpp</label>
        <link refid="cpu__external__function_8hpp_source"/>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16628" relation="include">
        </childnode>
        <childnode refid="16629" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16633" relation="include">
        </childnode>
      </node>
      <node id="16603">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/convolution.cpp</label>
        <link refid="convolution_8cpp_source"/>
      </node>
      <node id="16588">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/core_fusion.cpp</label>
        <link refid="core__fusion_8cpp_source"/>
      </node>
      <node id="16630">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_tracing.cpp</label>
        <link refid="cpu__tracing_8cpp_source"/>
      </node>
      <node id="16592">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp</label>
        <link refid="matcher_8cpp_source"/>
      </node>
      <node id="16564">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/autobroadcast.cpp</label>
        <link refid="autobroadcast_8cpp_source"/>
      </node>
      <node id="16618">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/kernel/pad.hpp</label>
        <link refid="runtime_2kernel_2pad_8hpp_source"/>
        <childnode refid="16598" relation="include">
        </childnode>
      </node>
      <node id="16622">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/xla_tuple.cpp</label>
        <link refid="xla__tuple_8cpp_source"/>
      </node>
      <node id="16566">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/coordinate_transform.cpp</label>
        <link refid="coordinate__transform_8cpp_source"/>
      </node>
      <node id="16625">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_call_frame.cpp</label>
        <link refid="cpu__call__frame_8cpp_source"/>
      </node>
      <node id="16567">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/function.cpp</label>
        <link refid="function_8cpp_source"/>
      </node>
      <node id="16587">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/select.cpp</label>
        <link refid="select_8cpp_source"/>
      </node>
      <node id="16591">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp</label>
        <link refid="reshape__elimination_8cpp_source"/>
      </node>
      <node id="16638">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_emitter.hpp</label>
        <link refid="gpu__emitter_8hpp_source"/>
        <childnode refid="16596" relation="include">
        </childnode>
        <childnode refid="16597" relation="include">
        </childnode>
      </node>
      <node id="16571">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_emitter.cpp</label>
        <link refid="cpu__emitter_8cpp_source"/>
      </node>
      <node id="16609">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/dump_sorted.cpp</label>
        <link refid="dump__sorted_8cpp_source"/>
      </node>
      <node id="16594">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/op/label.hpp</label>
        <link refid="label_8hpp_source"/>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16589" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
      </node>
      <node id="16584">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/graph_util.cpp</label>
        <link refid="graph__util_8cpp_source"/>
      </node>
      <node id="16623">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/call_frame.hpp</label>
        <link refid="call__frame_8hpp_source"/>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
      </node>
      <node id="16585">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/max_pool.cpp</label>
        <link refid="max__pool_8cpp_source"/>
      </node>
      <node id="16640">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_tensor_view.hpp</label>
        <link refid="cpu__tensor__view_8hpp_source"/>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16642" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
      </node>
      <node id="16572">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_external_function.cpp</label>
        <link refid="cpu__external__function_8cpp_source"/>
      </node>
      <node id="16615">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/ops/matmul_bias.hpp</label>
        <link refid="matmul__bias_8hpp_source"/>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16616" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
      </node>
      <node id="16598">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_call_frame.hpp</label>
        <link refid="int__call__frame_8hpp_source"/>
        <childnode refid="16599" relation="include">
        </childnode>
        <childnode refid="16600" relation="include">
        </childnode>
        <childnode refid="16601" relation="include">
        </childnode>
      </node>
      <node id="16574">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_fusion.cpp</label>
        <link refid="cpu__fusion_8cpp_source"/>
      </node>
      <node id="16604">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp</label>
        <link refid="pad_8cpp_source"/>
      </node>
      <node id="16649">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.cpp</label>
        <link refid="runtime_2tensor__view_8cpp_source"/>
      </node>
      <node id="16610">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/liveness.cpp</label>
        <link refid="liveness_8cpp_source"/>
      </node>
      <node id="16643">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_tensor_view.hpp</label>
        <link refid="gpu__tensor__view_8hpp_source"/>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16645" relation="include">
        </childnode>
      </node>
      <node id="16577">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/constant.hpp</label>
        <link refid="ops_2constant_8hpp_source"/>
        <childnode refid="16578" relation="include">
        </childnode>
        <childnode refid="16579" relation="include">
        </childnode>
        <childnode refid="16582" relation="include">
        </childnode>
        <childnode refid="16584" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16570" relation="include">
        </childnode>
        <childnode refid="16576" relation="include">
        </childnode>
        <childnode refid="16585" relation="include">
        </childnode>
        <childnode refid="16586" relation="include">
        </childnode>
        <childnode refid="16587" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16589" relation="include">
        </childnode>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
        <childnode refid="16596" relation="include">
        </childnode>
        <childnode refid="16597" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
        <childnode refid="16600" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
      </node>
      <node id="16651">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/util.cpp</label>
        <link refid="util_8cpp_source"/>
      </node>
      <node id="16619">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/manager.cpp</label>
        <link refid="runtime_2manager_8cpp_source"/>
      </node>
      <node id="16621">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/xla_tuple.hpp</label>
        <link refid="xla__tuple_8hpp_source"/>
        <childnode refid="16622" relation="include">
        </childnode>
      </node>
      <node id="16602">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_manager.cpp</label>
        <link refid="int__manager_8cpp_source"/>
      </node>
      <node id="16646">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/host_tensor_view.hpp</label>
        <link refid="host__tensor__view_8hpp_source"/>
        <childnode refid="16647" relation="include">
        </childnode>
        <childnode refid="16648" relation="include">
        </childnode>
        <childnode refid="16599" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
      </node>
      <node id="16637">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_external_function.hpp</label>
        <link refid="gpu__external__function_8hpp_source"/>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16597" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
      </node>
      <node id="16632">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_assignment.cpp</label>
        <link refid="cpu__assignment_8cpp_source"/>
      </node>
      <node id="16613">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/visualize_tree.cpp</label>
        <link refid="visualize__tree_8cpp_source"/>
      </node>
      <node id="16644">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_backend.cpp</label>
        <link refid="gpu__backend_8cpp_source"/>
      </node>
      <node id="16627">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_emitter.hpp</label>
        <link refid="cpu__emitter_8hpp_source"/>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
      </node>
      <node id="16642">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/cpu_tensor_view.cpp</label>
        <link refid="cpu__tensor__view_8cpp_source"/>
      </node>
      <node id="16580">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/builder/numpy_transpose.cpp</label>
        <link refid="numpy__transpose_8cpp_source"/>
      </node>
      <node id="16635">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_call_frame.hpp</label>
        <link refid="gpu__call__frame_8hpp_source"/>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16597" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
      </node>
      <node id="16595">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/op/pattern.hpp</label>
        <link refid="pattern_8hpp_source"/>
        <childnode refid="16593" relation="include">
        </childnode>
        <childnode refid="16594" relation="include">
        </childnode>
      </node>
      <node id="16581">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ngraph.hpp</label>
        <link refid="ngraph_8hpp_source"/>
      </node>
      <node id="16616">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/ops/matmul_bias.cpp</label>
        <link refid="matmul__bias_8cpp_source"/>
      </node>
      <node id="16607">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/relu.cpp</label>
        <link refid="relu_8cpp_source"/>
      </node>
      <node id="16590">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/graph_rewrite.cpp</label>
        <link refid="graph__rewrite_8cpp_source"/>
      </node>
      <node id="16650">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/types/type.cpp</label>
        <link refid="type_8cpp_source"/>
      </node>
      <node id="16599">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/interpreter/int_call_frame.cpp</label>
        <link refid="int__call__frame_8cpp_source"/>
      </node>
      <node id="16569">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/batch_norm.hpp</label>
        <link refid="batch__norm_8hpp_source"/>
        <childnode refid="16570" relation="include">
        </childnode>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16573" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
      </node>
      <node id="16645">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/gpu/gpu_tensor_view.cpp</label>
        <link refid="gpu__tensor__view_8cpp_source"/>
      </node>
      <node id="16576">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/constant.cpp</label>
        <link refid="constant_8cpp_source"/>
      </node>
      <node id="16563">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="16564" relation="include">
        </childnode>
        <childnode refid="16565" relation="include">
        </childnode>
        <childnode refid="16566" relation="include">
        </childnode>
        <childnode refid="16567" relation="include">
        </childnode>
        <childnode refid="16568" relation="include">
        </childnode>
        <childnode refid="16569" relation="include">
        </childnode>
        <childnode refid="16576" relation="include">
        </childnode>
        <childnode refid="16577" relation="include">
        </childnode>
        <childnode refid="16603" relation="include">
        </childnode>
        <childnode refid="16585" relation="include">
        </childnode>
        <childnode refid="16604" relation="include">
        </childnode>
        <childnode refid="16605" relation="include">
        </childnode>
        <childnode refid="16606" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16609" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16611" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16615" relation="include">
        </childnode>
        <childnode refid="16596" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
        <childnode refid="16651" relation="include">
        </childnode>
      </node>
      <node id="16620">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/tensor_view.hpp</label>
        <link refid="runtime_2tensor__view_8hpp_source"/>
        <childnode refid="16621" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16623" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16643" relation="include">
        </childnode>
        <childnode refid="16646" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
        <childnode refid="16649" relation="include">
        </childnode>
      </node>
      <node id="16586">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/replace_slice.cpp</label>
        <link refid="replace__slice_8cpp_source"/>
      </node>
      <node id="16612">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/memory_visualize.cpp</label>
        <link refid="memory__visualize_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classngraph_1_1stopwatch" prot="public">ngraph::stopwatch</innerclass>
    <innerclass refid="structngraph_1_1FpropCache" prot="public">ngraph::FpropCache</innerclass>
    <innernamespace refid="namespacengraph">ngraph</innernamespace>
    <innernamespace refid="namespacengraph_1_1runtime">ngraph::runtime</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Node;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Function;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">stopwatch;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runtime</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Backend;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Value;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>to_cplusplus_sourcecode_literal(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>join(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sep<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>v)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;x<sp/>!=<sp/>&amp;*(v.begin()))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>sep;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>vector_to_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngraph::join(v)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.str();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>:<sp/>container)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>==<sp/>obj)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>:<sp/>container)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.first<sp/>==<sp/>obj)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remove_from(U&amp;<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>container.find(obj);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>container.end())</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.erase(it);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_combine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>list);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>to_lower(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>trim(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delimiter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classngraph_1_1stopwatch" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classngraph_1_1stopwatch" kindref="compound">stopwatch</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_active<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_total_count++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_start_time<sp/>=<sp/>m_clock.now();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_active<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_time<sp/>=<sp/>m_clock.now();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_last_time<sp/>=<sp/>end_time<sp/>-<sp/>m_start_time;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_total_time<sp/>+=<sp/>m_last_time;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_call_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_total_count;<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_seconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_nanoseconds()<sp/>/<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_milliseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_nanoseconds()<sp/>/<sp/>1e6;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_microseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_nanoseconds()<sp/>/<sp/>1e3;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_nanoseconds()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_active)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_clock.now()<sp/>-<sp/>m_start_time).count();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_last_time.count();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_total_seconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_total_nanoseconds()<sp/>/<sp/>1e9;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_total_milliseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_total_nanoseconds()<sp/>/<sp/>1e6;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_total_microseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_total_nanoseconds()<sp/>/<sp/>1e3;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_total_nanoseconds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_total_time.count();<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::high_resolution_clock<sp/>m_clock;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;<sp/>m_start_time;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/>m_total_time<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/>m_last_time;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_total_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="173" refid="namespacengraph_1a930c271c2c799f63f77ea702b1de1bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespacengraph_1a930c271c2c799f63f77ea702b1de1bb8" kindref="member">parse_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>s;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>result;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>(1)<sp/>parsing<sp/>succeeded<sp/>and<sp/>(2)<sp/>the<sp/>entire<sp/>string<sp/>was<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss.fail()<sp/>||<sp/>ss.rdbuf()-&gt;in_avail()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>literal<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>s<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacengraph_ae1a26c975aaee99c93984a38a5cdc779_1ae1a26c975aaee99c93984a38a5cdc779" kindref="member">parse_string&lt;float&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parse_string&lt;double&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="199" refid="namespacengraph_1a14335cbdd13252ae9d0c790b2bb5009d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="namespacengraph_1a930c271c2c799f63f77ea702b1de1bb8" kindref="member">parse_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>ss)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>result;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>ss)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(parse_string&lt;T&gt;(s));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BinaryOp&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;InputIt&gt;::value_type</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce(InputIt<sp/>first,<sp/>InputIt<sp/>last,<sp/>BinaryOp<sp/>op)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;InputIt&gt;::value_type<sp/>result;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>==<sp/>last)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*first++;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>last)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>op(result,<sp/>*first);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first++;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>plus(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>b)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>mul(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>b)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>ceil_div(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>y)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>(1<sp/>+<sp/>(x<sp/>-<sp/>1)<sp/>/<sp/>y));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>subtract_or_zero(T<sp/>x,<sp/>T<sp/>y)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/>&gt;<sp/>x<sp/>?<sp/>0<sp/>:<sp/>x<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aligned_alloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alignment,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>aligned_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>round_up(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alignment);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Return<sp/>type<sp/>struct<sp/>for<sp/>cache_fprop,<sp/>with<sp/>the<sp/>modified<sp/>fprop<sp/>and<sp/>bprop</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>functions</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>and<sp/>a<sp/>list<sp/>of<sp/>the<sp/>nodes<sp/>that<sp/>have<sp/>been<sp/>appended<sp/>to<sp/>fprop<sp/>output/bprop</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>input</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="structngraph_1_1FpropCache" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structngraph_1_1FpropCache" kindref="compound">FpropCache</ref></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Function&gt;<sp/>fprop;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Function&gt;<sp/>bprop;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;<sp/>fprop_output_nodes;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structngraph_1_1FpropCache" kindref="compound">FpropCache</ref><sp/><ref refid="namespacengraph_aca9cf8bfa59e0cb75ace990f0a0b5b74_1aca9cf8bfa59e0cb75ace990f0a0b5b74" kindref="member">cache_fprop</ref>(std::shared_ptr&lt;Function&gt;<sp/>fprop,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Function&gt;<sp/>bprop,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;<sp/>adjoints);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>ngraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/util.hpp"/>
  </compounddef>
</doxygen>
