<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structnlohmann_1_1detail_1_1output__adapter__protocol" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>nlohmann::detail::output_adapter_protocol</compoundname>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1output__stream__adapter" prot="public" virt="non-virtual">nlohmann::detail::output_stream_adapter&lt; CharType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1output__string__adapter" prot="public" virt="non-virtual">nlohmann::detail::output_string_adapter&lt; CharType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classnlohmann_1_1detail_1_1output__vector__adapter" prot="public" virt="non-virtual">nlohmann::detail::output_vector_adapter&lt; CharType &gt;</derivedcompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CharType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1output__adapter__protocol_1a3381896fe1be557f591de2e917cdc7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nlohmann::detail::output_adapter_protocol&lt; CharType &gt;::write_character</definition>
        <argsstring>(CharType c)=0</argsstring>
        <name>write_character</name>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__vector__adapter_1af6a22d4210bb7bc2da66021300ddd6db">write_character</reimplementedby>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__stream__adapter_1a6e2698c76b200b2d8fac6cebfc43a245">write_character</reimplementedby>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__string__adapter_1ae66b8b2b776acd4fc20bcb24dc7a4fac">write_character</reimplementedby>
        <param>
          <type>CharType</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="4391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1output__adapter__protocol_1a2f410a164e0eda17cf6561114b0eee4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nlohmann::detail::output_adapter_protocol&lt; CharType &gt;::write_characters</definition>
        <argsstring>(const CharType *s, std::size_t length)=0</argsstring>
        <name>write_characters</name>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__vector__adapter_1ad6f6c461dec7bedd5359454dc22fc9aa">write_characters</reimplementedby>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__stream__adapter_1ad61375497a7d03cb0bdcddfdaad185d0">write_characters</reimplementedby>
        <reimplementedby refid="classnlohmann_1_1detail_1_1output__string__adapter_1ad356f6e878ee105e72e66d18b665f623">write_characters</reimplementedby>
        <param>
          <type>const CharType *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="4392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structnlohmann_1_1detail_1_1output__adapter__protocol_1ad71cdc057030f8a775a191face25061a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual nlohmann::detail::output_adapter_protocol&lt; CharType &gt;::~output_adapter_protocol</definition>
        <argsstring>()=default</argsstring>
        <name>~output_adapter_protocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="4393" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>abstract output adapter interface </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3744">
        <label>nlohmann::detail::output_string_adapter&lt; CharType &gt;</label>
        <link refid="classnlohmann_1_1detail_1_1output__string__adapter"/>
        <childnode refid="3742" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3745">
        <label>nlohmann::detail::output_vector_adapter&lt; CharType &gt;</label>
        <link refid="classnlohmann_1_1detail_1_1output__vector__adapter"/>
        <childnode refid="3742" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3742">
        <label>nlohmann::detail::output_adapter_protocol&lt; CharType &gt;</label>
        <link refid="structnlohmann_1_1detail_1_1output__adapter__protocol"/>
      </node>
      <node id="3743">
        <label>nlohmann::detail::output_stream_adapter&lt; CharType &gt;</label>
        <link refid="classnlohmann_1_1detail_1_1output__stream__adapter"/>
        <childnode refid="3742" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="4390" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="4389" bodyend="4394"/>
    <listofallmembers>
      <member refid="structnlohmann_1_1detail_1_1output__adapter__protocol_1a3381896fe1be557f591de2e917cdc7d5" prot="public" virt="pure-virtual"><scope>nlohmann::detail::output_adapter_protocol</scope><name>write_character</name></member>
      <member refid="structnlohmann_1_1detail_1_1output__adapter__protocol_1a2f410a164e0eda17cf6561114b0eee4a" prot="public" virt="pure-virtual"><scope>nlohmann::detail::output_adapter_protocol</scope><name>write_characters</name></member>
      <member refid="structnlohmann_1_1detail_1_1output__adapter__protocol_1ad71cdc057030f8a775a191face25061a" prot="public" virt="virtual"><scope>nlohmann::detail::output_adapter_protocol</scope><name>~output_adapter_protocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
