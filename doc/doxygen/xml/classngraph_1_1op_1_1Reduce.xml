<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1op_1_1Reduce" kind="class" language="C++" prot="public">
    <compoundname>ngraph::op::Reduce</compoundname>
    <basecompoundref refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs" prot="public" virt="non-virtual">ngraph::op::util::RequiresTensorViewArgs</basecompoundref>
    <includes refid="ops_2reduce_8hpp" local="no">reduce.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1op_1_1Reduce_1a84262a1ca95c089e128357267075aa3b" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Function&gt; ngraph::op::Reduce::m_reduction_function</definition>
        <argsstring></argsstring>
        <name>m_reduction_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="118" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Reduce_1af32437f541f3b67d736f040e0667932e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref></type>
        <definition>AxisSet ngraph::op::Reduce::m_reduction_axes</definition>
        <argsstring></argsstring>
        <name>m_reduction_axes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="119" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1op_1_1Reduce_aa1b16935299b71545a30bba52501d6b7_1aa1b16935299b71545a30bba52501d6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Reduce::Reduce</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;arg_reductee, const std::shared_ptr&lt; Node &gt; &amp;arg_init, const std::shared_ptr&lt; Function &gt; &amp;reduction_function, const AxisSet &amp;reduction_axes)</argsstring>
        <name>Reduce</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>arg_reductee</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>arg_init</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &gt; &amp;</type>
          <declname>reduction_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
          <declname>reduction_axes</declname>
        </param>
        <briefdescription>
<para>Constructs a reduction operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg_reductee</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor view to be reduced. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_init</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial value for reduction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reduction_function</parametername>
</parameternamelist>
<parameterdescription>
<para>The reduction function to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reduction_axes</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis positions (0-based) to be eliminated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="94" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.cpp" bodystart="23" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Reduce_1a64bc402201057358dce9caf9a459bf6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;Node&gt; ngraph::op::Reduce::copy_with_new_args</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Node &gt;&gt; &amp;new_args) const override</argsstring>
        <name>copy_with_new_args</name>
        <reimplements refid="classngraph_1_1Node_1a0c3c1afcdb7effe100c653b86a2eb56e">copy_with_new_args</reimplements>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;&gt; &amp;</type>
          <declname>new_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="99" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="99" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Reduce_ae3fde66e7e23c8b309c6cb26457faacb_1ae3fde66e7e23c8b309c6cb26457faacb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">Function</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Function&gt; &gt; ngraph::op::Reduce::get_functions</definition>
        <argsstring>() const override</argsstring>
        <name>get_functions</name>
        <reimplements refid="classngraph_1_1Node_1abb77c47e270bdf0622587ee86919b492">get_functions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A one-element vector containing the function to use for reduction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="111" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Reduce_a20bceae720b17acbb2e86aae46cdcf28_1a20bceae720b17acbb2e86aae46cdcf28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a550e0ad172aface7ca88c0ae5539470a" kindref="member">AxisSet</ref> &amp;</type>
        <definition>const AxisSet&amp; ngraph::op::Reduce::get_reduction_axes</definition>
        <argsstring>() const</argsstring>
        <name>get_reduction_axes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The axis positions (0-based) to be eliminated through reduction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="116" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Tensor reduction operation. </para>    </briefdescription>
    <detaileddescription>
<para>Element-wise reduces the input tensor, eliminating the specified reduction axes, given a reduction function that maps two scalars to a scalar. For example, if the reduction function <formula id="57">$f(x,y) = x+y$</formula>:</para><para><formula id="58">\[ \mathit{reduce}\left(f,\{0\}, \left[ \begin{array}{ccc} 1 &amp; 2 \\ 3 &amp; 4 \\ 5 &amp; 6 \end{array} \right]\right) = \left[ (1 + 3 + 5), (2 + 4 + 6) \right] = \left[ 9, 12 \right]~~~\text{(dimension 0 (rows) is eliminated)} \]</formula></para><para><formula id="59">\[ \mathit{reduce}\left(f,\{1\}, \left[ \begin{array}{ccc} 1 &amp; 2 \\ 3 &amp; 4 \\ 5 &amp; 6 \end{array} \right]\right) = \left[ (1 + 2), (3 + 4), (5 + 6) \right] = \left[ 3, 7, 11 \right]~~~\text{(dimension 1 (columns) is eliminated)} \]</formula></para><para><formula id="60">\[ \mathit{reduce}\left(f,\{0,1\}, \left[ \begin{array}{ccc} 1 &amp; 2 \\ 3 &amp; 4 \\ 5 &amp; 6 \end{array} \right]\right) = (1 + 2) + (3 + 4) + (5 + 6) = 21~~~\text{(both dimensions (rows and columns) are eliminated)} \]</formula></para><para>It is assumed that <formula id="61">$f$</formula> is associative. In other words, the order of operations is undefined. In the case where a collapsed dimension is 0, the value of <computeroutput>arg_init</computeroutput> will be substituted.</para><para>Note that the parameter <computeroutput>reduction_axes</computeroutput> specifies which axes are to be <emphasis>eliminated</emphasis>, which can be a bit counterintuitive. For example, as seen above, eliminating the column dimension results in the <emphasis>rows</emphasis> being summed, not the columns.</para><para><heading level="2">Parameters</heading>
</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Description   </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>reduction_function</computeroutput>  </para></entry><entry thead="no"><para>The scalar function used to reduce the input tensor. Must take two arguments of type <formula id="62">$E[]$</formula> and return type <formula id="62">$E[]$</formula>.   </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>reduction_axes</computeroutput>  </para></entry><entry thead="no"><para>The axes to eliminate through reduction.   </para></entry></row>
</table>
</para><para><heading level="2">Inputs</heading>
</para><para><table rows="3" cols="3"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Type  </para></entry><entry thead="yes"><para>Description   </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>arg_reductee</computeroutput>  </para></entry><entry thead="no"><para><formula id="4">$E[d_1,\dots,d_n]~(n \geq 0)$</formula>  </para></entry><entry thead="no"><para>An input tensor of any shape, with the element type matching that expected by the reduction function.   </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>arg_init</computeroutput>  </para></entry><entry thead="no"><para><formula id="62">$E[]$</formula>  </para></entry><entry thead="no"><para>An scalar to be used as a substitute output value on zero-sized axes.   </para></entry></row>
</table>
</para><para><heading level="2">Output</heading>
</para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Type  </para></entry><entry thead="yes"><para>Description   </para></entry></row>
<row>
<entry thead="no"><para><formula id="5">$E[\textit{delete}(A,d_1,\dots,d_n)]$</formula>  </para></entry><entry thead="no"><para>The tensor <formula id="2">$T$</formula>, where <formula id="2">$T$</formula> is the input tensor with the <computeroutput>reduction_axes</computeroutput> <formula id="6">$A$</formula> eliminated by reduction.   </para></entry></row>
</table>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2023">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="2024" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2021">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="2022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2020">
        <label>ngraph::op::Reduce</label>
        <link refid="classngraph_1_1op_1_1Reduce"/>
        <childnode refid="2021" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2024">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="2022">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="2023" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2028">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="2029" relation="public-inheritance">
        </childnode>
        <childnode refid="2030" relation="usage">
          <edgelabel>m_outputs</edgelabel>
        </childnode>
        <childnode refid="2038" relation="usage">
          <edgelabel>liveness_live_list</edgelabel>
          <edgelabel>liveness_free_list</edgelabel>
          <edgelabel>liveness_new_list</edgelabel>
        </childnode>
        <childnode refid="2046" relation="usage">
          <edgelabel>m_users</edgelabel>
        </childnode>
        <childnode refid="2048" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="2049" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
        <childnode refid="2041" relation="usage">
          <edgelabel>m_node_type</edgelabel>
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="2026">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="2027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2035">
        <label>K</label>
      </node>
      <node id="2037">
        <label>T</label>
      </node>
      <node id="2046">
        <label>std::multiset&lt; ngraph::Node *&gt;</label>
        <childnode refid="2028" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2047" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="2052">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="2035" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2037" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2049">
        <label>std::unordered_map&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</label>
        <childnode refid="2050" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="2028" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2052" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2040">
        <label>ngraph::element::Type</label>
        <link refid="classngraph_1_1element_1_1Type"/>
      </node>
      <node id="2031">
        <label>ngraph::descriptor::Output</label>
        <link refid="classngraph_1_1descriptor_1_1Output"/>
        <childnode refid="2032" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="2028" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="2025">
        <label>ngraph::op::Reduce</label>
        <link refid="classngraph_1_1op_1_1Reduce"/>
        <childnode refid="2026" relation="public-inheritance">
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>m_reduction_axes</edgelabel>
        </childnode>
      </node>
      <node id="2039">
        <label>ngraph::descriptor::Tensor</label>
        <link refid="classngraph_1_1descriptor_1_1Tensor"/>
        <childnode refid="2040" relation="usage">
          <edgelabel>m_element_type</edgelabel>
        </childnode>
        <childnode refid="2041" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="2043" relation="usage">
          <edgelabel>m_primary_tensor_view</edgelabel>
        </childnode>
      </node>
      <node id="2043">
        <label>ngraph::descriptor::PrimaryTensorView</label>
        <link refid="classngraph_1_1descriptor_1_1PrimaryTensorView"/>
        <childnode refid="2044" relation="public-inheritance">
        </childnode>
        <childnode refid="2039" relation="usage">
          <edgelabel>m_tensor</edgelabel>
        </childnode>
      </node>
      <node id="2053">
        <label>std::set&lt; size_t &gt;</label>
        <childnode refid="2034" relation="template-instance">
          <edgelabel>&lt; size_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2044">
        <label>ngraph::descriptor::TensorView</label>
        <link refid="classngraph_1_1descriptor_1_1TensorView"/>
        <childnode refid="2041" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="2030">
        <label>std::deque&lt; ngraph::descriptor::Output &gt;</label>
        <childnode refid="2031" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="2036" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2042">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="2029">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="2032">
        <label>std::set&lt; ngraph::descriptor::Input *&gt;</label>
        <childnode refid="2033" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2034" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="2027">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="2028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2034">
        <label>std::set&lt; K &gt;</label>
        <childnode refid="2035" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="2033">
        <label>ngraph::descriptor::Input</label>
        <link refid="classngraph_1_1descriptor_1_1Input"/>
        <childnode refid="2031" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
        <childnode refid="2028" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="2047">
        <label>std::multiset&lt; K &gt;</label>
        <childnode refid="2035" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="2048">
        <label>std::deque&lt; ngraph::descriptor::Input &gt;</label>
        <childnode refid="2033" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="2036" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2045">
        <label>std::unordered_set&lt; K &gt;</label>
        <childnode refid="2035" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="2051">
        <label>std::unordered_map&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</label>
        <childnode refid="2028" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2052" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2038">
        <label>std::unordered_set&lt; ngraph::descriptor::Tensor *&gt;</label>
        <childnode refid="2039" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="2045" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Tensor *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="2050">
        <label>ngraph::autodiff::Adjoints</label>
        <link refid="classngraph_1_1autodiff_1_1Adjoints"/>
        <childnode refid="2051" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
      </node>
      <node id="2036">
        <label>std::deque&lt; T &gt;</label>
        <childnode refid="2037" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2041">
        <label>std::string</label>
        <childnode refid="2042" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" line="86" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/reduce.hpp" bodystart="85" bodyend="120"/>
    <listofallmembers>
      <member refid="classngraph_1_1Node_1a1bac19895a096bb5772f6a6c120b3813" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>add_output</name></member>
      <member refid="classngraph_1_1Node_1a5f3de445063d95cb31842e3a44e487c8" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>backprop_node</name></member>
      <member refid="classngraph_1_1Node_1a99c230728fde81ca9e64ed393d0728c4" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>clear_arguments</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_1a64bc402201057358dce9caf9a459bf6b" prot="public" virt="virtual"><scope>ngraph::op::Reduce</scope><name>copy_with_new_args</name></member>
      <member refid="classngraph_1_1Node_1a92598fdffd86cf6fd3adf0081e041d2f" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>description</name></member>
      <member refid="classngraph_1_1Node_1a423c05a93bb628e8c311b631fb6a582c" prot="protected" virt="virtual"><scope>ngraph::op::Reduce</scope><name>generate_adjoints</name></member>
      <member refid="classngraph_1_1Node_1a08ce613a6a22b1083c05321f0dced2a6" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_element_type</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_ae3fde66e7e23c8b309c6cb26457faacb_1ae3fde66e7e23c8b309c6cb26457faacb" prot="public" virt="virtual"><scope>ngraph::op::Reduce</scope><name>get_functions</name></member>
      <member refid="classngraph_1_1Node_1a98841a99a32bdcf64a371ff2aed2abc1" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_input_element_type</name></member>
      <member refid="classngraph_1_1Node_1aa7aaefcd4db958482315af48cb221a6c" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_input_op</name></member>
      <member refid="classngraph_1_1Node_1ac9b5aed803ef1f50a02a87dc81034ffe" prot="public" virt="virtual"><scope>ngraph::op::Reduce</scope><name>get_input_ops</name></member>
      <member refid="classngraph_1_1Node_1a9ff5f656d6b183cc00af753ec6b6144a" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_input_shape</name></member>
      <member refid="classngraph_1_1Node_1a69c6620b65b11187bf367a2d0e440699" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_input_size</name></member>
      <member refid="classngraph_1_1Node_1a3e88cf704f45f337a48d79a16a54e2c7" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a3d47e40f640c1469db01a33611a993e0" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a7a189270f6c1d02aa62c11b82d837bfb" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_instance_id</name></member>
      <member refid="classngraph_1_1Node_1ab0228a9136af1c06e6c32503871aa037" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_name</name></member>
      <member refid="classngraph_1_1Node_1a49900b3c7bc6ee44c466a622ccf52f71" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_node_id</name></member>
      <member refid="classngraph_1_1op_1_1Op_1a4f467309aee6d72bb286c09cd09c4bbf" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a91ccdcd6a30ca5a265c74f0f2734210b" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_element_type</name></member>
      <member refid="classngraph_1_1Node_1a68967e741c4045d22b712c5f644f5fa7" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_inputs</name></member>
      <member refid="classngraph_1_1Node_1a29bad373294c6939549d3302c6c5b45c" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_shape</name></member>
      <member refid="classngraph_1_1Node_1a9257d1be4e21fd9b4e834ee763c9ab03" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_size</name></member>
      <member refid="classngraph_1_1Node_1a0cb34ea18330939c53fbf7fe15603c32" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a1d7465ea8dda0f2f22c13929656d4291" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a45ae2b4b094d1d91d1c867dc30143d7a" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1a75b38938bbc73474c8ea083b36da876c" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1ac9aae122c66b9d82c240fd35c1e45250" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1Node_1aed735e2ef3cda31846ec7f0a85ebd5d8" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_a20bceae720b17acbb2e86aae46cdcf28_1a20bceae720b17acbb2e86aae46cdcf28" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_reduction_axes</name></member>
      <member refid="classngraph_1_1Node_1a7a690a13f82f2420e221be4ef0987f56" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1Node_1a17548877a029631148b2fa00c2f11fcb" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>has_same_type</name></member>
      <member refid="classngraph_1_1Node_1ad0a48043e7858c06a2c91b25c2e88030" prot="public" virt="virtual"><scope>ngraph::op::Reduce</scope><name>is_commutative</name></member>
      <member refid="classngraph_1_1Node_1aa560b6ff7736831265cf1ce1346e6376" prot="public" virt="virtual"><scope>ngraph::op::Reduce</scope><name>is_constant</name></member>
      <member refid="classngraph_1_1Node_1ad3ae6e9bcbf2462a074847fdf47ab986" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>is_output</name></member>
      <member refid="classngraph_1_1Node_1ab700ac2bc2dec9138e3e1575b49075c6" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>is_parameter</name></member>
      <member refid="classngraph_1_1Node_ad69bb7920f3c6898754e0e938461fa8c_1ad69bb7920f3c6898754e0e938461fa8c" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>is_same_op_type</name></member>
      <member refid="classngraph_1_1Node_1a4f36c2c5ae51d1073d5bc23ab44cd72f" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>liveness_free_list</name></member>
      <member refid="classngraph_1_1Node_1aa58e8eb953c65c957dbdc56d7aa1dca5" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>liveness_live_list</name></member>
      <member refid="classngraph_1_1Node_1a572f0f0ef5cb7d309a86b1ffddda7da1" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>liveness_new_list</name></member>
      <member refid="classngraph_1_1Node_1a881dacc03050bbe8dc679455c99bfaa8" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_adjoint_map</name></member>
      <member refid="classngraph_1_1Node_1a4f55bb2b70a88ddcc407a2930da034e7" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_inputs</name></member>
      <member refid="classngraph_1_1Node_1ae927d96858146fd4aad4f7a9d6c03e8e" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a034da5cfe5401a01045f2fd8a9374ca7" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_is_output</name></member>
      <member refid="classngraph_1_1Node_1af72ec96a91723b94174886a947835f93" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_name</name></member>
      <member refid="classngraph_1_1Node_1afc2e9023e2895f9d7465062ce7bbd49e" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_next_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a9d06e17d8a569f809d6d322edb405b24" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_node_type</name></member>
      <member refid="classngraph_1_1Node_1a177ab91b7609c16e8d57e1a7182f2bd0" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_1af32437f541f3b67d736f040e0667932e" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_reduction_axes</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_1a84262a1ca95c089e128357267075aa3b" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_reduction_function</name></member>
      <member refid="classngraph_1_1Node_1ad0f9c97f26a1ad8a42b7308f0e4773f5" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>m_users</name></member>
      <member refid="classngraph_1_1Node_1a0259d67ef3d6d82e38dbafa62d1463e2" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>Node</name></member>
      <member refid="classngraph_1_1op_1_1Op_1adfb9351528f9956627f25e07baa560fa" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>Op</name></member>
      <member refid="classngraph_1_1op_1_1Reduce_aa1b16935299b71545a30bba52501d6b7_1aa1b16935299b71545a30bba52501d6b7" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>Reduce</name></member>
      <member refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs_a4ec9a470de62c9b1986d139f72717eb5_1a4ec9a470de62c9b1986d139f72717eb5" prot="protected" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>RequiresTensorViewArgs</name></member>
      <member refid="classngraph_1_1Node_1a7bcdb7230a14c3c76a38392bfeacea1a" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>set_is_output</name></member>
      <member refid="classngraph_1_1Node_1a21c1e9e47d5447ba37982d1bbc57e79c" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>set_name</name></member>
      <member refid="classngraph_1_1op_1_1Op_1aba75fd5c954f4480c2e4ddb4e1fc5f2a" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>set_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a0a2d35a1430bc4671184eec8e1425640" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a7500930e175b8f522d26988796727ce1" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a1ca1186be7560ca6fd3a4bc1819526a1" prot="public" virt="non-virtual"><scope>ngraph::op::Reduce</scope><name>users</name></member>
      <member refid="classngraph_1_1Node_1a2a6579e8a1f70539b8e47d100eb06ae6" prot="protected" virt="virtual"><scope>ngraph::op::Reduce</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
