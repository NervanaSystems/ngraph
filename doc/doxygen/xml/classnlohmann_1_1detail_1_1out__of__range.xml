<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnlohmann_1_1detail_1_1out__of__range" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::out_of_range</compoundname>
    <basecompoundref refid="classnlohmann_1_1detail_1_1exception" prot="public" virt="non-virtual">nlohmann::detail::exception</basecompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1out__of__range_1a3f6d82a6f967c4728a1ec735a7867073" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref></type>
        <definition>static out_of_range nlohmann::detail::out_of_range::create</definition>
        <argsstring>(int id_, const std::string &amp;what_arg)</argsstring>
        <name>create</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenlohmann_1_1detail_a90aa5ef615aa8305e9ea20d8a947980f_1a90aa5ef615aa8305e9ea20d8a947980fab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref> &amp;</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="447" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="447" bodyend="451"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnlohmann_1_1detail_1_1out__of__range_1ab5fe402019dba957558499502f0fd731" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::out_of_range::out_of_range</definition>
        <argsstring>(int id_, const char *what_arg)</argsstring>
        <name>out_of_range</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="454" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="454" bodyend="454"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>exception indicating access out of the defined range </para>    </briefdescription>
    <detaileddescription>
<para>This exception is thrown in case a library function is called on an input parameter that exceeds the expected range, for instance in case of array indices or nonexisting object keys.</para><para>Exceptions have ids 4xx.</para><para><table rows="7" cols="3"><row>
<entry thead="yes"><para>name / id  </para></entry><entry thead="yes"><para>example message  </para></entry><entry thead="yes"><para>description ----------<mdash/>   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.401  </para></entry><entry thead="no"><para>array index 3 is out of range  </para></entry><entry thead="no"><para>The provided array index <emphasis>i</emphasis> is larger than <emphasis>size-1</emphasis>.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.402  </para></entry><entry thead="no"><para>array index &apos;-&apos; (3) is out of range  </para></entry><entry thead="no"><para>The special array index <computeroutput>-</computeroutput> in a JSON Pointer never describes a valid element of the array, but the index past the end. That is, it can only be used to add elements at this position, but not to read it.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.403  </para></entry><entry thead="no"><para>key &apos;foo&apos; not found  </para></entry><entry thead="no"><para>The provided key was not found in the JSON object.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.404  </para></entry><entry thead="no"><para>unresolved reference token &apos;foo&apos;  </para></entry><entry thead="no"><para>A reference token in a JSON Pointer could not be resolved.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.405  </para></entry><entry thead="no"><para>JSON pointer has no parent  </para></entry><entry thead="no"><para>The JSON Patch operations &apos;remove&apos; and &apos;add&apos; can not be applied to the root element of the JSON value.   </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.406  </para></entry><entry thead="no"><para>number overflow parsing &apos;10E1000&apos;  </para></entry><entry thead="no"><para>A parsed number could not be stored as without changing it to NaN or INF.   </para></entry></row>
</table>
</para><para>{The following code shows how an <computeroutput><ref refid="classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref></computeroutput> exception can be caught.,<ref refid="classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref>}</para><para><simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1exception" kindref="compound">exception</ref> for the base class of the library exceptions </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1parse__error" kindref="compound">parse_error</ref> for exceptions indicating a parse error </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1invalid__iterator" kindref="compound">invalid_iterator</ref> for exceptions indicating errors with iterators </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1type__error" kindref="compound">type_error</ref> for exceptions indicating executing a member function with a wrong type </para></simplesect>
<simplesect kind="see"><para><ref refid="classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref> for exceptions indicating other library errors</para></simplesect>
<simplesect kind="since"><para>version 3.0.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3734">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="3735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3736">
        <label>std::exception</label>
      </node>
      <node id="3735">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3736" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3737">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="3738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3739">
        <label>std::exception</label>
      </node>
      <node id="3738">
        <label>nlohmann::detail::exception</label>
        <link refid="classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="3739" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" line="445" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/json.hpp" bodystart="444" bodyend="455"/>
    <listofallmembers>
      <member refid="classnlohmann_1_1detail_1_1out__of__range_1a3f6d82a6f967c4728a1ec735a7867073" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>create</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>exception</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>id</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>name</name></member>
      <member refid="classnlohmann_1_1detail_1_1out__of__range_1ab5fe402019dba957558499502f0fd731" prot="private" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>out_of_range</name></member>
      <member refid="classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
