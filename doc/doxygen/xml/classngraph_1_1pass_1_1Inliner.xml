<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1pass_1_1Inliner" kind="class" language="C++" prot="public">
    <compoundname>ngraph::pass::Inliner</compoundname>
    <basecompoundref refid="classngraph_1_1pass_1_1ModulePass" prot="public" virt="non-virtual">ngraph::pass::ModulePass</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngraph_1_1pass_1_1Inliner_1a46fb432db01f9bc450489edacfe71fc9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1pass_1_1InliningHeuristics" kindref="compound">InliningHeuristics</ref> &gt;</type>
        <definition>std::shared_ptr&lt;InliningHeuristics&gt; ngraph::pass::Inliner::m_inlining_heuristics</definition>
        <argsstring></argsstring>
        <name>m_inlining_heuristics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="80" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pass_1_1Inliner_1a230a1fa7a229210b5d101898588ac66b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ngraph::pass::Inliner::m_depth</definition>
        <argsstring></argsstring>
        <name>m_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="81" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1pass_1_1Inliner_1a7a65ff44044200e63c4b1a1986821bb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngraph::pass::Inliner::Inliner</definition>
        <argsstring>(std::shared_ptr&lt; InliningHeuristics &gt; ih)</argsstring>
        <name>Inliner</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1pass_1_1InliningHeuristics" kindref="compound">InliningHeuristics</ref> &gt;</type>
          <declname>ih</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="64" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1Inliner_1aba839d00afdfee2f433422fafbd0838a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pass::Inliner::run_on_function_call</definition>
        <argsstring>(std::shared_ptr&lt; ngraph::op::FunctionCall &gt; fc)</argsstring>
        <name>run_on_function_call</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1FunctionCall" kindref="compound">ngraph::op::FunctionCall</ref> &gt;</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="74" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.cpp" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1Inliner_1a993e2bd4ad100e86e359a7d2050f9253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngraph::pass::Inliner::run_on_functions</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; ngraph::op::FunctionCall &gt;&gt;, std::shared_ptr&lt; ngraph::Function &gt; caller)</argsstring>
        <name>run_on_functions</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1op_1_1FunctionCall" kindref="compound">ngraph::op::FunctionCall</ref> &gt;&gt;</type>
          <defname>callees</defname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">ngraph::Function</ref> &gt;</type>
          <declname>caller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="75" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.cpp" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pass_1_1Inliner_1aff6a6f0cf865a93d923f28f3fbcb7c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ngraph::pass::Inliner::run_on_module</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; ngraph::Function &gt;&gt; &amp;) override</argsstring>
        <name>run_on_module</name>
        <reimplements refid="classngraph_1_1pass_1_1ModulePass_1ae9edbd032dd8a9007e748e472f234e15">run_on_module</reimplements>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">ngraph::Function</ref> &gt;&gt; &amp;</type>
          <defname>funcs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="77" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.cpp" bodystart="109" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classngraph_1_1pass_1_1Inliner_1aba4c952adbcaae72ea720d61c46dbb70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pass::Inliner::inline_function_call</definition>
        <argsstring>(std::shared_ptr&lt; ngraph::Node &gt; inlinee, std::shared_ptr&lt; ngraph::Function &gt; caller)</argsstring>
        <name>inline_function_call</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref> &gt;</type>
          <declname>inlinee</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Function" kindref="compound">ngraph::Function</ref> &gt;</type>
          <declname>caller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="71" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.cpp" bodystart="48" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3126">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3125">
        <label>ngraph::pass::ModulePass</label>
        <link refid="classngraph_1_1pass_1_1ModulePass"/>
        <childnode refid="3126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3124">
        <label>ngraph::pass::Inliner</label>
        <link refid="classngraph_1_1pass_1_1Inliner"/>
        <childnode refid="3125" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3129">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3128">
        <label>ngraph::pass::ModulePass</label>
        <link refid="classngraph_1_1pass_1_1ModulePass"/>
        <childnode refid="3129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3127">
        <label>ngraph::pass::Inliner</label>
        <link refid="classngraph_1_1pass_1_1Inliner"/>
        <childnode refid="3128" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" line="62" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/inliner.hpp" bodystart="61" bodyend="82"/>
    <listofallmembers>
      <member refid="classngraph_1_1pass_1_1PassBase_1a6a9dcb9d4bce48982a2b617aa0bda044" prot="protected" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>get_state</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1aba4c952adbcaae72ea720d61c46dbb70" prot="public" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>inline_function_call</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1a7a65ff44044200e63c4b1a1986821bb2" prot="public" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>Inliner</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1a230a1fa7a229210b5d101898588ac66b" prot="private" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>m_depth</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1a46fb432db01f9bc450489edacfe71fc9" prot="private" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>m_inlining_heuristics</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1aba839d00afdfee2f433422fafbd0838a" prot="public" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>run_on_function_call</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1a993e2bd4ad100e86e359a7d2050f9253" prot="public" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>run_on_functions</name></member>
      <member refid="classngraph_1_1pass_1_1Inliner_1aff6a6f0cf865a93d923f28f3fbcb7c66" prot="public" virt="virtual"><scope>ngraph::pass::Inliner</scope><name>run_on_module</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1ad8ce3a63e3dbc2ff63e6c6f51a8505b8" prot="protected" virt="non-virtual"><scope>ngraph::pass::Inliner</scope><name>set_state</name></member>
      <member refid="classngraph_1_1pass_1_1ModulePass_1ae3cff670a30498d887d704044b344e53" prot="public" virt="virtual"><scope>ngraph::pass::Inliner</scope><name>~ModulePass</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1a1c9216df0fd4e6740ad7db6b3d632c81" prot="public" virt="virtual"><scope>ngraph::pass::Inliner</scope><name>~PassBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
