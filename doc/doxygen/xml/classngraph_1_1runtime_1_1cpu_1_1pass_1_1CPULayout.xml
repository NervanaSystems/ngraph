<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout" kind="class" language="C++" prot="public">
    <compoundname>ngraph::runtime::cpu::pass::CPULayout</compoundname>
    <basecompoundref refid="classngraph_1_1pass_1_1CallGraphPass" prot="public" virt="non-virtual">ngraph::pass::CallGraphPass</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1a6abd62fc2184bda00574f0e62961262c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1cpu_1_1CPU__ExternalFunction" kindref="compound">CPU_ExternalFunction</ref> &gt;</type>
        <definition>std::shared_ptr&lt;CPU_ExternalFunction&gt; ngraph::runtime::cpu::pass::CPULayout::m_external_function</definition>
        <argsstring></argsstring>
        <name>m_external_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="55" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1a0ca20c324ceb4f4f7de32652e1edfd69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngraph::runtime::cpu::pass::CPULayout::CPULayout</definition>
        <argsstring>(std::shared_ptr&lt; CPU_ExternalFunction &gt; external_function)</argsstring>
        <name>CPULayout</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1runtime_1_1cpu_1_1CPU__ExternalFunction" kindref="compound">CPU_ExternalFunction</ref> &gt;</type>
          <declname>external_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="42" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1aa7b75263aecac6a36658582ee3c71f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool runtime::cpu::pass::CPULayout::run_on_call_graph</definition>
        <argsstring>(const std::list&lt; std::shared_ptr&lt; Node &gt;&gt; &amp;nodes) override</argsstring>
        <name>run_on_call_graph</name>
        <param>
          <type>const std::list&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="47" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.cpp" bodystart="295" bodyend="312"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1acaec841a3b3a090ea2c88fdec99c92e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void ngraph::runtime::cpu::pass::CPULayout::layout</definition>
        <argsstring>(ngraph::runtime::cpu::CPU_ExternalFunction *external_function, std::shared_ptr&lt; ngraph::Node &gt; node)</argsstring>
        <name>layout</name>
        <param>
          <type><ref refid="classngraph_1_1runtime_1_1cpu_1_1CPU__ExternalFunction" kindref="compound">ngraph::runtime::cpu::CPU_ExternalFunction</ref> *</type>
          <declname>external_function</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1afcb9f8297a04b6bfd2daf39264af10a4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runtime::cpu::pass::CPULayout::set_default_layouts</definition>
        <argsstring>(CPU_ExternalFunction *external_function, std::shared_ptr&lt; Node &gt; node)</argsstring>
        <name>set_default_layouts</name>
        <param>
          <type><ref refid="classngraph_1_1runtime_1_1cpu_1_1CPU__ExternalFunction" kindref="compound">CPU_ExternalFunction</ref> *</type>
          <declname>external_function</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="56" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.cpp" bodystart="39" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3424">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3422">
        <label>ngraph::runtime::cpu::pass::CPULayout</label>
        <link refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout"/>
        <childnode refid="3423" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3423">
        <label>ngraph::pass::CallGraphPass</label>
        <link refid="classngraph_1_1pass_1_1CallGraphPass"/>
        <childnode refid="3424" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3427">
        <label>ngraph::pass::PassBase</label>
        <link refid="classngraph_1_1pass_1_1PassBase"/>
      </node>
      <node id="3425">
        <label>ngraph::runtime::cpu::pass::CPULayout</label>
        <link refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout"/>
        <childnode refid="3426" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3426">
        <label>ngraph::pass::CallGraphPass</label>
        <link refid="classngraph_1_1pass_1_1CallGraphPass"/>
        <childnode refid="3427" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" line="40" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/pass/cpu_layout.hpp" bodystart="39" bodyend="58"/>
    <listofallmembers>
      <member refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1a0ca20c324ceb4f4f7de32652e1edfd69" prot="public" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>CPULayout</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1a6a9dcb9d4bce48982a2b617aa0bda044" prot="protected" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>get_state</name></member>
      <member refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1acaec841a3b3a090ea2c88fdec99c92e0" prot="public" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>layout</name></member>
      <member refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1a6abd62fc2184bda00574f0e62961262c" prot="private" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>m_external_function</name></member>
      <member refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1aa7b75263aecac6a36658582ee3c71f70" prot="public" virt="virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>run_on_call_graph</name></member>
      <member refid="classngraph_1_1pass_1_1CallGraphPass_1a71bb0dfdd9c36758022784eebc18b444" prot="public" virt="pure-virtual" ambiguityscope="ngraph::pass::CallGraphPass::"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>run_on_call_graph</name></member>
      <member refid="classngraph_1_1runtime_1_1cpu_1_1pass_1_1CPULayout_1afcb9f8297a04b6bfd2daf39264af10a4" prot="private" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>set_default_layouts</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1ad8ce3a63e3dbc2ff63e6c6f51a8505b8" prot="protected" virt="non-virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>set_state</name></member>
      <member refid="classngraph_1_1pass_1_1CallGraphPass_1a9cb000d9487128bbadb832f366c79a4f" prot="public" virt="virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>~CallGraphPass</name></member>
      <member refid="classngraph_1_1pass_1_1PassBase_1a1c9216df0fd4e6740ad7db6b3d632c81" prot="public" virt="virtual"><scope>ngraph::runtime::cpu::pass::CPULayout</scope><name>~PassBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
