<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="mkldnn__utils_8cpp" kind="file" language="C++">
    <compoundname>mkldnn_utils.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">typeindex</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">unordered_set</includes>
    <includes refid="node_8hpp" local="yes">ngraph/node.hpp</includes>
    <includes refid="ops_2avg__pool_8hpp" local="yes">ngraph/ops/avg_pool.hpp</includes>
    <includes refid="batch__norm_8hpp" local="yes">ngraph/ops/batch_norm.hpp</includes>
    <includes refid="ops_2convolution_8hpp" local="yes">ngraph/ops/convolution.hpp</includes>
    <includes refid="ops_2max__pool_8hpp" local="yes">ngraph/ops/max_pool.hpp</includes>
    <includes refid="ops_2relu_8hpp" local="yes">ngraph/ops/relu.hpp</includes>
    <includes refid="element__type_8hpp" local="yes">ngraph/types/element_type.hpp</includes>
    <includes refid="mkldnn__utils_8hpp" local="yes">mkldnn_utils.hpp</includes>
    <incdepgraph>
      <node id="13208">
        <label>list</label>
      </node>
      <node id="13220">
        <label>ngraph/descriptor/buffer_pos.hpp</label>
        <link refid="buffer__pos_8hpp_source"/>
        <childnode refid="13221" relation="include">
        </childnode>
        <childnode refid="13222" relation="include">
        </childnode>
      </node>
      <node id="13175">
        <label>atomic</label>
      </node>
      <node id="13169">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp</label>
        <link refid="mkldnn__utils_8cpp"/>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13171" relation="include">
        </childnode>
        <childnode refid="13172" relation="include">
        </childnode>
        <childnode refid="13173" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13199" relation="include">
        </childnode>
        <childnode refid="13203" relation="include">
        </childnode>
        <childnode refid="13209" relation="include">
        </childnode>
        <childnode refid="13210" relation="include">
        </childnode>
        <childnode refid="13211" relation="include">
        </childnode>
        <childnode refid="13190" relation="include">
        </childnode>
        <childnode refid="13214" relation="include">
        </childnode>
      </node>
      <node id="13207">
        <label>functional</label>
      </node>
      <node id="13211">
        <label>ngraph/ops/relu.hpp</label>
        <link refid="ops_2relu_8hpp_source"/>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13201" relation="include">
        </childnode>
        <childnode refid="13200" relation="include">
        </childnode>
        <childnode refid="13212" relation="include">
        </childnode>
        <childnode refid="13204" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13186">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13187" relation="include">
        </childnode>
      </node>
      <node id="13209">
        <label>ngraph/ops/convolution.hpp</label>
        <link refid="ops_2convolution_8hpp_source"/>
        <childnode refid="13200" relation="include">
        </childnode>
      </node>
      <node id="13217">
        <label>cstdint</label>
      </node>
      <node id="13187">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13188" relation="include">
        </childnode>
        <childnode refid="13190" relation="include">
        </childnode>
      </node>
      <node id="13197">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13179" relation="include">
        </childnode>
        <childnode refid="13185" relation="include">
        </childnode>
        <childnode refid="13198" relation="include">
        </childnode>
      </node>
      <node id="13174">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="13175" relation="include">
        </childnode>
        <childnode refid="13176" relation="include">
        </childnode>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13179" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13171" relation="include">
        </childnode>
        <childnode refid="13180" relation="include">
        </childnode>
        <childnode refid="13173" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13182" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13185" relation="include">
        </childnode>
        <childnode refid="13197" relation="include">
        </childnode>
        <childnode refid="13186" relation="include">
        </childnode>
        <childnode refid="13187" relation="include">
        </childnode>
      </node>
      <node id="13221">
        <label>cassert</label>
      </node>
      <node id="13196">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="13176" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
        <childnode refid="13195" relation="include">
        </childnode>
      </node>
      <node id="13195">
        <label>stdexcept</label>
      </node>
      <node id="13200">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13201" relation="include">
        </childnode>
      </node>
      <node id="13170">
        <label>string</label>
      </node>
      <node id="13191">
        <label>map</label>
      </node>
      <node id="13210">
        <label>ngraph/ops/max_pool.hpp</label>
        <link refid="ops_2max__pool_8hpp_source"/>
        <childnode refid="13200" relation="include">
        </childnode>
      </node>
      <node id="13173">
        <label>unordered_set</label>
      </node>
      <node id="13222">
        <label>ngraph/descriptor/buffer.hpp</label>
        <link refid="buffer_8hpp_source"/>
      </node>
      <node id="13215">
        <label>mkldnn.hpp</label>
      </node>
      <node id="13190">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="13191" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13193" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13194" relation="include">
        </childnode>
        <childnode refid="13196" relation="include">
        </childnode>
      </node>
      <node id="13183">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13179" relation="include">
        </childnode>
        <childnode refid="13184" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
      </node>
      <node id="13185">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13186" relation="include">
        </childnode>
        <childnode refid="13187" relation="include">
        </childnode>
      </node>
      <node id="13188">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="13189" relation="include">
        </childnode>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
      </node>
      <node id="13182">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13180" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
      </node>
      <node id="13201">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13202" relation="include">
        </childnode>
      </node>
      <node id="13172">
        <label>typeinfo</label>
      </node>
      <node id="13212">
        <label>ngraph/ops/util/unary_elementwise_arithmetic.hpp</label>
        <link refid="unary__elementwise__arithmetic_8hpp_source"/>
        <childnode refid="13213" relation="include">
        </childnode>
      </node>
      <node id="13189">
        <label>cstdio</label>
      </node>
      <node id="13219">
        <label>tuple</label>
      </node>
      <node id="13181">
        <label>vector</label>
      </node>
      <node id="13184">
        <label>utility</label>
      </node>
      <node id="13192">
        <label>sstream</label>
      </node>
      <node id="13218">
        <label>ngraph/descriptor/layout/tensor_view_layout.hpp</label>
        <link refid="tensor__view__layout_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13219" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13220" relation="include">
        </childnode>
        <childnode refid="13198" relation="include">
        </childnode>
      </node>
      <node id="13177">
        <label>iostream</label>
      </node>
      <node id="13213">
        <label>ngraph/ops/util/unary_elementwise.hpp</label>
        <link refid="unary__elementwise_8hpp_source"/>
        <childnode refid="13200" relation="include">
        </childnode>
      </node>
      <node id="13202">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="13176">
        <label>deque</label>
      </node>
      <node id="13180">
        <label>unordered_map</label>
      </node>
      <node id="13214">
        <label>mkldnn_utils.hpp</label>
        <link refid="mkldnn__utils_8hpp_source"/>
        <childnode refid="13215" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13216" relation="include">
        </childnode>
        <childnode refid="13190" relation="include">
        </childnode>
      </node>
      <node id="13206">
        <label>chrono</label>
      </node>
      <node id="13194">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="13195" relation="include">
        </childnode>
      </node>
      <node id="13193">
        <label>type_traits</label>
      </node>
      <node id="13179">
        <label>set</label>
      </node>
      <node id="13203">
        <label>ngraph/ops/batch_norm.hpp</label>
        <link refid="batch__norm_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13200" relation="include">
        </childnode>
        <childnode refid="13204" relation="include">
        </childnode>
      </node>
      <node id="13198">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13188" relation="include">
        </childnode>
      </node>
      <node id="13205">
        <label>algorithm</label>
      </node>
      <node id="13199">
        <label>ngraph/ops/avg_pool.hpp</label>
        <link refid="ops_2avg__pool_8hpp_source"/>
        <childnode refid="13200" relation="include">
        </childnode>
      </node>
      <node id="13204">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="13205" relation="include">
        </childnode>
        <childnode refid="13206" relation="include">
        </childnode>
        <childnode refid="13176" relation="include">
        </childnode>
        <childnode refid="13207" relation="include">
        </childnode>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13208" relation="include">
        </childnode>
        <childnode refid="13191" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13180" relation="include">
        </childnode>
        <childnode refid="13173" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
      </node>
      <node id="13216">
        <label>ngraph/runtime/cpu/cpu_layout_descriptor.hpp</label>
        <link refid="cpu__layout__descriptor_8hpp_source"/>
        <childnode refid="13217" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13215" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13218" relation="include">
        </childnode>
        <childnode refid="13188" relation="include">
        </childnode>
        <childnode refid="13187" relation="include">
        </childnode>
      </node>
      <node id="13178">
        <label>memory</label>
      </node>
      <node id="13171">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mkldnn__utils_8cpp_1af07cefa33fbb18531cc33ed40e08bb49" prot="public" static="no">
        <name>TI</name>
        <param><defname>x</defname></param>
        <initializer>std::type_index(typeid(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" line="35" column="9" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mkldnn__utils_8cpp_1a2d87a4ccbab83dbfff38ee5197a2752c" prot="public" static="yes" mutable="no">
        <type>const std::unordered_set&lt; std::type_index &gt;</type>
        <definition>const std::unordered_set&lt;std::type_index&gt; s_op_registry</definition>
        <argsstring></argsstring>
        <name>s_op_registry</name>
        <initializer>{
    TI(<ref refid="classngraph_1_1op_1_1AvgPool" kindref="compound">ngraph::op::AvgPool</ref>),
    TI(<ref refid="classngraph_1_1op_1_1AvgPoolBackprop" kindref="compound">ngraph::op::AvgPoolBackprop</ref>),
    TI(<ref refid="classngraph_1_1op_1_1BatchNorm" kindref="compound">ngraph::op::BatchNorm</ref>),
    TI(<ref refid="classngraph_1_1op_1_1Convolution" kindref="compound">ngraph::op::Convolution</ref>),
    TI(<ref refid="classngraph_1_1op_1_1ConvolutionBackpropData" kindref="compound">ngraph::op::ConvolutionBackpropData</ref>),
    TI(<ref refid="classngraph_1_1op_1_1ConvolutionBackpropFilters" kindref="compound">ngraph::op::ConvolutionBackpropFilters</ref>),
    TI(<ref refid="classngraph_1_1op_1_1MaxPool" kindref="compound">ngraph::op::MaxPool</ref>),
    TI(<ref refid="classngraph_1_1op_1_1MaxPoolBackprop" kindref="compound">ngraph::op::MaxPoolBackprop</ref>),
    TI(<ref refid="classngraph_1_1op_1_1Relu" kindref="compound">ngraph::op::Relu</ref>),
    TI(<ref refid="classngraph_1_1op_1_1ReluBackprop" kindref="compound">ngraph::op::ReluBackprop</ref>)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" line="37" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mkldnn__utils_8cpp_1a5edb3ce9e89d08193c80d65aecb17709" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>, const mkldnn::memory::data_type &gt;</type>
        <definition>const std::map&lt;element::Type, const mkldnn::memory::data_type&gt; s_mkldnn_data_type_map</definition>
        <argsstring></argsstring>
        <name>s_mkldnn_data_type_map</name>
        <initializer>{
    {element::boolean, mkldnn::memory::data_type::s8},
    {element::f32, mkldnn::memory::data_type::f32},
    {element::f64, mkldnn::memory::data_type::data_undef},
    {element::i8, mkldnn::memory::data_type::s8},
    {element::i16, mkldnn::memory::data_type::s16},
    {element::i32, mkldnn::memory::data_type::s32},
    {element::i64, mkldnn::memory::data_type::data_undef},
    {element::u8, mkldnn::memory::data_type::u8},
    {element::u16, mkldnn::memory::data_type::data_undef},
    {element::u32, mkldnn::memory::data_type::data_undef},
    {element::u64, mkldnn::memory::data_type::data_undef}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" line="50" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mkldnn__utils_8cpp_1a66d9b7221766ef23cc8ac9987715df7f" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref>, const std::string &gt;</type>
        <definition>const std::map&lt;element::Type, const std::string&gt; s_mkldnn_data_type_string_map</definition>
        <argsstring></argsstring>
        <name>s_mkldnn_data_type_string_map</name>
        <initializer>{
    {element::boolean, &quot;mkldnn::memory::data_type::s8&quot;},
    {element::f32, &quot;mkldnn::memory::data_type::f32&quot;},
    {element::f64, &quot;mkldnn::memory::data_type::data_undef&quot;},
    {element::i8, &quot;mkldnn::memory::data_type::s8&quot;},
    {element::i16, &quot;mkldnn::memory::data_type::s16&quot;},
    {element::i32, &quot;mkldnn::memory::data_type::s32&quot;},
    {element::i64, &quot;mkldnn::memory::data_type::data_undef&quot;},
    {element::u8, &quot;mkldnn::memory::data_type::u8&quot;},
    {element::u16, &quot;mkldnn::memory::data_type::data_undef&quot;},
    {element::u32, &quot;mkldnn::memory::data_type::data_undef&quot;},
    {element::u64, &quot;mkldnn::memory::data_type::data_undef&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" line="63" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mkldnn__utils_8cpp_1a2a8d982a50261a9c62c9b234803c571d" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; memory::format, const std::string &gt;</type>
        <definition>const std::map&lt;memory::format, const std::string&gt; s_mkldnn_format_string_map</definition>
        <argsstring></argsstring>
        <name>s_mkldnn_format_string_map</name>
        <initializer>{
    {memory::format::format_undef, &quot;memory::format::format_undef&quot;},
    {memory::format::any, &quot;memory::format::any&quot;},
    {memory::format::blocked, &quot;memory::format::blocked&quot;},
    {memory::format::x, &quot;memory::format::x&quot;},
    {memory::format::nc, &quot;memory::format::nc&quot;},
    {memory::format::nchw, &quot;memory::format::nchw&quot;},
    {memory::format::nhwc, &quot;memory::format::nhwc&quot;},
    {memory::format::chwn, &quot;memory::format::chwn&quot;},
    {memory::format::nChw8c, &quot;memory::format::nChw8c&quot;},
    {memory::format::nChw16c, &quot;memory::format::nChw16c&quot;},
    {memory::format::oi, &quot;memory::format::oi&quot;},
    {memory::format::io, &quot;memory::format::io&quot;},
    {memory::format::oihw, &quot;memory::format::oihw&quot;},
    {memory::format::ihwo, &quot;memory::format::ihwo&quot;},
    {memory::format::hwio, &quot;memory::format::hwio&quot;},
    {memory::format::oIhw8i, &quot;memory::format::oIhw8i&quot;},
    {memory::format::oIhw16i, &quot;memory::format::oIhw16i&quot;},
    {memory::format::OIhw8i8o, &quot;memory::format::OIhw8i8o&quot;},
    {memory::format::OIhw16i16o, &quot;memory::format::OIhw16i16o&quot;},
    {memory::format::OIhw8o8i, &quot;memory::format::OIhw8o8i&quot;},
    {memory::format::OIhw16o16i, &quot;memory::format::OIhw16o16i&quot;},
    {memory::format::Oihw8o, &quot;memory::format::Oihw8o&quot;},
    {memory::format::Oihw16o, &quot;memory::format::Oihw16o&quot;},
    {memory::format::Ohwi8o, &quot;memory::format::Ohwi8o&quot;},
    {memory::format::Ohwi16o, &quot;memory::format::Ohwi16o&quot;},
    {memory::format::OhIw16o4i, &quot;memory::format::OhIw16o4i&quot;},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" line="77" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2017-2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/avg_pool.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/batch_norm.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/convolution.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/max_pool.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/relu.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/types/element_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mkldnn_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemkldnn" kindref="compound">mkldnn</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacengraph" kindref="compound">ngraph</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TI(x)<sp/>std::type_index(typeid(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_set&lt;std::type_index&gt;<sp/>s_op_registry{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1AvgPool" kindref="compound">ngraph::op::AvgPool</ref>),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1AvgPoolBackprop" kindref="compound">ngraph::op::AvgPoolBackprop</ref>),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1BatchNorm" kindref="compound">ngraph::op::BatchNorm</ref>),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1Convolution" kindref="compound">ngraph::op::Convolution</ref>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1ConvolutionBackpropData" kindref="compound">ngraph::op::ConvolutionBackpropData</ref>),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1ConvolutionBackpropFilters" kindref="compound">ngraph::op::ConvolutionBackpropFilters</ref>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1MaxPool" kindref="compound">ngraph::op::MaxPool</ref>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1MaxPoolBackprop" kindref="compound">ngraph::op::MaxPoolBackprop</ref>),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1Relu" kindref="compound">ngraph::op::Relu</ref>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>TI(<ref refid="classngraph_1_1op_1_1ReluBackprop" kindref="compound">ngraph::op::ReluBackprop</ref>)};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mapping<sp/>from<sp/>POD<sp/>types<sp/>to<sp/>MKLDNN<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;element::Type,<sp/>const<sp/>mkldnn::memory::data_type&gt;<sp/>s_mkldnn_data_type_map{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::boolean,<sp/>mkldnn::memory::data_type::s8},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::f32,<sp/>mkldnn::memory::data_type::f32},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::f64,<sp/>mkldnn::memory::data_type::data_undef},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i8,<sp/>mkldnn::memory::data_type::s8},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i16,<sp/>mkldnn::memory::data_type::s16},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i32,<sp/>mkldnn::memory::data_type::s32},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i64,<sp/>mkldnn::memory::data_type::data_undef},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u8,<sp/>mkldnn::memory::data_type::u8},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u16,<sp/>mkldnn::memory::data_type::data_undef},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u32,<sp/>mkldnn::memory::data_type::data_undef},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u64,<sp/>mkldnn::memory::data_type::data_undef}};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;element::Type,<sp/>const<sp/>std::string&gt;<sp/>s_mkldnn_data_type_string_map{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::boolean,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::s8&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::f32,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::f32&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::f64,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::data_undef&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i8,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::s8&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i16,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::s16&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i32,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::s32&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::i64,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::data_undef&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u8,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::u8&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u16,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::data_undef&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u32,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::data_undef&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{element::u64,<sp/></highlight><highlight class="stringliteral">&quot;mkldnn::memory::data_type::data_undef&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>(jbobba):<sp/>Add<sp/>the<sp/>rest<sp/>of<sp/>memory<sp/>formats<sp/>to<sp/>this<sp/>map<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;memory::format,<sp/>const<sp/>std::string&gt;<sp/>s_mkldnn_format_string_map{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::format_undef,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::format_undef&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::any,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::any&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::blocked,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::blocked&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::x,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::x&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::nc,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::nc&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::nchw,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::nchw&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::nhwc,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::nhwc&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::chwn,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::chwn&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::nChw8c,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::nChw8c&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::nChw16c,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::nChw16c&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::oi,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::oi&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::io,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::io&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::oihw,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::oihw&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::ihwo,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::ihwo&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::hwio,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::hwio&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::oIhw8i,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::oIhw8i&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::oIhw16i,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::oIhw16i&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::OIhw8i8o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::OIhw8i8o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::OIhw16i16o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::OIhw16i16o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::OIhw8o8i,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::OIhw8o8i&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::OIhw16o16i,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::OIhw16o16i&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::Oihw8o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::Oihw8o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::Oihw16o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::Oihw16o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::Ohwi8o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::Ohwi8o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::Ohwi16o,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::Ohwi16o&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{memory::format::OhIw16o4i,<sp/></highlight><highlight class="stringliteral">&quot;memory::format::OhIw16o4i&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runtime::cpu::mkldnn_utils::IsMKLDNNOp(<ref refid="classngraph_1_1Node" kindref="compound">ngraph::Node</ref>&amp;<sp/>op)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s_op_registry.find(TI(op))<sp/>!=<sp/>s_op_registry.end());</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">mkldnn::memory::format<sp/>runtime::cpu::mkldnn_utils::CreateNativeDataFormat(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1runtime_1_1cpu_1_1LayoutDescriptor" kindref="compound">ngraph::runtime::cpu::LayoutDescriptor</ref>&amp;<sp/>layout)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(layout.get_shape().size())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mkldnn::memory::format::x;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mkldnn::memory::format::nc;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mkldnn::memory::format::nchw;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mkldnn::memory::format::format_undef;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>runtime::cpu::mkldnn_utils::get_mkldnn_data_type_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">ngraph::element::Type</ref>&amp;<sp/>type)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>s_mkldnn_data_type_string_map.find(type);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>s_mkldnn_data_type_string_map.end()<sp/>||<sp/>it-&gt;second.empty())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>MKLDNN<sp/>data<sp/>type<sp/>exists<sp/>for<sp/>the<sp/>given<sp/>element<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">mkldnn::memory::data_type</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>runtime::cpu::mkldnn_utils::get_mkldnn_data_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classngraph_1_1element_1_1Type" kindref="compound">ngraph::element::Type</ref>&amp;<sp/>type)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>s_mkldnn_data_type_map.find(type);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>s_mkldnn_data_type_map.end()<sp/>||<sp/>it-&gt;second<sp/>==<sp/>memory::data_type::data_undef)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>MKLDNN<sp/>data<sp/>type<sp/>exists<sp/>for<sp/>the<sp/>given<sp/>element<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>runtime::cpu::mkldnn_utils::get_mkldnn_format_string(memory::format<sp/>fmt)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>s_mkldnn_format_string_map.find(fmt);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>s_mkldnn_format_string_map.end())</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structngraph_1_1ngraph__error" kindref="compound">ngraph_error</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>MKLDNN<sp/>format<sp/>exists<sp/>for<sp/>the<sp/>given<sp/>format<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(fmt));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/runtime/cpu/mkldnn_utils.cpp"/>
  </compounddef>
</doxygen>
