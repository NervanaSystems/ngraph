<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="reshape__elimination_8cpp" kind="file" language="C++">
    <compoundname>reshape_elimination.cpp</compoundname>
    <includes refid="reshape__elimination_8hpp" local="yes">reshape_elimination.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <includes local="no">numeric</includes>
    <includes local="no">unordered_set</includes>
    <includes refid="graph__util_8hpp" local="yes">ngraph/graph_util.hpp</includes>
    <includes refid="log_8hpp" local="yes">ngraph/log.hpp</includes>
    <includes refid="ops_2add_8hpp" local="yes">ngraph/ops/add.hpp</includes>
    <includes refid="ops_2broadcast_8hpp" local="yes">ngraph/ops/broadcast.hpp</includes>
    <includes refid="ops_2dot_8hpp" local="yes">ngraph/ops/dot.hpp</includes>
    <includes refid="parameter_8hpp" local="yes">ngraph/ops/parameter.hpp</includes>
    <includes refid="ops_2reshape_8hpp" local="yes">ngraph/ops/reshape.hpp</includes>
    <includes refid="matcher_8hpp" local="yes">ngraph/pattern/matcher.hpp</includes>
    <includes refid="any_8hpp" local="yes">ngraph/pattern/op/any.hpp</includes>
    <includes refid="label_8hpp" local="yes">ngraph/pattern/op/label.hpp</includes>
    <includes refid="util_8hpp" local="yes">ngraph/util.hpp</includes>
    <incdepgraph>
      <node id="11162">
        <label>list</label>
      </node>
      <node id="11166">
        <label>atomic</label>
      </node>
      <node id="11159">
        <label>functional</label>
      </node>
      <node id="11171">
        <label>ngraph/descriptor/tensor.hpp</label>
        <link refid="tensor_8hpp_source"/>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11158">
        <label>ngraph/pass/graph_rewrite.hpp</label>
        <link refid="graph__rewrite_8hpp_source"/>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11161" relation="include">
        </childnode>
      </node>
      <node id="11207">
        <label>ngraph/pattern/matcher.hpp</label>
        <link refid="matcher_8hpp_source"/>
        <childnode refid="11208" relation="include">
        </childnode>
        <childnode refid="11209" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11210" relation="include">
        </childnode>
        <childnode refid="11213" relation="include">
        </childnode>
        <childnode refid="11215" relation="include">
        </childnode>
      </node>
      <node id="11173">
        <label>ngraph/types/type.hpp</label>
        <link refid="type_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11174" relation="include">
        </childnode>
        <childnode refid="11178" relation="include">
        </childnode>
      </node>
      <node id="11169">
        <label>ngraph/descriptor/output.hpp</label>
        <link refid="output_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11170" relation="include">
        </childnode>
        <childnode refid="11186" relation="include">
        </childnode>
      </node>
      <node id="11187">
        <label>ngraph/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="11166" relation="include">
        </childnode>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11188" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11191" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
        <childnode refid="11170" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11171" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11213">
        <label>ngraph/pattern/op/any.hpp</label>
        <link refid="any_8hpp_source"/>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11214" relation="include">
        </childnode>
      </node>
      <node id="11208">
        <label>cassert</label>
      </node>
      <node id="11184">
        <label>ngraph/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11157">
        <label>reshape_elimination.hpp</label>
        <link refid="reshape__elimination_8hpp_source"/>
        <childnode refid="11158" relation="include">
        </childnode>
      </node>
      <node id="11183">
        <label>stdexcept</label>
      </node>
      <node id="11197">
        <label>numeric</label>
      </node>
      <node id="11161">
        <label>ngraph/pass/pass.hpp</label>
        <link refid="pass_8hpp_source"/>
        <childnode refid="11162" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11165" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11195" relation="include">
        </childnode>
      </node>
      <node id="11203">
        <label>ngraph/ops/util/requires_tensor_view_args.hpp</label>
        <link refid="requires__tensor__view__args_8hpp_source"/>
        <childnode refid="11176" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
      </node>
      <node id="11168">
        <label>string</label>
      </node>
      <node id="11200">
        <label>ngraph/ops/add.hpp</label>
        <link refid="ops_2add_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11201" relation="include">
        </childnode>
      </node>
      <node id="11179">
        <label>map</label>
      </node>
      <node id="11190">
        <label>unordered_set</label>
      </node>
      <node id="11198">
        <label>ngraph/graph_util.hpp</label>
        <link refid="graph__util_8hpp_source"/>
        <childnode refid="11196" relation="include">
        </childnode>
        <childnode refid="11199" relation="include">
        </childnode>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11162" relation="include">
        </childnode>
        <childnode refid="11179" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
      </node>
      <node id="11209">
        <label>memory.h</label>
      </node>
      <node id="11178">
        <label>ngraph/types/element_type.hpp</label>
        <link refid="element__type_8hpp_source"/>
        <childnode refid="11179" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11181" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
      </node>
      <node id="11176">
        <label>ngraph/common.hpp</label>
        <link refid="common_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11177" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
      </node>
      <node id="11170">
        <label>ngraph/descriptor/input.hpp</label>
        <link refid="input_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11171" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11174">
        <label>ngraph/shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="11175" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
      </node>
      <node id="11205">
        <label>ngraph/ops/dot.hpp</label>
        <link refid="ops_2dot_8hpp_source"/>
        <childnode refid="11177" relation="include">
        </childnode>
        <childnode refid="11203" relation="include">
        </childnode>
      </node>
      <node id="11191">
        <label>ngraph/autodiff/adjoints.hpp</label>
        <link refid="adjoints_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
      </node>
      <node id="11194">
        <label>ngraph/ops/parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="11192" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11156">
        <label>/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp</label>
        <link refid="reshape__elimination_8cpp"/>
        <childnode refid="11157" relation="include">
        </childnode>
        <childnode refid="11196" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11197" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11198" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
        <childnode refid="11200" relation="include">
        </childnode>
        <childnode refid="11204" relation="include">
        </childnode>
        <childnode refid="11205" relation="include">
        </childnode>
        <childnode refid="11194" relation="include">
        </childnode>
        <childnode refid="11206" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11213" relation="include">
        </childnode>
        <childnode refid="11215" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
      </node>
      <node id="11202">
        <label>ngraph/ops/util/binary_elementwise.hpp</label>
        <link refid="binary__elementwise_8hpp_source"/>
        <childnode refid="11203" relation="include">
        </childnode>
      </node>
      <node id="11192">
        <label>ngraph/ops/op.hpp</label>
        <link refid="op_8hpp_source"/>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11193" relation="include">
        </childnode>
      </node>
      <node id="11175">
        <label>cstdio</label>
      </node>
      <node id="11215">
        <label>ngraph/pattern/op/label.hpp</label>
        <link refid="label_8hpp_source"/>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11214" relation="include">
        </childnode>
      </node>
      <node id="11204">
        <label>ngraph/ops/broadcast.hpp</label>
        <link refid="ops_2broadcast_8hpp_source"/>
        <childnode refid="11203" relation="include">
        </childnode>
      </node>
      <node id="11164">
        <label>vector</label>
      </node>
      <node id="11177">
        <label>utility</label>
      </node>
      <node id="11201">
        <label>ngraph/ops/util/binary_elementwise_arithmetic.hpp</label>
        <link refid="binary__elementwise__arithmetic_8hpp_source"/>
        <childnode refid="11202" relation="include">
        </childnode>
      </node>
      <node id="11180">
        <label>sstream</label>
      </node>
      <node id="11210">
        <label>ngraph/ops/constant.hpp</label>
        <link refid="ops_2constant_8hpp_source"/>
        <childnode refid="11211" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11178" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
      </node>
      <node id="11165">
        <label>ngraph/function.hpp</label>
        <link refid="function_8hpp_source"/>
        <childnode refid="11166" relation="include">
        </childnode>
        <childnode refid="11167" relation="include">
        </childnode>
        <childnode refid="11162" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11186" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
        <childnode refid="11194" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11172">
        <label>iostream</label>
      </node>
      <node id="11193">
        <label>ngraph/ops/util/op_annotations.hpp</label>
        <link refid="op__annotations_8hpp_source"/>
      </node>
      <node id="11185">
        <label>deque</label>
      </node>
      <node id="11189">
        <label>unordered_map</label>
      </node>
      <node id="11199">
        <label>chrono</label>
      </node>
      <node id="11182">
        <label>ngraph/except.hpp</label>
        <link refid="except_8hpp_source"/>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11214">
        <label>ngraph/pattern/op/pattern.hpp</label>
        <link refid="pattern_8hpp_source"/>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11158" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
      </node>
      <node id="11181">
        <label>type_traits</label>
      </node>
      <node id="11160">
        <label>set</label>
      </node>
      <node id="11186">
        <label>ngraph/descriptor/tensor_view.hpp</label>
        <link refid="descriptor_2tensor__view_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11174" relation="include">
        </childnode>
      </node>
      <node id="11196">
        <label>algorithm</label>
      </node>
      <node id="11212">
        <label>ngraph/util.hpp</label>
        <link refid="util_8hpp_source"/>
        <childnode refid="11196" relation="include">
        </childnode>
        <childnode refid="11199" relation="include">
        </childnode>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11162" relation="include">
        </childnode>
        <childnode refid="11179" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
      </node>
      <node id="11195">
        <label>ngraph/pass/manager_state.hpp</label>
        <link refid="manager__state_8hpp_source"/>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11165" relation="include">
        </childnode>
      </node>
      <node id="11211">
        <label>cstring</label>
      </node>
      <node id="11163">
        <label>memory</label>
      </node>
      <node id="11206">
        <label>ngraph/ops/reshape.hpp</label>
        <link refid="ops_2reshape_8hpp_source"/>
        <childnode refid="11203" relation="include">
        </childnode>
      </node>
      <node id="11167">
        <label>initializer_list</label>
      </node>
      <node id="11188">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="reshape__elimination_8cpp_1a9bb7671087e1223c54b8cf62ea50e249" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>static std::vector&lt;T&gt; apply_permutation</definition>
        <argsstring>(std::vector&lt; T &gt; input, ngraph::AxisVector order)</argsstring>
        <name>apply_permutation</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref></type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp" line="37" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp" bodystart="37" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;reshape_elimination.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/graph_util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/add.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/broadcast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/broadcast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/dot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/parameter.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/ops/reshape.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/matcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/op/any.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/pattern/op/label.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngraph/util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>apply_permutation(std::vector&lt;T&gt;<sp/>input,<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">ngraph::AxisVector</ref><sp/>order)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input.size()<sp/>!=<sp/>order.size())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;input<sp/>and<sp/>order<sp/>sizes<sp/>don&apos;t<sp/>match!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>output(input.size());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>order.size();<sp/>i++)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>input.at(order.at(i));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ngraph::pass::ReshapeElimination::construct_identity_reshape_pattern()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_op{3};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_r1{1,<sp/>3};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/>shape_op);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reshape1<sp/>=<sp/>std::make_shared&lt;op::Reshape&gt;(op,<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref>{0},<sp/>shape_r1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>callback<sp/>=<sp/>[op](pattern::Matcher&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>callback<sp/>for<sp/>construct_identity_reshape_pattern<sp/>against<sp/>node<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m.match_root()-&gt;get_name();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pattern_map<sp/>=<sp/>m.get_pattern_map();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ngraph::Node&gt;<sp/>nn;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gop<sp/>=<sp/>pattern_map[op];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>std::dynamic_pointer_cast&lt;op::Reshape&gt;(m.match_root());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1-&gt;get_shape()<sp/>!=<sp/>gop-&gt;get_shape())</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>no-op;<sp/>Shapes<sp/>are<sp/>different!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>do_r1(r1-&gt;get_shape().size());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(begin(do_r1),<sp/>end(do_r1),<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_r1<sp/>!=<sp/>r1-&gt;get_input_order())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>no-op;<sp/>Not<sp/>in<sp/>default<sp/>input<sp/>order!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gop;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::make_shared&lt;ngraph::pattern::Matcher&gt;(reshape1,<sp/>callback);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;add_matcher(m);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ngraph::pass::ReshapeElimination::construct_reshapex2_pattern()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_op{3};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>shape_r1{1,<sp/>3};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>std::make_shared&lt;pattern::op::Label&gt;(element::f32,<sp/>shape_op);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reshape1<sp/>=<sp/>std::make_shared&lt;op::Reshape&gt;(op,<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref>{0},<sp/>shape_r1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reshape2<sp/>=<sp/>std::make_shared&lt;op::Reshape&gt;(reshape1,<sp/><ref refid="namespacengraph_1ace79ef4b996f377753162926c987a2dd" kindref="member">AxisVector</ref>{0,<sp/>1},<sp/>shape_op);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>callback<sp/>=<sp/>[op](pattern::Matcher&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>callback<sp/>for<sp/>construct_reshapex2_pattern<sp/>against<sp/>node<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m.match_root()-&gt;get_name();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pattern_map<sp/>=<sp/>m.get_pattern_map();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ngraph::Node&gt;<sp/>nn;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gop<sp/>=<sp/>pattern_map[op];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gop-&gt;get_shape()<sp/>!=<sp/>m.match_root()-&gt;get_shape())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Operand<sp/>shape<sp/>doesn&apos;t<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>second<sp/>reshape!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gop<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gop-&gt;get_name()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;shape<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(gop-&gt;get_shape());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;match_root<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.match_root()-&gt;get_name()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;shape<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(m.match_root()-&gt;get_shape());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/>std::dynamic_pointer_cast&lt;op::Reshape&gt;(m.match_root());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>std::dynamic_pointer_cast&lt;op::Reshape&gt;(r2-&gt;get_input_op(0));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>do_r2(r1-&gt;get_shape().size());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(begin(do_r2),<sp/>end(do_r2),<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref><sp/>do_r1(gop-&gt;get_shape().size());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(begin(do_r1),<sp/>end(do_r1),<sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;r1&apos;s<sp/>i/o<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(r1-&gt;get_input_order())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;do_r1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(do_r1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;r2&apos;s<sp/>i/o<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(r2-&gt;get_input_order())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;do_r2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vector_to_string(do_r2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1-&gt;get_input_order()<sp/>==<sp/>do_r1<sp/>&amp;&amp;<sp/>r2-&gt;get_input_order()<sp/>==<sp/>do_r2)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Two<sp/>reshapes<sp/>were<sp/>removed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gop;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>perm1<sp/>=<sp/>apply_permutation(do_r1,<sp/>r1-&gt;get_input_order());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>perm2<sp/>=<sp/>apply_permutation(perm1,<sp/>r2-&gt;get_input_order());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(perm2<sp/>==<sp/>do_r1)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NGRAPH_DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Two<sp/>transposes<sp/>were<sp/>removed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gop;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::make_shared&lt;ngraph::pattern::Matcher&gt;(reshape2,<sp/>callback);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;add_matcher(m);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pass/reshape_elimination.cpp"/>
  </compounddef>
</doxygen>
