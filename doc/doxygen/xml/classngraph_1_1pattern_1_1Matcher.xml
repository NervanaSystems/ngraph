<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1pattern_1_1Matcher" kind="class" language="C++" prot="public">
    <compoundname>ngraph::pattern::Matcher</compoundname>
    <includes refid="matcher_8hpp" local="no">matcher.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classngraph_1_1pattern_1_1Matcher_1a736b14236a358b684b1d350421640b2c" prot="public" static="no">
        <type>std::map&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1pattern_1_1op_1_1Label" kindref="compound">op::Label</ref> &gt;, std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &gt;</type>
        <definition>using ngraph::pattern::Matcher::PatternMap =  std::map&lt;std::shared_ptr&lt;op::Label&gt;, std::shared_ptr&lt;Node&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PatternMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="47" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1pattern_1_1Matcher_1a3bc32c56ac253b5f7c736ed6007494e1" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Node&gt; ngraph::pattern::Matcher::m_match_root</definition>
        <argsstring></argsstring>
        <name>m_match_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="83" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pattern_1_1Matcher_1a5548e3e24115a2829c620a399bfd5f65" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Node&gt; ngraph::pattern::Matcher::m_pattern_node</definition>
        <argsstring></argsstring>
        <name>m_pattern_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="84" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pattern_1_1Matcher_1a895234c05a9263baff390dcd6033efb4" prot="protected" static="no" mutable="no">
        <type>PatternMap</type>
        <definition>PatternMap ngraph::pattern::Matcher::m_pattern_map</definition>
        <argsstring></argsstring>
        <name>m_pattern_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="85" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngraph_1_1pattern_1_1Matcher_1aca56c2405102a9076a6a3f7e7767e60e" prot="private" static="no" mutable="no">
        <type>gr_callback_fn</type>
        <definition>gr_callback_fn ngraph::pattern::Matcher::m_callback</definition>
        <argsstring></argsstring>
        <name>m_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="99" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1pattern_1_1Matcher_1ac6ff281067c607c0f2a159686a897971" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ngraph::pattern::Matcher::m_depth</definition>
        <argsstring></argsstring>
        <name>m_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="100" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_acd9ec8d5ec1effc747b40c0d4fff74f0_1acd9ec8d5ec1effc747b40c0d4fff74f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ngraph::pattern::Matcher::Matcher</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; pattern_node=nullptr, gr_callback_fn callback=nullptr)</argsstring>
        <name>Matcher</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>pattern_node</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>gr_callback_fn</type>
          <declname>callback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classngraph_1_1pattern_1_1Matcher" kindref="compound">Matcher</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern_node</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pattern sub graph that will be matched against input graphs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>is a callback function that will be called on a successful match </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="53" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a60dde5c2b9b581d35fa1962eeaa035ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ngraph::pattern::Matcher::~Matcher</definition>
        <argsstring>()</argsstring>
        <name>~Matcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="60" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_a17c542a2dbddc2352df89a4ed20920f5_1a17c542a2dbddc2352df89a4ed20920f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;graph_node)</argsstring>
        <name>match</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>graph_node</declname>
        </param>
        <briefdescription>
<para>Matches a pattern to <computeroutput>graph_node</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph_node</parametername>
</parameternamelist>
<parameterdescription>
<para>is an input graph to be matched against </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="64" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="240" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1acd7cf7702ff9460b2ea07848bd3d11ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Node &gt; ngraph::pattern::Matcher::process_match</definition>
        <argsstring>(gr_callback_fn callback=nullptr)</argsstring>
        <name>process_match</name>
        <param>
          <type>gr_callback_fn</type>
          <declname>callback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="66" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="205" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1aa035558e2d5c91a17bc430f764384101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ngraph::pattern::Matcher::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="68" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a711348796822390ffe5580d43f196a2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Node&gt; ngraph::pattern::Matcher::pattern_node</definition>
        <argsstring>()</argsstring>
        <name>pattern_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="69" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a941e8647b448a401c676b48ba27b68f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Node &gt; ngraph::pattern::Matcher::match_root</definition>
        <argsstring>()</argsstring>
        <name>match_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="70" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a5145ecd378b6ebd545c208b4636f62d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PatternMap</type>
        <definition>PatternMap ngraph::pattern::Matcher::get_pattern_map</definition>
        <argsstring>()</argsstring>
        <name>get_pattern_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="71" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1ad83b6dc27567f4d2067e556da6e33c35" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match_node</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;pattern_node, const std::shared_ptr&lt; Node &gt; &amp;graph_node, PatternMap &amp;pattern_map)</argsstring>
        <name>match_node</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>pattern_node</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>graph_node</declname>
        </param>
        <param>
          <type>PatternMap &amp;</type>
          <declname>pattern_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="75" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="108" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a20d61c65faae9016d0a1d12b71d8c306" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match_arguments</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;pattern_node, const std::shared_ptr&lt; Node &gt; &amp;graph_node, PatternMap &amp;pattern_map)</argsstring>
        <name>match_arguments</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>pattern_node</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>graph_node</declname>
        </param>
        <param>
          <type>PatternMap &amp;</type>
          <declname>pattern_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="79" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="160" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a000798eaaee33dbb17978b86bf7957ac" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string ngraph::pattern::Matcher::pad</definition>
        <argsstring>(size_t num)</argsstring>
        <name>pad</name>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="88" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1a66c2592f9ffc599bb9e1e7c2e1f4f30b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match_permutation</definition>
        <argsstring>(const Nodes &amp;pattern_args, const Nodes &amp;args, PatternMap &amp;pattern_map)</argsstring>
        <name>match_permutation</name>
        <param>
          <type>const <ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref> &amp;</type>
          <declname>pattern_args</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a193a29e9e6878bb1690debde6f87bdee" kindref="member">Nodes</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PatternMap &amp;</type>
          <declname>pattern_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="89" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="143" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1ac799e68dd104e4733715394db5e5fdbb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match_pattern</definition>
        <argsstring>(const std::shared_ptr&lt; op::Label &gt; &amp;pattern_node, const std::shared_ptr&lt; Node &gt; &amp;graph_node, PatternMap &amp;pattern_map)</argsstring>
        <name>match_pattern</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1pattern_1_1op_1_1Label" kindref="compound">op::Label</ref> &gt; &amp;</type>
          <declname>pattern_node</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>graph_node</declname>
        </param>
        <param>
          <type>PatternMap &amp;</type>
          <declname>pattern_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="92" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="42" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1pattern_1_1Matcher_1aec7274229183b34ef5b0c7d741277481" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ngraph::pattern::Matcher::match_any</definition>
        <argsstring>(const std::shared_ptr&lt; op::Any &gt; &amp;pattern_node, const std::shared_ptr&lt; Node &gt; &amp;graph_node, PatternMap &amp;pattern_map)</argsstring>
        <name>match_any</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1pattern_1_1op_1_1Any" kindref="compound">op::Any</ref> &gt; &amp;</type>
          <declname>pattern_node</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>graph_node</declname>
        </param>
        <param>
          <type>PatternMap &amp;</type>
          <declname>pattern_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="95" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.cpp" bodystart="86" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classngraph_1_1pattern_1_1Matcher" kindref="compound">Matcher</ref> matches (compares) two graphs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3212">
        <label>K</label>
      </node>
      <node id="3213">
        <label>T</label>
      </node>
      <node id="3209">
        <label>ngraph::pattern::Matcher</label>
        <link refid="classngraph_1_1pattern_1_1Matcher"/>
        <childnode refid="3210" relation="usage">
          <edgelabel>m_pattern_map</edgelabel>
        </childnode>
      </node>
      <node id="3211">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="3212" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="3213" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3210">
        <label>std::map&lt; std::shared_ptr&lt; op::Label &gt;, std::shared_ptr&lt; Node &gt; &gt;</label>
        <childnode refid="3211" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; op::Label &gt;, std::shared_ptr&lt; Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" line="45" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/pattern/matcher.hpp" bodystart="44" bodyend="101"/>
    <listofallmembers>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a5145ecd378b6ebd545c208b4636f62d6" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>get_pattern_map</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1aca56c2405102a9076a6a3f7e7767e60e" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>m_callback</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1ac6ff281067c607c0f2a159686a897971" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>m_depth</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a3bc32c56ac253b5f7c736ed6007494e1" prot="protected" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>m_match_root</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a895234c05a9263baff390dcd6033efb4" prot="protected" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>m_pattern_map</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a5548e3e24115a2829c620a399bfd5f65" prot="protected" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>m_pattern_node</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_a17c542a2dbddc2352df89a4ed20920f5_1a17c542a2dbddc2352df89a4ed20920f5" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>match</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1aec7274229183b34ef5b0c7d741277481" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>match_any</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a20d61c65faae9016d0a1d12b71d8c306" prot="protected" virt="virtual"><scope>ngraph::pattern::Matcher</scope><name>match_arguments</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1ad83b6dc27567f4d2067e556da6e33c35" prot="protected" virt="virtual"><scope>ngraph::pattern::Matcher</scope><name>match_node</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1ac799e68dd104e4733715394db5e5fdbb" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>match_pattern</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a66c2592f9ffc599bb9e1e7c2e1f4f30b" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>match_permutation</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a941e8647b448a401c676b48ba27b68f1" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>match_root</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_acd9ec8d5ec1effc747b40c0d4fff74f0_1acd9ec8d5ec1effc747b40c0d4fff74f0" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>Matcher</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a000798eaaee33dbb17978b86bf7957ac" prot="private" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>pad</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a711348796822390ffe5580d43f196a2d" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>pattern_node</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a736b14236a358b684b1d350421640b2c" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>PatternMap</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1acd7cf7702ff9460b2ea07848bd3d11ff" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>process_match</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1aa035558e2d5c91a17bc430f764384101" prot="public" virt="non-virtual"><scope>ngraph::pattern::Matcher</scope><name>reset</name></member>
      <member refid="classngraph_1_1pattern_1_1Matcher_1a60dde5c2b9b581d35fa1962eeaa035ff" prot="public" virt="virtual"><scope>ngraph::pattern::Matcher</scope><name>~Matcher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
