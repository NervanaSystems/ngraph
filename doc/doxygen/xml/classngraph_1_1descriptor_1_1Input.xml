<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1descriptor_1_1Input" kind="class" language="C++" prot="public">
    <compoundname>ngraph::descriptor::Input</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classngraph_1_1descriptor_1_1Input_1a6db9d28bd448a131448276ee03de1e6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Node</definition>
        <argsstring></argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="35" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1descriptor_1_1Input_1a8ff7f076171523a965e02de9cac1355d" prot="protected" static="no" mutable="no">
        <type><ref refid="classngraph_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* ngraph::descriptor::Input::m_node</definition>
        <argsstring></argsstring>
        <name>m_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="79" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1descriptor_1_1Input_1a7cc123cc98240caff6677d4c64eaace4" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ngraph::descriptor::Input::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="80" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1descriptor_1_1Input_1a01fa7e3d33fc7fec30839e745db03283" prot="protected" static="no" mutable="no">
        <type><ref refid="classngraph_1_1descriptor_1_1Output" kindref="compound">Output</ref> *</type>
        <definition>Output* ngraph::descriptor::Input::m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="81" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a1a64ccf759e6ff9074b8905b4a1e7095_1a1a64ccf759e6ff9074b8905b4a1e7095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Input::Input</definition>
        <argsstring>(Node *node, size_t index, Output &amp;output)</argsstring>
        <name>Input</name>
        <param>
          <type><ref refid="classngraph_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classngraph_1_1descriptor_1_1Output" kindref="compound">Output</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that owns this input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of this this tensor in all input tensors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output that supplies a value for this input </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="41" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a4fa304e11a947ff02d04b1fa70ca51a3_1a4fa304e11a947ff02d04b1fa70ca51a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Node &gt; Input::get_node</definition>
        <argsstring>()</argsstring>
        <name>get_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the node that this is an input of </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="44" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_ad6a57ab8f9b1d352912c4aa4c0bc2d1e_1ad6a57ab8f9b1d352912c4aa4c0bc2d1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ngraph::descriptor::Input::get_index</definition>
        <argsstring>() const</argsstring>
        <name>get_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the position within all supplied tensors of this input </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="47" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1a2e6e30dbd1c4d0a74ac1a85832e93510" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1descriptor_1_1Output" kindref="compound">Output</ref> &amp;</type>
        <definition>const Output&amp; ngraph::descriptor::Input::get_output</definition>
        <argsstring>() const</argsstring>
        <name>get_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="49" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1a66600b1cdaadc8f33f989161ad60c542" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classngraph_1_1descriptor_1_1Output" kindref="compound">Output</ref> &amp;</type>
        <definition>Output&amp; ngraph::descriptor::Input::get_output</definition>
        <argsstring>()</argsstring>
        <name>get_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="51" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1a7b5da09396624740eee83964d5e3df9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>const Tensor &amp; Input::get_tensor</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="53" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1a438886a7ba4acc3e990d7c8490b6f3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngraph_1_1descriptor_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor &amp; Input::get_tensor</definition>
        <argsstring>()</argsstring>
        <name>get_tensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="56" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1ad3e821d79db68b6233f95b105678b19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Input::replace_output</definition>
        <argsstring>(std::shared_ptr&lt; Node &gt; node, size_t i)</argsstring>
        <name>replace_output</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="58" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1adf497eb40838b7c6821f5863cd2ebb84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Input::replace_output</definition>
        <argsstring>(Output &amp;output)</argsstring>
        <name>replace_output</name>
        <param>
          <type><ref refid="classngraph_1_1descriptor_1_1Output" kindref="compound">Output</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="59" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a6704431241f9f4cb07089de136940d64_1a6704431241f9f4cb07089de136940d64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape &amp; Input::get_shape</definition>
        <argsstring>() const</argsstring>
        <name>get_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the shape of the connected output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="73" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="75" bodyend="78"/>
        <references refid="classngraph_1_1descriptor_1_1Input_a170b416c0a8d24c576c6736d43e966fd_1a170b416c0a8d24c576c6736d43e966fd" compoundref="input_8cpp" startline="70" endline="73">get_tensor_view_type</references>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a273df1cbef7bf8c9aa66a53daa4ab507_1a273df1cbef7bf8c9aa66a53daa4ab507" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classngraph_1_1element_1_1Type" kindref="compound">element::Type</ref> &amp;</type>
        <definition>const element::Type &amp; Input::get_element_type</definition>
        <argsstring>() const</argsstring>
        <name>get_element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the element type of the connected output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="76" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="80" bodyend="83"/>
        <references refid="classngraph_1_1descriptor_1_1Input_a170b416c0a8d24c576c6736d43e966fd_1a170b416c0a8d24c576c6736d43e966fd" compoundref="input_8cpp" startline="70" endline="73">get_tensor_view_type</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_ad2c9b507dbe609a6ab2c41693cbbf140_1ad2c9b507dbe609a6ab2c41693cbbf140" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">TensorView</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const TensorView &gt; Input::get_tensor_view</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tensor view for the connected output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="63" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a67a1b65d452b9f460659626c32dbd407_1a67a1b65d452b9f460659626c32dbd407" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1descriptor_1_1TensorView" kindref="compound">TensorView</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TensorView &gt; Input::get_tensor_view</definition>
        <argsstring>()</argsstring>
        <name>get_tensor_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tensor view for the connected output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="66" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_a170b416c0a8d24c576c6736d43e966fd_1a170b416c0a8d24c576c6736d43e966fd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classngraph_1_1TensorViewType" kindref="compound">TensorViewType</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const TensorViewType &gt; Input::get_tensor_view_type</definition>
        <argsstring>() const</argsstring>
        <name>get_tensor_view_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tensor view type for the connected output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="69" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.cpp" bodystart="70" bodyend="73"/>
        <referencedby refid="classngraph_1_1descriptor_1_1Input_a6704431241f9f4cb07089de136940d64_1a6704431241f9f4cb07089de136940d64" compoundref="input_8cpp" startline="75" endline="78">get_shape</referencedby>
        <referencedby refid="classngraph_1_1descriptor_1_1Input_a273df1cbef7bf8c9aa66a53daa4ab507_1a273df1cbef7bf8c9aa66a53daa4ab507" compoundref="input_8cpp" startline="80" endline="83">get_element_type</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1aba797643f42ed7ccffd64dd63936c134" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngraph::descriptor::Input::Input</definition>
        <argsstring>(const Input &amp;)=delete</argsstring>
        <name>Input</name>
        <param>
          <type>const <ref refid="classngraph_1_1descriptor_1_1Input" kindref="compound">Input</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1aa2869cf32d6f645e2ce5bf31ecc199c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngraph::descriptor::Input::Input</definition>
        <argsstring>(Input &amp;&amp;)=delete</argsstring>
        <name>Input</name>
        <param>
          <type><ref refid="classngraph_1_1descriptor_1_1Input" kindref="compound">Input</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1descriptor_1_1Input_1a5dc9a681a996d17a0b0a64a7be7fdbe9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngraph_1_1descriptor_1_1Input" kindref="compound">Input</ref> &amp;</type>
        <definition>Input&amp; ngraph::descriptor::Input::operator=</definition>
        <argsstring>(const Input &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classngraph_1_1descriptor_1_1Input" kindref="compound">Input</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="86" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="68">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_outputs</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>liveness_live_list</edgelabel>
          <edgelabel>liveness_free_list</edgelabel>
          <edgelabel>liveness_new_list</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>m_users</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_node_type</edgelabel>
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>K</label>
      </node>
      <node id="72">
        <label>T</label>
      </node>
      <node id="81">
        <label>std::multiset&lt; ngraph::Node *&gt;</label>
        <childnode refid="68" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="82" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>std::unordered_map&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</label>
        <childnode refid="85" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="87" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>ngraph::element::Type</label>
        <link refid="classngraph_1_1element_1_1Type"/>
      </node>
      <node id="64">
        <label>ngraph::descriptor::Output</label>
        <link refid="classngraph_1_1descriptor_1_1Output"/>
        <childnode refid="65" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>ngraph::descriptor::Tensor</label>
        <link refid="classngraph_1_1descriptor_1_1Tensor"/>
        <childnode refid="75" relation="usage">
          <edgelabel>m_element_type</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>m_primary_tensor_view</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>ngraph::descriptor::PrimaryTensorView</label>
        <link refid="classngraph_1_1descriptor_1_1PrimaryTensorView"/>
        <childnode refid="79" relation="public-inheritance">
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_tensor</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>ngraph::descriptor::TensorView</label>
        <link refid="classngraph_1_1descriptor_1_1TensorView"/>
        <childnode refid="76" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::deque&lt; ngraph::descriptor::Output &gt;</label>
        <childnode refid="64" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="71" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="69">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="65">
        <label>std::set&lt; ngraph::descriptor::Input *&gt;</label>
        <childnode refid="63" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="66" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::set&lt; K &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>ngraph::descriptor::Input</label>
        <link refid="classngraph_1_1descriptor_1_1Input"/>
        <childnode refid="64" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::multiset&lt; K &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::deque&lt; ngraph::descriptor::Input &gt;</label>
        <childnode refid="63" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="71" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input &gt;</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::unordered_set&lt; K &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>std::unordered_map&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</label>
        <childnode refid="68" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="87" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>std::unordered_set&lt; ngraph::descriptor::Tensor *&gt;</label>
        <childnode refid="74" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="80" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Tensor *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>ngraph::autodiff::Adjoints</label>
        <link refid="classngraph_1_1autodiff_1_1Adjoints"/>
        <childnode refid="86" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::deque&lt; T &gt;</label>
        <childnode refid="72" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>std::string</label>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" line="34" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/descriptor/input.hpp" bodystart="33" bodyend="87"/>
    <listofallmembers>
      <member refid="classngraph_1_1descriptor_1_1Input_a273df1cbef7bf8c9aa66a53daa4ab507_1a273df1cbef7bf8c9aa66a53daa4ab507" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_element_type</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_ad6a57ab8f9b1d352912c4aa4c0bc2d1e_1ad6a57ab8f9b1d352912c4aa4c0bc2d1e" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_index</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_a4fa304e11a947ff02d04b1fa70ca51a3_1a4fa304e11a947ff02d04b1fa70ca51a3" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_node</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a2e6e30dbd1c4d0a74ac1a85832e93510" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_output</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a66600b1cdaadc8f33f989161ad60c542" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_output</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_a6704431241f9f4cb07089de136940d64_1a6704431241f9f4cb07089de136940d64" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a7b5da09396624740eee83964d5e3df9d" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_tensor</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a438886a7ba4acc3e990d7c8490b6f3af" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_tensor</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_ad2c9b507dbe609a6ab2c41693cbbf140_1ad2c9b507dbe609a6ab2c41693cbbf140" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_tensor_view</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_a67a1b65d452b9f460659626c32dbd407_1a67a1b65d452b9f460659626c32dbd407" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_tensor_view</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_a170b416c0a8d24c576c6736d43e966fd_1a170b416c0a8d24c576c6736d43e966fd" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>get_tensor_view_type</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_a1a64ccf759e6ff9074b8905b4a1e7095_1a1a64ccf759e6ff9074b8905b4a1e7095" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>Input</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1aba797643f42ed7ccffd64dd63936c134" prot="private" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>Input</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1aa2869cf32d6f645e2ce5bf31ecc199c2" prot="private" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>Input</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a7cc123cc98240caff6677d4c64eaace4" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>m_index</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a8ff7f076171523a965e02de9cac1355d" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>m_node</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a01fa7e3d33fc7fec30839e745db03283" prot="protected" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>m_output</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a6db9d28bd448a131448276ee03de1e6d" prot="private" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>Node</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1a5dc9a681a996d17a0b0a64a7be7fdbe9" prot="private" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>operator=</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1ad3e821d79db68b6233f95b105678b19c" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>replace_output</name></member>
      <member refid="classngraph_1_1descriptor_1_1Input_1adf497eb40838b7c6821f5863cd2ebb84" prot="public" virt="non-virtual"><scope>ngraph::descriptor::Input</scope><name>replace_output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
