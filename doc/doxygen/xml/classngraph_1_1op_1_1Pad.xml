<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classngraph_1_1op_1_1Pad" kind="class" language="C++" prot="public">
    <compoundname>ngraph::op::Pad</compoundname>
    <basecompoundref refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs" prot="public" virt="non-virtual">ngraph::op::util::RequiresTensorViewArgs</basecompoundref>
    <includes refid="ops_2pad_8hpp" local="no">pad.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classngraph_1_1op_1_1Pad_1ad8263ce06f24cf644fd467b663ec2731" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref></type>
        <definition>Shape ngraph::op::Pad::m_padding_below</definition>
        <argsstring></argsstring>
        <name>m_padding_below</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="86" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Pad_1a4ef31281e59af195a2c5bcb4cd417fae" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref></type>
        <definition>Shape ngraph::op::Pad::m_padding_above</definition>
        <argsstring></argsstring>
        <name>m_padding_above</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="87" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classngraph_1_1op_1_1Pad_1a1ff8d6c9d67a78e2e2c82c9b22ddd72d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref></type>
        <definition>Shape ngraph::op::Pad::m_padding_interior</definition>
        <argsstring></argsstring>
        <name>m_padding_interior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="88" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_a737895ad51d33c3021edbc5dc8f9d9b0_1a737895ad51d33c3021edbc5dc8f9d9b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>op::Pad::Pad</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; &amp;arg, const std::shared_ptr&lt; Node &gt; &amp;arg_pad_value, const Shape &amp;padding_below, const Shape &amp;padding_above, const Shape &amp;padding_interior)</argsstring>
        <name>Pad</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>arg_pad_value</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_below</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_above</declname>
        </param>
        <param>
          <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
          <declname>padding_interior</declname>
        </param>
        <briefdescription>
<para>Constructs a generic padding operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing input tensor to be padded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_pad_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The node producing the scalar value to be inserted for padding. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_below</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-below widths. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_above</parametername>
</parameternamelist>
<parameterdescription>
<para>The padding-above widths. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_interior</parametername>
</parameternamelist>
<parameterdescription>
<para>The interior-padding widths. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="69" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp" bodystart="23" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_1a30bf514c278683de9d14fd4b6159b2ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Node &gt; op::Pad::copy_with_new_args</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Node &gt;&gt; &amp;new_args) const override</argsstring>
        <name>copy_with_new_args</name>
        <reimplements refid="classngraph_1_1Node_1a0c3c1afcdb7effe100c653b86a2eb56e">copy_with_new_args</reimplements>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt;&gt; &amp;</type>
          <declname>new_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="75" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_a6d26d81354095a835a96c41515f77549_1a6d26d81354095a835a96c41515f77549" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape&amp; ngraph::op::Pad::get_padding_below</definition>
        <argsstring>() const</argsstring>
        <name>get_padding_below</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The padding-below sizes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="78" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_afc166afea7651d7ca9d0cf5fbf4ede36_1afc166afea7651d7ca9d0cf5fbf4ede36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape&amp; ngraph::op::Pad::get_padding_above</definition>
        <argsstring>() const</argsstring>
        <name>get_padding_above</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The padding-above sizes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="80" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_ac4e3ea739eff37cba3b217029574a51f_1ac4e3ea739eff37cba3b217029574a51f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacengraph_1a4389a36f258ceab3d6622e166a24e3bb" kindref="member">Shape</ref> &amp;</type>
        <definition>const Shape&amp; ngraph::op::Pad::get_padding_interior</definition>
        <argsstring>() const</argsstring>
        <name>get_padding_interior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The interior padding sizes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="82" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classngraph_1_1op_1_1Pad_1a9ae5b4730de9d4ee025e226f450be5e6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void op::Pad::generate_adjoints</definition>
        <argsstring>(autodiff::Adjoints &amp;adjoints, const std::shared_ptr&lt; Node &gt; &amp;delta) override</argsstring>
        <name>generate_adjoints</name>
        <reimplements refid="classngraph_1_1Node_1a423c05a93bb628e8c311b631fb6a582c">generate_adjoints</reimplements>
        <param>
          <type><ref refid="classngraph_1_1autodiff_1_1Adjoints" kindref="compound">autodiff::Adjoints</ref> &amp;</type>
          <declname>adjoints</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classngraph_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="84" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic constant-padding operation. </para>    </briefdescription>
    <detaileddescription>
<para>Takes an input tensor of shape <formula id="26">$(d_1,\dots,d_n)$</formula> and pads by inserting a scalar <formula id="43">$x$</formula> supplied as input, in three possible ways:</para><para><orderedlist>
<listitem><para><emphasis>(exterior padding)</emphasis> inserts copies of <formula id="43">$x$</formula> <emphasis>below or above</emphasis> the bounds of existing rows, columns, etc.,</para></listitem><listitem><para><emphasis>(interior padding)</emphasis> inserts copies of <formula id="43">$x$</formula> <emphasis>between</emphasis> rows, columns, etc., or</para></listitem><listitem><para>both of the above.</para></listitem></orderedlist>
</para><para>The number and position of elements to be inserted along a given axis is determined by three parameters:</para><para><orderedlist>
<listitem><para><emphasis>(the padding-below sizes)</emphasis> a vector of non-negative integers <formula id="44">$(p_1,\dots,p_n)$</formula>,</para></listitem><listitem><para><emphasis>(the padding-above sizes)</emphasis> a vector of non-negative integers <formula id="45">$(q_1,\dots,q_n)$</formula>, and</para></listitem><listitem><para><emphasis>(the interior padding sizes)</emphasis> a vector of non-negative integers <formula id="46">$(r_1,\dots,r_n)$</formula>.</para></listitem></orderedlist>
</para><para>The output tensor will have the shape <formula id="47">$(d&apos;_1,\dots,d&apos;_n)$</formula> where <formula id="48">$d&apos;_i = p_i + (d_i - 1)(r_i + 1) + 1 + q_i$</formula> if <formula id="23">$d_i &gt; 0$</formula>, and <formula id="49">$d&apos;_i = p_i + q_i$</formula> if <formula id="50">$d_i = 0$</formula>.</para><para>Example: given a 3x3 tensor, with interior-padding sizes of <computeroutput>{1,2}</computeroutput>, padding-below of <computeroutput>{1,2}</computeroutput>, padding-above of <computeroutput>{1,0}</computeroutput>, and a pad-value of <computeroutput>42</computeroutput>, we obtain:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/><sp/>1<sp/>42<sp/>42<sp/><sp/>2<sp/>42<sp/>42<sp/><sp/>3</highlight></codeline>
<codeline><highlight class="normal">1<sp/>2<sp/>3<sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42</highlight></codeline>
<codeline><highlight class="normal">4<sp/>5<sp/>6<sp/>--&gt;<sp/>42<sp/>42<sp/><sp/>4<sp/>42<sp/>42<sp/><sp/>5<sp/>42<sp/>42<sp/><sp/>6</highlight></codeline>
<codeline><highlight class="normal">7<sp/>8<sp/>9<sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/><sp/>7<sp/>42<sp/>42<sp/><sp/>8<sp/>42<sp/>42<sp/><sp/>9</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42<sp/>42</highlight></codeline>
</programlisting></para><para>In other words we have inserted one new row between each pair of adjacent rows, two new columns between each pair of adjacent columns, one new row at the top and two new columns on the left, and one new row at the bottom and zero new columns on the right; then filled the new rows and columns with <computeroutput>42</computeroutput>.</para><para>(Note that <computeroutput>below</computeroutput> and <computeroutput>above</computeroutput> here refer respectively to lower- or higher-numbered coordinate indices, and numbering starts at the upper-left corner; thus inserting a row &quot;below&quot; actually inserts it at the &quot;top&quot; of the matrix.) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1884">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="1885" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1882">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="1883" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1881">
        <label>ngraph::op::Pad</label>
        <link refid="classngraph_1_1op_1_1Pad"/>
        <childnode refid="1882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1885">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="1883">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="1884" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1889">
        <label>ngraph::Node</label>
        <link refid="classngraph_1_1Node"/>
        <childnode refid="1890" relation="public-inheritance">
        </childnode>
        <childnode refid="1891" relation="usage">
          <edgelabel>m_outputs</edgelabel>
        </childnode>
        <childnode refid="1899" relation="usage">
          <edgelabel>liveness_live_list</edgelabel>
          <edgelabel>liveness_free_list</edgelabel>
          <edgelabel>liveness_new_list</edgelabel>
        </childnode>
        <childnode refid="1907" relation="usage">
          <edgelabel>m_users</edgelabel>
        </childnode>
        <childnode refid="1909" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="1910" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
        <childnode refid="1902" relation="usage">
          <edgelabel>m_node_type</edgelabel>
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="1887">
        <label>ngraph::op::util::RequiresTensorViewArgs</label>
        <link refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs"/>
        <childnode refid="1888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1896">
        <label>K</label>
      </node>
      <node id="1898">
        <label>T</label>
      </node>
      <node id="1907">
        <label>std::multiset&lt; ngraph::Node *&gt;</label>
        <childnode refid="1889" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1908" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="1915">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="1898" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1913">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="1896" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1898" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1910">
        <label>std::unordered_map&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</label>
        <childnode refid="1911" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="1889" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1913" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, ngraph::autodiff::Adjoints &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1886">
        <label>ngraph::op::Pad</label>
        <link refid="classngraph_1_1op_1_1Pad"/>
        <childnode refid="1887" relation="public-inheritance">
        </childnode>
        <childnode refid="1914" relation="usage">
          <edgelabel>m_padding_above</edgelabel>
          <edgelabel>m_padding_below</edgelabel>
          <edgelabel>m_padding_interior</edgelabel>
        </childnode>
      </node>
      <node id="1901">
        <label>ngraph::element::Type</label>
        <link refid="classngraph_1_1element_1_1Type"/>
      </node>
      <node id="1892">
        <label>ngraph::descriptor::Output</label>
        <link refid="classngraph_1_1descriptor_1_1Output"/>
        <childnode refid="1893" relation="usage">
          <edgelabel>m_inputs</edgelabel>
        </childnode>
        <childnode refid="1889" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="1900">
        <label>ngraph::descriptor::Tensor</label>
        <link refid="classngraph_1_1descriptor_1_1Tensor"/>
        <childnode refid="1901" relation="usage">
          <edgelabel>m_element_type</edgelabel>
        </childnode>
        <childnode refid="1902" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="1904" relation="usage">
          <edgelabel>m_primary_tensor_view</edgelabel>
        </childnode>
      </node>
      <node id="1904">
        <label>ngraph::descriptor::PrimaryTensorView</label>
        <link refid="classngraph_1_1descriptor_1_1PrimaryTensorView"/>
        <childnode refid="1905" relation="public-inheritance">
        </childnode>
        <childnode refid="1900" relation="usage">
          <edgelabel>m_tensor</edgelabel>
        </childnode>
      </node>
      <node id="1905">
        <label>ngraph::descriptor::TensorView</label>
        <link refid="classngraph_1_1descriptor_1_1TensorView"/>
        <childnode refid="1902" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="1891">
        <label>std::deque&lt; ngraph::descriptor::Output &gt;</label>
        <childnode refid="1892" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="1897" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1903">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1890">
        <label>std::enable_shared_from_this&lt; Node &gt;</label>
      </node>
      <node id="1893">
        <label>std::set&lt; ngraph::descriptor::Input *&gt;</label>
        <childnode refid="1894" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1895" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="1888">
        <label>ngraph::op::Op</label>
        <link refid="classngraph_1_1op_1_1Op"/>
        <childnode refid="1889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1895">
        <label>std::set&lt; K &gt;</label>
        <childnode refid="1896" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1894">
        <label>ngraph::descriptor::Input</label>
        <link refid="classngraph_1_1descriptor_1_1Input"/>
        <childnode refid="1892" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
        <childnode refid="1889" relation="usage">
          <edgelabel>m_node</edgelabel>
        </childnode>
      </node>
      <node id="1908">
        <label>std::multiset&lt; K &gt;</label>
        <childnode refid="1896" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1909">
        <label>std::deque&lt; ngraph::descriptor::Input &gt;</label>
        <childnode refid="1894" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="1897" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Input &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1906">
        <label>std::unordered_set&lt; K &gt;</label>
        <childnode refid="1896" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1914">
        <label>std::vector&lt; size_t &gt;</label>
        <childnode refid="1915" relation="template-instance">
          <edgelabel>&lt; size_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1912">
        <label>std::unordered_map&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</label>
        <childnode refid="1889" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1913" relation="template-instance">
          <edgelabel>&lt; ngraph::Node *, std::shared_ptr&lt; ngraph::Node &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1899">
        <label>std::unordered_set&lt; ngraph::descriptor::Tensor *&gt;</label>
        <childnode refid="1900" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="1906" relation="template-instance">
          <edgelabel>&lt; ngraph::descriptor::Tensor *&gt;</edgelabel>
        </childnode>
      </node>
      <node id="1911">
        <label>ngraph::autodiff::Adjoints</label>
        <link refid="classngraph_1_1autodiff_1_1Adjoints"/>
        <childnode refid="1912" relation="usage">
          <edgelabel>m_adjoint_map</edgelabel>
        </childnode>
      </node>
      <node id="1897">
        <label>std::deque&lt; T &gt;</label>
        <childnode refid="1898" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1902">
        <label>std::string</label>
        <childnode refid="1903" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" line="60" column="1" bodyfile="/home/indie/libraries/private-ngraph-cpp/src/ngraph/ops/pad.hpp" bodystart="59" bodyend="89"/>
    <listofallmembers>
      <member refid="classngraph_1_1Node_1a1bac19895a096bb5772f6a6c120b3813" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>add_output</name></member>
      <member refid="classngraph_1_1Node_1a5f3de445063d95cb31842e3a44e487c8" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>backprop_node</name></member>
      <member refid="classngraph_1_1Node_1a99c230728fde81ca9e64ed393d0728c4" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>clear_arguments</name></member>
      <member refid="classngraph_1_1op_1_1Pad_1a30bf514c278683de9d14fd4b6159b2ec" prot="public" virt="virtual"><scope>ngraph::op::Pad</scope><name>copy_with_new_args</name></member>
      <member refid="classngraph_1_1Node_1a92598fdffd86cf6fd3adf0081e041d2f" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>description</name></member>
      <member refid="classngraph_1_1op_1_1Pad_1a9ae5b4730de9d4ee025e226f450be5e6" prot="protected" virt="virtual"><scope>ngraph::op::Pad</scope><name>generate_adjoints</name></member>
      <member refid="classngraph_1_1Node_1a08ce613a6a22b1083c05321f0dced2a6" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_element_type</name></member>
      <member refid="classngraph_1_1Node_1abb77c47e270bdf0622587ee86919b492" prot="public" virt="virtual"><scope>ngraph::op::Pad</scope><name>get_functions</name></member>
      <member refid="classngraph_1_1Node_1a98841a99a32bdcf64a371ff2aed2abc1" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_input_element_type</name></member>
      <member refid="classngraph_1_1Node_1aa7aaefcd4db958482315af48cb221a6c" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_input_op</name></member>
      <member refid="classngraph_1_1Node_1ac9b5aed803ef1f50a02a87dc81034ffe" prot="public" virt="virtual"><scope>ngraph::op::Pad</scope><name>get_input_ops</name></member>
      <member refid="classngraph_1_1Node_1a9ff5f656d6b183cc00af753ec6b6144a" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_input_shape</name></member>
      <member refid="classngraph_1_1Node_1a69c6620b65b11187bf367a2d0e440699" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_input_size</name></member>
      <member refid="classngraph_1_1Node_1a3e88cf704f45f337a48d79a16a54e2c7" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a3d47e40f640c1469db01a33611a993e0" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_inputs</name></member>
      <member refid="classngraph_1_1Node_1a7a189270f6c1d02aa62c11b82d837bfb" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_instance_id</name></member>
      <member refid="classngraph_1_1Node_1ab0228a9136af1c06e6c32503871aa037" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_name</name></member>
      <member refid="classngraph_1_1Node_1a49900b3c7bc6ee44c466a622ccf52f71" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_node_id</name></member>
      <member refid="classngraph_1_1op_1_1Op_1a4f467309aee6d72bb286c09cd09c4bbf" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a91ccdcd6a30ca5a265c74f0f2734210b" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_element_type</name></member>
      <member refid="classngraph_1_1Node_1a68967e741c4045d22b712c5f644f5fa7" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_inputs</name></member>
      <member refid="classngraph_1_1Node_1a29bad373294c6939549d3302c6c5b45c" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_shape</name></member>
      <member refid="classngraph_1_1Node_1a9257d1be4e21fd9b4e834ee763c9ab03" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_size</name></member>
      <member refid="classngraph_1_1Node_1a0cb34ea18330939c53fbf7fe15603c32" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a1d7465ea8dda0f2f22c13929656d4291" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_tensor</name></member>
      <member refid="classngraph_1_1Node_1a45ae2b4b094d1d91d1c867dc30143d7a" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1a75b38938bbc73474c8ea083b36da876c" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_output_tensor_view</name></member>
      <member refid="classngraph_1_1Node_1ac9aae122c66b9d82c240fd35c1e45250" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1Node_1aed735e2ef3cda31846ec7f0a85ebd5d8" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Pad_afc166afea7651d7ca9d0cf5fbf4ede36_1afc166afea7651d7ca9d0cf5fbf4ede36" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_padding_above</name></member>
      <member refid="classngraph_1_1op_1_1Pad_a6d26d81354095a835a96c41515f77549_1a6d26d81354095a835a96c41515f77549" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_padding_below</name></member>
      <member refid="classngraph_1_1op_1_1Pad_ac4e3ea739eff37cba3b217029574a51f_1ac4e3ea739eff37cba3b217029574a51f" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_padding_interior</name></member>
      <member refid="classngraph_1_1Node_1a7a690a13f82f2420e221be4ef0987f56" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>get_shape</name></member>
      <member refid="classngraph_1_1Node_1a17548877a029631148b2fa00c2f11fcb" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>has_same_type</name></member>
      <member refid="classngraph_1_1Node_1ad0a48043e7858c06a2c91b25c2e88030" prot="public" virt="virtual"><scope>ngraph::op::Pad</scope><name>is_commutative</name></member>
      <member refid="classngraph_1_1Node_1aa560b6ff7736831265cf1ce1346e6376" prot="public" virt="virtual"><scope>ngraph::op::Pad</scope><name>is_constant</name></member>
      <member refid="classngraph_1_1Node_1ad3ae6e9bcbf2462a074847fdf47ab986" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>is_output</name></member>
      <member refid="classngraph_1_1Node_1ab700ac2bc2dec9138e3e1575b49075c6" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>is_parameter</name></member>
      <member refid="classngraph_1_1Node_ad69bb7920f3c6898754e0e938461fa8c_1ad69bb7920f3c6898754e0e938461fa8c" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>is_same_op_type</name></member>
      <member refid="classngraph_1_1Node_1a4f36c2c5ae51d1073d5bc23ab44cd72f" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>liveness_free_list</name></member>
      <member refid="classngraph_1_1Node_1aa58e8eb953c65c957dbdc56d7aa1dca5" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>liveness_live_list</name></member>
      <member refid="classngraph_1_1Node_1a572f0f0ef5cb7d309a86b1ffddda7da1" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>liveness_new_list</name></member>
      <member refid="classngraph_1_1Node_1a881dacc03050bbe8dc679455c99bfaa8" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_adjoint_map</name></member>
      <member refid="classngraph_1_1Node_1a4f55bb2b70a88ddcc407a2930da034e7" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_inputs</name></member>
      <member refid="classngraph_1_1Node_1ae927d96858146fd4aad4f7a9d6c03e8e" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a034da5cfe5401a01045f2fd8a9374ca7" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_is_output</name></member>
      <member refid="classngraph_1_1Node_1af72ec96a91723b94174886a947835f93" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_name</name></member>
      <member refid="classngraph_1_1Node_1afc2e9023e2895f9d7465062ce7bbd49e" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_next_instance_id</name></member>
      <member refid="classngraph_1_1Node_1a9d06e17d8a569f809d6d322edb405b24" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_node_type</name></member>
      <member refid="classngraph_1_1Node_1a177ab91b7609c16e8d57e1a7182f2bd0" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_outputs</name></member>
      <member refid="classngraph_1_1op_1_1Pad_1a4ef31281e59af195a2c5bcb4cd417fae" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_padding_above</name></member>
      <member refid="classngraph_1_1op_1_1Pad_1ad8263ce06f24cf644fd467b663ec2731" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_padding_below</name></member>
      <member refid="classngraph_1_1op_1_1Pad_1a1ff8d6c9d67a78e2e2c82c9b22ddd72d" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_padding_interior</name></member>
      <member refid="classngraph_1_1Node_1ad0f9c97f26a1ad8a42b7308f0e4773f5" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>m_users</name></member>
      <member refid="classngraph_1_1Node_1a0259d67ef3d6d82e38dbafa62d1463e2" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>Node</name></member>
      <member refid="classngraph_1_1op_1_1Op_1adfb9351528f9956627f25e07baa560fa" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>Op</name></member>
      <member refid="classngraph_1_1op_1_1Pad_a737895ad51d33c3021edbc5dc8f9d9b0_1a737895ad51d33c3021edbc5dc8f9d9b0" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>Pad</name></member>
      <member refid="classngraph_1_1op_1_1util_1_1RequiresTensorViewArgs_a4ec9a470de62c9b1986d139f72717eb5_1a4ec9a470de62c9b1986d139f72717eb5" prot="protected" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>RequiresTensorViewArgs</name></member>
      <member refid="classngraph_1_1Node_1a7bcdb7230a14c3c76a38392bfeacea1a" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>set_is_output</name></member>
      <member refid="classngraph_1_1Node_1a21c1e9e47d5447ba37982d1bbc57e79c" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>set_name</name></member>
      <member refid="classngraph_1_1op_1_1Op_1aba75fd5c954f4480c2e4ddb4e1fc5f2a" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>set_op_annotations</name></member>
      <member refid="classngraph_1_1Node_1a0a2d35a1430bc4671184eec8e1425640" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a7500930e175b8f522d26988796727ce1" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>set_value_type_checked</name></member>
      <member refid="classngraph_1_1Node_1a1ca1186be7560ca6fd3a4bc1819526a1" prot="public" virt="non-virtual"><scope>ngraph::op::Pad</scope><name>users</name></member>
      <member refid="classngraph_1_1Node_1a2a6579e8a1f70539b8e47d100eb06ae6" prot="protected" virt="virtual"><scope>ngraph::op::Pad</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
