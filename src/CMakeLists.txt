# Copyright 2017 Nervana Systems Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include_directories(SYSTEM ${EIGEN_INCLUDE_DIR})

set (SRC
    log.cpp
    ngraph/descriptor/input.cpp
    ngraph/descriptor/output.cpp
    ngraph/descriptor/tensor_view.cpp
    ngraph/descriptor/tensor.cpp
    ngraph/node.cpp
    ngraph/shape.cpp
    ngraph/pass/assign_tensors.cpp
    ngraph/pass/call_pass.cpp
    ngraph/pass/liveness.cpp
    ngraph/pass/manager.cpp
    ngraph/pass/memory_layout.cpp
    ngraph/pass/pass.cpp
    ngraph/pass/propagate_types.cpp
    ngraph/pass/topological_sort.cpp
    ngraph/pass/tree_pass.cpp
    ngraph/runtime/call_frame.cpp
    ngraph/runtime/eigen/tensor_view.cpp
    ngraph/shape.cpp
    ngraph/visualize.cpp
    ops/binary_elementwise_arithmetic.cpp
    ops/binary_elementwise_builtin.cpp
    ops/binary_elementwise_comparison.cpp
    ops/broadcast.cpp
    ops/concatenate.cpp
    ops/constant.cpp
    ops/convert.cpp
    ops/dot.cpp
    ops/function.cpp
    ops/op.cpp
    ops/parameter.cpp
    ops/tuple.cpp
    ops/unary_elementwise_arithmetic.cpp
    ops/unary_elementwise_builtin.cpp
    tree.cpp
    types/element_type.cpp
    types/type.cpp
    util.cpp
    )

set(NGRAPH_INCLUDE_PATH
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/ngraph
)

# find_program (GRAPHVIZ dot)
# message (STATUS "graphviz '${GRAPHVIZ}'")
find_package(Graphviz)
if (GRAPHVIZ_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGRAPHVIZ_FOUND")
endif()

include_directories("${NGRAPH_INCLUDE_PATH}")

add_library(ngraph SHARED ${SRC})
target_include_directories(ngraph PUBLIC "${NGRAPH_INCLUDE_PATH}")

if (APPLE)
    set_property(TARGET ngraph PROPERTY PREFIX "lib")
    set_property(TARGET ngraph PROPERTY OUTPUT_NAME "ngraph.so")
    set_property(TARGET ngraph PROPERTY SUFFIX "")
endif()

#-----------------------------------------------------------------------------------------------
# Installation logic...
#-----------------------------------------------------------------------------------------------

# Default installation location for cmake usually is /usr/include or /usr/local/include
# which requires sudo access on most servers. Also, this creates a problem for the shared
# development systems (e.g., build servers).
#
# Therefore we are setting the installation directory so that by defult "make install"
# won't override artifacts generated by other users.
#
# The user can always override this by using the cmake command listed below.
set(CMAKE_INSTALL_PREFIX "$ENV{HOME}/ngraph_dist" CACHE PATH "Install directory" FORCE)
message (STATUS "Installation directory: ${CMAKE_INSTALL_PREFIX}")
message (STATUS "To Override use: cmake -DCMAKE_INSTALL_PREFIX=/foo -P cmake_install.cmake")

install(TARGETS ngraph DESTINATION ${CMAKE_INSTALL_PREFIX})
install(DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}/ngraph
    DESTINATION ${CMAKE_INSTALL_PREFIX}
    FILES_MATCHING PATTERN "*.hpp"
)

add_dependencies(ngraph eigen)
